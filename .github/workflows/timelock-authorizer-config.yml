name: Timelock Authorizer

on:
  push:
    branches:
      - master
  pull_request:
    branches: ['*', '**/*']
  schedule:
    - cron: "0 0 * * *"

jobs:
  verify-timelock-authorizer-config:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        network: [arbitrum, avalanche, base, bsc, fraxtal, gnosis, hyperevm, mainnet, mode, optimism, polygon, sepolia, zkevm]
    steps:
      - uses: actions/checkout@v4
      - name: Verify ${{ matrix.network }} Timelock Authorizer Configuration
        uses: ./.github/actions/verify-network-timelock-authorizer-config
        env:
          ARBITRUM_RPC_ENDPOINT: ${{ secrets.ARBITRUM_RPC_ENDPOINT }}
          AVALANCHE_RPC_ENDPOINT: ${{ secrets.AVALANCHE_RPC_ENDPOINT }}
          BASE_RPC_ENDPOINT: ${{ secrets.BASE_RPC_ENDPOINT }}
          BINANCE_RPC_ENDPOINT: ${{ secrets.BINANCE_RPC_ENDPOINT }}
          FRAXTAL_RPC_ENDPOINT: ${{ secrets.FRAXTAL_RPC_ENDPOINT }}
          GNOSIS_RPC_ENDPOINT: ${{ secrets.GNOSIS_RPC_ENDPOINT }}
          HYPEREVM_RPC_ENDPOINT: ${{ secrets.HYPEREVM_RPC_ENDPOINT }}
          MAINNET_RPC_ENDPOINT: ${{ secrets.MAINNET_RPC_ENDPOINT }}
          MODE_RPC_ENDPOINT: ${{ secrets.MODE_RPC_ENDPOINT }}
          OPTIMISM_RPC_ENDPOINT: ${{ secrets.OPTIMISM_RPC_ENDPOINT }}
          POLYGON_RPC_ENDPOINT: ${{ secrets.POLYGON_RPC_ENDPOINT }}
          SEPOLIA_RPC_ENDPOINT: ${{ secrets.SEPOLIA_RPC_ENDPOINT }}
          ZKEVM_RPC_ENDPOINT: ${{ secrets.ZKEVM_RPC_ENDPOINT }}
        with:
          network-name: ${{ matrix.network }}

env:
  CI: true
