{
  "id": "97e3b1398f63256b52713bab54b703fc",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.1",
  "solcLongVersion": "0.7.1+commit.f4a555be",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/20220322-veBAL-activation/veBALDeploymentCoordinator.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\";\nimport \"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\";\n\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol\";\nimport \"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol\";\n\n// solhint-disable not-rely-on-time\n\n/**\n * @dev The currently deployed Authorizer has a different interface relative to the Authorizer in the monorepo\n * for granting/revoking roles(referred to as permissions in the new Authorizer) and so we require a one-off interface\n */\ninterface ICurrentAuthorizer is IAuthorizer {\n    // solhint-disable-next-line func-name-mixedcase\n    function DEFAULT_ADMIN_ROLE() external view returns (bytes32);\n\n    function grantRole(bytes32 role, address account) external;\n\n    function revokeRole(bytes32 role, address account) external;\n}\n\n// https://vote.balancer.fi/#/proposal/0x9fe19c491cf90ed2e3ed9c15761c43d39fd1fb732a940aba8058ff69787ee90a\n// solhint-disable-next-line contract-name-camelcase\ncontract veBALDeploymentCoordinator is ReentrancyGuard {\n    IBalancerTokenAdmin private immutable _balancerTokenAdmin;\n\n    IVault private immutable _vault;\n    IAuthorizerAdaptor private immutable _authorizerAdaptor;\n    IBalancerToken private immutable _balancerToken;\n    IBalancerMinter private immutable _balancerMinter;\n    IGaugeController private immutable _gaugeController;\n    IGaugeAdder private immutable _gaugeAdder;\n    ILiquidityGaugeFactory private immutable _ethereumGaugeFactory;\n    ILiquidityGaugeFactory private immutable _singleRecipientGaugeFactory;\n    IBALTokenHolderFactory private immutable _balTokenHolderFactory;\n\n    address public lmCommitteeMultisig = 0xc38c5f97B34E175FFd35407fc91a937300E33860;\n\n    // All of veBAL, Polygon and Arbitrum funds are temporarily sent to multisigs which will take care of distribution\n    // until an automated system is setup.\n    address public veBALGaugeRecipient = 0xd2EB7Bd802A7CA68d9AcD209bEc4E664A9abDD7b;\n    address public polygonGaugeRecipient = 0xd2EB7Bd802A7CA68d9AcD209bEc4E664A9abDD7b;\n    address public arbitrumGaugeRecipient = 0xd2EB7Bd802A7CA68d9AcD209bEc4E664A9abDD7b;\n\n    enum DeploymentStage { PENDING, FIRST_STAGE_DONE, SECOND_STAGE_DONE, THIRD_STAGE_DONE }\n\n    uint256 public firstStageActivationTime;\n    uint256 public secondStageActivationTime;\n    uint256 public thirdStageActivationTime;\n\n    DeploymentStage private _currentDeploymentStage;\n    uint256 private immutable _activationScheduledTime;\n    uint256 private immutable _thirdStageDelay;\n\n    uint256 public constant LM_COMMITTEE_WEIGHT = 10e16; // 10%\n    uint256 public constant VEBAL_WEIGHT = 10e16; // 10%\n    uint256 public constant ETHEREUM_WEIGHT = 56e16; // 56%\n    uint256 public constant POLYGON_WEIGHT = 17e16; // 17%\n    uint256 public constant ARBITRUM_WEIGHT = 7e16; // 7%\n\n    constructor(\n        IBalancerMinter balancerMinter,\n        IAuthorizerAdaptor authorizerAdaptor,\n        IGaugeAdder gaugeAdder,\n        ILiquidityGaugeFactory ethereumGaugeFactory,\n        ILiquidityGaugeFactory singleRecipientGaugeFactory,\n        IBALTokenHolderFactory balTokenHolderFactory,\n        uint256 activationScheduledTime,\n        uint256 thirdStageDelay\n    ) {\n        _currentDeploymentStage = DeploymentStage.PENDING;\n\n        IBalancerTokenAdmin balancerTokenAdmin = balancerMinter.getBalancerTokenAdmin();\n\n        _balancerTokenAdmin = balancerTokenAdmin;\n        _vault = balancerTokenAdmin.getVault();\n        _authorizerAdaptor = authorizerAdaptor;\n        _balancerToken = balancerTokenAdmin.getBalancerToken();\n        _balancerMinter = balancerMinter;\n        _gaugeController = IGaugeController(balancerMinter.getGaugeController());\n        _gaugeAdder = gaugeAdder;\n        _ethereumGaugeFactory = ethereumGaugeFactory;\n        _singleRecipientGaugeFactory = singleRecipientGaugeFactory;\n        _balTokenHolderFactory = balTokenHolderFactory;\n\n        _activationScheduledTime = activationScheduledTime;\n        _thirdStageDelay = thirdStageDelay;\n    }\n\n    /**\n     * @notice Returns the Balancer Vault.\n     */\n    function getVault() public view returns (IVault) {\n        return _vault;\n    }\n\n    /**\n     * @notice Returns the Balancer Vault's current authorizer.\n     */\n    function getAuthorizer() public view returns (ICurrentAuthorizer) {\n        return ICurrentAuthorizer(address(getVault().getAuthorizer()));\n    }\n\n    function getAuthorizerAdaptor() public view returns (IAuthorizerAdaptor) {\n        return _authorizerAdaptor;\n    }\n\n    function getBalancerTokenAdmin() external view returns (IBalancerTokenAdmin) {\n        return _balancerTokenAdmin;\n    }\n\n    function getBalancerMinter() external view returns (IBalancerMinter) {\n        return _balancerMinter;\n    }\n\n    /**\n     * @notice Returns the address of the Gauge Controller\n     */\n    function getGaugeController() external view returns (IGaugeController) {\n        return _gaugeController;\n    }\n\n    function getCurrentDeploymentStage() external view returns (DeploymentStage) {\n        return _currentDeploymentStage;\n    }\n\n    function getActivationScheduledTime() external view returns (uint256) {\n        return _activationScheduledTime;\n    }\n\n    function getThirdStageDelay() external view returns (uint256) {\n        return _thirdStageDelay;\n    }\n\n    function performFirstStage() external nonReentrant {\n        // Check internal state\n        require(block.timestamp >= _activationScheduledTime, \"Not ready for activation\");\n        require(_currentDeploymentStage == DeploymentStage.PENDING, \"First step already performed\");\n\n        // Check external state: we need admin permission on both the BAL token and the Authorizer\n        ICurrentAuthorizer authorizer = getAuthorizer();\n        require(_balancerToken.hasRole(_balancerToken.DEFAULT_ADMIN_ROLE(), address(this)), \"Not BAL admin\");\n        require(authorizer.canPerform(bytes32(0), address(this), address(0)), \"Not Authorizer admin\");\n\n        // Also require that Balancer governance holds all relevant admin rights\n        IAuthorizerAdaptor authorizerAdaptor = getAuthorizerAdaptor();\n        require(\n            _gaugeController.voting_escrow().admin() == authorizerAdaptor,\n            \"VotingEscrow not owned by AuthorizerAdaptor\"\n        );\n        require(_gaugeController.admin() == authorizerAdaptor, \"GaugeController not owned by AuthorizerAdaptor\");\n\n        // Sanity checks\n        require(_gaugeController.n_gauge_types() == 0, \"Gauge types already set\");\n\n        // Step 1: trigger BAL token admin migration, locking the BAL emissions forever.\n        //\n        // The BalancerTokenAdmin contracts needs admin permission over BAL in order to complete this process, and we\n        // need to be authorized to make the call.\n        _balancerToken.grantRole(_balancerToken.DEFAULT_ADMIN_ROLE(), address(_balancerTokenAdmin));\n        authorizer.grantRole(_balancerTokenAdmin.getActionId(IBalancerTokenAdmin.activate.selector), address(this));\n        _balancerTokenAdmin.activate();\n        // Balancer Token Admin activation automatically removes authority over the BAL token from all other accounts,\n        // so we don't need to renounce this permission.\n\n        // Step 2: grant BalancerMinter authority to mint BAL, as part of the Liquidity Mining program.\n        authorizer.grantRole(\n            _balancerTokenAdmin.getActionId(IBalancerTokenAdmin.mint.selector),\n            address(_balancerMinter)\n        );\n\n        // Step 3: setup the Liquidity Mining program by creating the different gauge types on the Gauge Controller.\n        //\n        // All gauge types are initially created with a weight of 0, which will allow for gauges to be deployed and LPs\n        // to vote and stake for them, without yet minting any BAL. This is intended to provide a grace period for LPs\n        // to migrate to the new system before it is fully activated. The gauge type weights will be set to their actual\n        // values on the last stage of deployment.\n        {\n            // Note that the current Authorizer ignores the 'where' parameter, so we don't need to (cannot) indicate\n            // that this permission should only be granted on the gauge controller itself.\n            authorizer.grantRole(authorizerAdaptor.getActionId(IGaugeController.add_type.selector), address(this));\n\n            _addGaugeType(\"Liquidity Mining Committee\");\n            _addGaugeType(\"veBAL\");\n            _addGaugeType(\"Ethereum\");\n            _addGaugeType(\"Polygon\");\n            _addGaugeType(\"Arbitrum\");\n\n            authorizer.revokeRole(authorizerAdaptor.getActionId(IGaugeController.add_type.selector), address(this));\n        }\n\n        // Step 4: setup the GaugeAdder contract to be in charge of adding gauges to the Gauge Controller.\n        //\n        // The GaugeAdder contract performs checks on addresses being added to the Gauge Controller to ensure\n        // that they have been deployed by a factory contract which has been associated with the gauge type\n        // to which the proposed gauge is being added. This is intended to prevent common mistakes when adding gauges.\n\n        authorizer.grantRole(authorizerAdaptor.getActionId(IGaugeController.add_gauge.selector), address(_gaugeAdder));\n\n        // Step 5: create gauges for the single-recipient gauge types\n        //\n        // The LM committee gauge will be remain as a SingleRecipientGauge permanently,\n        // however the gauges for veBAL, Polygon and Arbitrum types are temporary pending an automated solution.\n        // These three gauges will in time be retired (killed) and replaced with new gauge implementations\n        // which automate the distribution of BAL to BPT stakers on other networks and veBAL holders.\n        {\n            authorizer.grantRole(authorizerAdaptor.getActionId(IGaugeController.add_gauge.selector), address(this));\n\n            // Permanent\n            _createSingleRecipientGauge(\n                IGaugeAdder.GaugeType.LiquidityMiningCommittee,\n                \"Liquidity Mining Committee BAL Holder\",\n                lmCommitteeMultisig\n            );\n\n            // Temporary\n            _createSingleRecipientGauge(\n                IGaugeAdder.GaugeType.veBAL,\n                \"Temporary veBAL Liquidity Mining BAL Holder\",\n                veBALGaugeRecipient\n            );\n\n            // Temporary\n            _createSingleRecipientGauge(\n                IGaugeAdder.GaugeType.Polygon,\n                \"Temporary Polygon Liquidity Mining BAL Holder\",\n                polygonGaugeRecipient\n            );\n            // Temporary\n            _createSingleRecipientGauge(\n                IGaugeAdder.GaugeType.Arbitrum,\n                \"Temporary Arbitrum Liquidity Mining BAL Holder\",\n                arbitrumGaugeRecipient\n            );\n\n            authorizer.revokeRole(authorizerAdaptor.getActionId(IGaugeController.add_gauge.selector), address(this));\n        }\n\n        // Step 6: grant permission to the LM Committee to add reward tokens to Ethereum gauges and manage their\n        // distributors\n        authorizer.grantRole(\n            authorizerAdaptor.getActionId(IStakingLiquidityGauge.add_reward.selector),\n            lmCommitteeMultisig\n        );\n\n        authorizer.grantRole(\n            authorizerAdaptor.getActionId(IStakingLiquidityGauge.set_reward_distributor.selector),\n            lmCommitteeMultisig\n        );\n\n        firstStageActivationTime = block.timestamp;\n        _currentDeploymentStage = DeploymentStage.FIRST_STAGE_DONE;\n    }\n\n    function performSecondStage() external nonReentrant {\n        require(_currentDeploymentStage == DeploymentStage.FIRST_STAGE_DONE, \"Not ready for second stage\");\n\n        ICurrentAuthorizer authorizer = getAuthorizer();\n\n        // Create gauges for a preselected list of pools on Ethereum. This is not included in the first stage to reduce\n        // total required gas for the execution of each stage.\n\n        address payable[32] memory initialPools = [\n            0x06Df3b2bbB68adc8B0e302443692037ED9f91b42,\n            0x072f14B85ADd63488DDaD88f855Fda4A99d6aC9B,\n            0x0b09deA16768f0799065C475bE02919503cB2a35,\n            0x186084fF790C65088BA694Df11758faE4943EE9E,\n            0x1E19CF2D73a72Ef1332C882F20534B6519Be0276,\n            0x27C9f71cC31464B906E0006d4FcBC8900F48f15f,\n            0x32296969Ef14EB0c6d29669C550D4a0449130230,\n            0x350196326AEAA9b98f1903fb5e8fc2686f85318C,\n            0x3e5FA9518eA95c3E533EB377C001702A9AaCAA32,\n            0x4bd6D86dEBdB9F5413e631Ad386c4427DC9D01B2,\n            0x51735bdFBFE3fC13dEa8DC6502E2E95898942961,\n            0x5d66FfF62c17D841935b60df5F07f6CF79Bd0F47,\n            0x5f7FA48d765053F8dD85E052843e12D23e3D7BC5,\n            0x702605F43471183158938C1a3e5f5A359d7b31ba,\n            0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2,\n            0x7Edde0CB05ED19e03A9a47CD5E53fC57FDe1c80c,\n            0x8f4205e1604133d1875a3E771AE7e4F2b0865639,\n            0x90291319F1D4eA3ad4dB0Dd8fe9E12BAF749E845,\n            0x96646936b91d6B9D7D0c47C496AfBF3D6ec7B6f8,\n            0x96bA9025311e2f47B840A1f68ED57A3DF1EA8747,\n            0xa02E4b3d18D4E6B8d18Ac421fBc3dfFF8933c40a,\n            0xA6F548DF93de924d73be7D25dC02554c6bD66dB5,\n            0xBaeEC99c90E3420Ec6c1e7A769d2A856d2898e4D,\n            0xBF96189Eee9357a95C7719f4F5047F76bdE804E5,\n            0xe2469f47aB58cf9CF59F9822e3C5De4950a41C49,\n            0xE99481DC77691d8E2456E5f3F61C1810adFC1503,\n            0xeC60a5FeF79a92c741Cb74FdD6bfC340C0279B01,\n            0xEdf085f65b4F6c155e13155502Ef925c9a756003,\n            0xEFAa1604e82e1B3AF8430b90192c1B9e8197e377,\n            0xF4C0DD9B82DA36C07605df83c8a416F11724d88b,\n            0xf5aAf7Ee8C39B651CEBF5f1F50C10631E78e0ef9,\n            0xFeadd389a5c427952D8fdb8057D6C8ba1156cC56\n        ];\n\n        // Allowlist the provided LiquidityGaugeFactory on the GaugeAdder\n        // so its gauges may be added to the \"Ethereum\" gauge type.\n        {\n            authorizer.grantRole(_gaugeAdder.getActionId(IGaugeAdder.addGaugeFactory.selector), address(this));\n\n            _gaugeAdder.addGaugeFactory(_ethereumGaugeFactory, IGaugeAdder.GaugeType.Ethereum);\n\n            authorizer.revokeRole(_gaugeAdder.getActionId(IGaugeAdder.addGaugeFactory.selector), address(this));\n        }\n\n        // Deploy initial gauges and add them to the Gauge Controller\n        {\n            authorizer.grantRole(_gaugeAdder.getActionId(IGaugeAdder.addEthereumGauge.selector), address(this));\n\n            uint256 poolsLength = initialPools.length;\n            for (uint256 i = 0; i < poolsLength; i++) {\n                ILiquidityGauge gauge = ILiquidityGauge(_ethereumGaugeFactory.create(initialPools[i]));\n                _gaugeAdder.addEthereumGauge(IStakingLiquidityGauge(address(gauge)));\n            }\n\n            authorizer.revokeRole(_gaugeAdder.getActionId(IGaugeAdder.addEthereumGauge.selector), address(this));\n        }\n\n        secondStageActivationTime = block.timestamp;\n        _currentDeploymentStage = DeploymentStage.SECOND_STAGE_DONE;\n    }\n\n    function performThirdStage() external nonReentrant {\n        // Check delay from second stage\n        require(_currentDeploymentStage == DeploymentStage.SECOND_STAGE_DONE, \"Not ready for third stage\");\n        require(\n            block.timestamp >= (secondStageActivationTime + _thirdStageDelay),\n            \"Delay from second stage not yet elapsed\"\n        );\n\n        // We can now set the actual weights for each gauge type, causing gauges to have non-zero weights once veBAL\n        // holders vote for them.\n        // Admin functions on the Gauge Controller have to be called via the the AuthorizerAdaptor, which acts as its\n        // admin.\n        IAuthorizerAdaptor authorizerAdaptor = getAuthorizerAdaptor();\n        // Note that the current Authorizer ignores the 'where' parameter, so we don't need to (cannot) indicate\n        // that this permission should only be granted on the gauge controller itself.\n        ICurrentAuthorizer authorizer = getAuthorizer();\n        authorizer.grantRole(\n            authorizerAdaptor.getActionId(IGaugeController.change_type_weight.selector),\n            address(this)\n        );\n\n        _setGaugeTypeWeight(IGaugeAdder.GaugeType.LiquidityMiningCommittee, LM_COMMITTEE_WEIGHT);\n        _setGaugeTypeWeight(IGaugeAdder.GaugeType.veBAL, VEBAL_WEIGHT);\n        _setGaugeTypeWeight(IGaugeAdder.GaugeType.Ethereum, ETHEREUM_WEIGHT);\n        _setGaugeTypeWeight(IGaugeAdder.GaugeType.Polygon, POLYGON_WEIGHT);\n        _setGaugeTypeWeight(IGaugeAdder.GaugeType.Arbitrum, ARBITRUM_WEIGHT);\n\n        authorizer.revokeRole(\n            authorizerAdaptor.getActionId(IGaugeController.change_type_weight.selector),\n            address(this)\n        );\n\n        // The entire system is now fully setup, and we can renounce permissions over the Authorizer\n        authorizer.revokeRole(authorizer.DEFAULT_ADMIN_ROLE(), address(this));\n\n        thirdStageActivationTime = block.timestamp;\n        _currentDeploymentStage = DeploymentStage.THIRD_STAGE_DONE;\n    }\n\n    function _addGauge(ILiquidityGauge gauge, IGaugeAdder.GaugeType gaugeType) private {\n        getAuthorizerAdaptor().performAction(\n            address(_gaugeController),\n            abi.encodeWithSelector(IGaugeController.add_gauge.selector, gauge, gaugeType)\n        );\n    }\n\n    function _addGaugeType(string memory name) private {\n        getAuthorizerAdaptor().performAction(\n            address(_gaugeController),\n            abi.encodeWithSelector(IGaugeController.add_type.selector, name, 0)\n        );\n    }\n\n    function _setGaugeTypeWeight(IGaugeAdder.GaugeType typeId, uint256 weight) private {\n        getAuthorizerAdaptor().performAction(\n            address(_gaugeController),\n            abi.encodeWithSelector(IGaugeController.change_type_weight.selector, int128(typeId), weight)\n        );\n    }\n\n    function _createSingleRecipientGauge(\n        IGaugeAdder.GaugeType gaugeType,\n        string memory name,\n        address recipient\n    ) private {\n        IBALTokenHolder holder = _balTokenHolderFactory.create(name);\n        ILiquidityGauge gauge = ILiquidityGauge(_singleRecipientGaugeFactory.create(address(holder)));\n        _addGauge(gauge, gaugeType);\n        getAuthorizer().grantRole(holder.getActionId(IBALTokenHolder.withdrawFunds.selector), recipient);\n    }\n}\n"
      },
      "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\n// Based on the ReentrancyGuard library from OpenZeppelin Contracts, altered to reduce bytecode size.\n// Modifier code is inlined by the compiler, which causes its code to appear multiple times in the codebase. By using\n// private functions, we achieve the same end result with slightly higher runtime gas costs, but reduced bytecode size.\n\npragma solidity ^0.7.0;\n\nimport \"../helpers/BalancerErrors.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _enterNonReentrant();\n        _;\n        _exitNonReentrant();\n    }\n\n    function _enterNonReentrant() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        _require(_status != _ENTERED, Errors.REENTRANCY);\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _exitNonReentrant() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma experimental ABIEncoderV2;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\";\n\nimport \"./IAsset.sol\";\nimport \"./IAuthorizer.sol\";\nimport \"./IFlashLoanRecipient.sol\";\nimport \"./IProtocolFeesCollector.sol\";\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n * don't override one of these declarations.\n */\ninterface IVault is ISignaturesValidator, ITemporarilyPausable, IAuthentication {\n    // Generalities about the Vault:\n    //\n    // - Whenever documentation refers to 'tokens', it strictly refers to ERC20-compliant token contracts. Tokens are\n    // transferred out of the Vault by calling the `IERC20.transfer` function, and transferred in by calling\n    // `IERC20.transferFrom`. In these cases, the sender must have previously allowed the Vault to use their tokens by\n    // calling `IERC20.approve`. The only deviation from the ERC20 standard that is supported is functions not returning\n    // a boolean value: in these scenarios, a non-reverting call is assumed to be successful.\n    //\n    // - All non-view functions in the Vault are non-reentrant: calling them while another one is mid-execution (e.g.\n    // while execution control is transferred to a token contract during a swap) will result in a revert. View\n    // functions can be called in a re-reentrant way, but doing so might cause them to return inconsistent results.\n    // Contracts calling view functions in the Vault must make sure the Vault has not already been entered.\n    //\n    // - View functions revert if referring to either unregistered Pools, or unregistered tokens for registered Pools.\n\n    // Authorizer\n    //\n    // Some system actions are permissioned, like setting and collecting protocol fees. This permissioning system exists\n    // outside of the Vault in the Authorizer contract: the Vault simply calls the Authorizer to check if the caller\n    // can perform a given action.\n\n    /**\n     * @dev Returns the Vault's Authorizer.\n     */\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    /**\n     * @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n     *\n     * Emits an `AuthorizerChanged` event.\n     */\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\n\n    /**\n     * @dev Emitted when a new authorizer is set by `setAuthorizer`.\n     */\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\n\n    // Relayers\n    //\n    // Additionally, it is possible for an account to perform certain actions on behalf of another one, using their\n    // Vault ERC20 allowance and Internal Balance. These accounts are said to be 'relayers' for these Vault functions,\n    // and are expected to be smart contracts with sound authentication mechanisms. For an account to be able to wield\n    // this power, two things must occur:\n    //  - The Authorizer must grant the account the permission to be a relayer for the relevant Vault function. This\n    //    means that Balancer governance must approve each individual contract to act as a relayer for the intended\n    //    functions.\n    //  - Each user must approve the relayer to act on their behalf.\n    // This double protection means users cannot be tricked into approving malicious relayers (because they will not\n    // have been allowed by the Authorizer via governance), nor can malicious relayers approved by a compromised\n    // Authorizer or governance drain user funds, since they would also need to be approved by each individual user.\n\n    /**\n     * @dev Returns true if `user` has approved `relayer` to act as a relayer for them.\n     */\n    function hasApprovedRelayer(address user, address relayer) external view returns (bool);\n\n    /**\n     * @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n     *\n     * Emits a `RelayerApprovalChanged` event.\n     */\n    function setRelayerApproval(\n        address sender,\n        address relayer,\n        bool approved\n    ) external;\n\n    /**\n     * @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\n     */\n    event RelayerApprovalChanged(address indexed relayer, address indexed sender, bool approved);\n\n    // Internal Balance\n    //\n    // Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\n    // transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\n    // when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\n    // gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\n    //\n    // Internal Balance management features batching, which means a single contract call can be used to perform multiple\n    // operations of different kinds, with different senders and recipients, at once.\n\n    /**\n     * @dev Returns `user`'s Internal Balance for a set of tokens.\n     */\n    function getInternalBalance(address user, IERC20[] memory tokens) external view returns (uint256[] memory);\n\n    /**\n     * @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n     * and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n     * it lets integrators reuse a user's Vault allowance.\n     *\n     * For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\n     */\n    function manageUserBalance(UserBalanceOp[] memory ops) external payable;\n\n    /**\n     * @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\n     without manual WETH wrapping or unwrapping.\n     */\n    struct UserBalanceOp {\n        UserBalanceOpKind kind;\n        IAsset asset;\n        uint256 amount;\n        address sender;\n        address payable recipient;\n    }\n\n    // There are four possible operations in `manageUserBalance`:\n    //\n    // - DEPOSIT_INTERNAL\n    // Increases the Internal Balance of the `recipient` account by transferring tokens from the corresponding\n    // `sender`. The sender must have allowed the Vault to use their tokens via `IERC20.approve()`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset and forwarding ETH in the call: it will be wrapped\n    // and deposited as WETH. Any ETH amount remaining will be sent back to the caller (not the sender, which is\n    // relevant for relayers).\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - WITHDRAW_INTERNAL\n    // Decreases the Internal Balance of the `sender` account by transferring tokens to the `recipient`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset. This will deduct WETH instead, unwrap it and send\n    // it to the recipient as ETH.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_INTERNAL\n    // Transfers tokens from the Internal Balance of the `sender` account to the Internal Balance of `recipient`.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_EXTERNAL\n    // Transfers tokens from `sender` to `recipient`, using the Vault's ERC20 allowance. This is typically used by\n    // relayers, as it lets them reuse a user's Vault allowance.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `ExternalBalanceTransfer` event.\n\n    enum UserBalanceOpKind { DEPOSIT_INTERNAL, WITHDRAW_INTERNAL, TRANSFER_INTERNAL, TRANSFER_EXTERNAL }\n\n    /**\n     * @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n     * interacting with Pools using Internal Balance.\n     *\n     * Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n     * address.\n     */\n    event InternalBalanceChanged(address indexed user, IERC20 indexed token, int256 delta);\n\n    /**\n     * @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\n     */\n    event ExternalBalanceTransfer(IERC20 indexed token, address indexed sender, address recipient, uint256 amount);\n\n    // Pools\n    //\n    // There are three specialization settings for Pools, which allow for cheaper swaps at the cost of reduced\n    // functionality:\n    //\n    //  - General: no specialization, suited for all Pools. IGeneralPool is used for swap request callbacks, passing the\n    // balance of all tokens in the Pool. These Pools have the largest swap costs (because of the extra storage reads),\n    // which increase with the number of registered tokens.\n    //\n    //  - Minimal Swap Info: IMinimalSwapInfoPool is used instead of IGeneralPool, which saves gas by only passing the\n    // balance of the two tokens involved in the swap. This is suitable for some pricing algorithms, like the weighted\n    // constant product one popularized by Balancer V1. Swap costs are smaller compared to general Pools, and are\n    // independent of the number of registered tokens.\n    //\n    //  - Two Token: only allows two tokens to be registered. This achieves the lowest possible swap gas cost. Like\n    // minimal swap info Pools, these are called via IMinimalSwapInfoPool.\n\n    enum PoolSpecialization { GENERAL, MINIMAL_SWAP_INFO, TWO_TOKEN }\n\n    /**\n     * @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n     * is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n     * changed.\n     *\n     * The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n     * depending on the chosen specialization setting. This contract is known as the Pool's contract.\n     *\n     * Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n     * multiple Pools may share the same contract.\n     *\n     * Emits a `PoolRegistered` event.\n     */\n    function registerPool(PoolSpecialization specialization) external returns (bytes32);\n\n    /**\n     * @dev Emitted when a Pool is registered by calling `registerPool`.\n     */\n    event PoolRegistered(bytes32 indexed poolId, address indexed poolAddress, PoolSpecialization specialization);\n\n    /**\n     * @dev Returns a Pool's contract address and specialization setting.\n     */\n    function getPool(bytes32 poolId) external view returns (address, PoolSpecialization);\n\n    /**\n     * @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n     * exit by receiving registered tokens, and can only swap registered tokens.\n     *\n     * Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n     * of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n     * ascending order.\n     *\n     * The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n     * Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n     * depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n     * expected to be highly secured smart contracts with sound design principles, and the decision to register an\n     * Asset Manager should not be made lightly.\n     *\n     * Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n     * Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n     * different Asset Manager.\n     *\n     * Emits a `TokensRegistered` event.\n     */\n    function registerTokens(\n        bytes32 poolId,\n        IERC20[] memory tokens,\n        address[] memory assetManagers\n    ) external;\n\n    /**\n     * @dev Emitted when a Pool registers tokens by calling `registerTokens`.\n     */\n    event TokensRegistered(bytes32 indexed poolId, IERC20[] tokens, address[] assetManagers);\n\n    /**\n     * @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n     * balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n     * must be deregistered in the same `deregisterTokens` call.\n     *\n     * A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n     *\n     * Emits a `TokensDeregistered` event.\n     */\n    function deregisterTokens(bytes32 poolId, IERC20[] memory tokens) external;\n\n    /**\n     * @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\n     */\n    event TokensDeregistered(bytes32 indexed poolId, IERC20[] tokens);\n\n    /**\n     * @dev Returns detailed information for a Pool's registered token.\n     *\n     * `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n     * withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n     * equals the sum of `cash` and `managed`.\n     *\n     * Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n     * `managed` or `total` balance to be greater than 2^112 - 1.\n     *\n     * `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n     * join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n     * example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n     * change for this purpose, and will update `lastChangeBlock`.\n     *\n     * `assetManager` is the Pool's token Asset Manager.\n     */\n    function getPoolTokenInfo(bytes32 poolId, IERC20 token)\n        external\n        view\n        returns (\n            uint256 cash,\n            uint256 managed,\n            uint256 lastChangeBlock,\n            address assetManager\n        );\n\n    /**\n     * @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n     * the tokens' `balances` changed.\n     *\n     * The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n     * Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n     *\n     * If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n     * order as passed to `registerTokens`.\n     *\n     * Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n     * the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n     * instead.\n     */\n    function getPoolTokens(bytes32 poolId)\n        external\n        view\n        returns (\n            IERC20[] memory tokens,\n            uint256[] memory balances,\n            uint256 lastChangeBlock\n        );\n\n    /**\n     * @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n     * trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n     * Pool shares.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n     * to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n     * these maximums.\n     *\n     * If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n     * this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n     * WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n     * back to the caller (not the sender, which is important for relayers).\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n     * sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n     * `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n     *\n     * If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n     * be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n     * withdrawn from Internal Balance: attempting to do so will trigger a revert.\n     *\n     * This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n     * directly to the Pool's contract, as is `recipient`.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function joinPool(\n        bytes32 poolId,\n        address sender,\n        address recipient,\n        JoinPoolRequest memory request\n    ) external payable;\n\n    struct JoinPoolRequest {\n        IAsset[] assets;\n        uint256[] maxAmountsIn;\n        bytes userData;\n        bool fromInternalBalance;\n    }\n\n    /**\n     * @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n     * trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n     * Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n     * `getPoolTokenInfo`).\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n     * token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n     * it just enforces these minimums.\n     *\n     * If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n     * enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n     * of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n     * be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n     * final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n     *\n     * If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n     * an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n     * do so will trigger a revert.\n     *\n     * `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n     * `tokens` array. This array must match the Pool's registered tokens.\n     *\n     * This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n     * passed directly to the Pool's contract.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function exitPool(\n        bytes32 poolId,\n        address sender,\n        address payable recipient,\n        ExitPoolRequest memory request\n    ) external;\n\n    struct ExitPoolRequest {\n        IAsset[] assets;\n        uint256[] minAmountsOut;\n        bytes userData;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\n     */\n    event PoolBalanceChanged(\n        bytes32 indexed poolId,\n        address indexed liquidityProvider,\n        IERC20[] tokens,\n        int256[] deltas,\n        uint256[] protocolFeeAmounts\n    );\n\n    enum PoolBalanceChangeKind { JOIN, EXIT }\n\n    // Swaps\n    //\n    // Users can swap tokens with Pools by calling the `swap` and `batchSwap` functions. To do this,\n    // they need not trust Pool contracts in any way: all security checks are made by the Vault. They must however be\n    // aware of the Pools' pricing algorithms in order to estimate the prices Pools will quote.\n    //\n    // The `swap` function executes a single swap, while `batchSwap` can perform multiple swaps in sequence.\n    // In each individual swap, tokens of one kind are sent from the sender to the Pool (this is the 'token in'),\n    // and tokens of another kind are sent from the Pool to the recipient in exchange (this is the 'token out').\n    // More complex swaps, such as one token in to multiple tokens out can be achieved by batching together\n    // individual swaps.\n    //\n    // There are two swap kinds:\n    //  - 'given in' swaps, where the amount of tokens in (sent to the Pool) is known, and the Pool determines (via the\n    // `onSwap` hook) the amount of tokens out (to send to the recipient).\n    //  - 'given out' swaps, where the amount of tokens out (received from the Pool) is known, and the Pool determines\n    // (via the `onSwap` hook) the amount of tokens in (to receive from the sender).\n    //\n    // Additionally, it is possible to chain swaps using a placeholder input amount, which the Vault replaces with\n    // the calculated output of the previous swap. If the previous swap was 'given in', this will be the calculated\n    // tokenOut amount. If the previous swap was 'given out', it will use the calculated tokenIn amount. These extended\n    // swaps are known as 'multihop' swaps, since they 'hop' through a number of intermediate tokens before arriving at\n    // the final intended token.\n    //\n    // In all cases, tokens are only transferred in and out of the Vault (or withdrawn from and deposited into Internal\n    // Balance) after all individual swaps have been completed, and the net token balance change computed. This makes\n    // certain swap patterns, such as multihops, or swaps that interact with the same token pair in multiple Pools, cost\n    // much less gas than they would otherwise.\n    //\n    // It also means that under certain conditions it is possible to perform arbitrage by swapping with multiple\n    // Pools in a way that results in net token movement out of the Vault (profit), with no tokens being sent in (only\n    // updating the Pool's internal accounting).\n    //\n    // To protect users from front-running or the market changing rapidly, they supply a list of 'limits' for each token\n    // involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the\n    // minimum amount of tokens to receive (by passing a negative value) is specified.\n    //\n    // Additionally, a 'deadline' timestamp can also be provided, forcing the swap to fail if it occurs after\n    // this point in time (e.g. if the transaction failed to be included in a block promptly).\n    //\n    // If interacting with Pools that hold WETH, it is possible to both send and receive ETH directly: the Vault will do\n    // the wrapping and unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be\n    // passed in the `assets` array instead of the WETH address. Note that it is possible to combine ETH and WETH in the\n    // same swap. Any excess ETH will be sent back to the caller (not the sender, which is relevant for relayers).\n    //\n    // Finally, Internal Balance can be used when either sending or receiving tokens.\n\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\n\n    /**\n     * @dev Performs a swap with a single Pool.\n     *\n     * If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n     * taken from the Pool, which must be greater than or equal to `limit`.\n     *\n     * If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n     * sent to the Pool, which must be less than or equal to `limit`.\n     *\n     * Internal Balance usage and the recipient are determined by the `funds` struct.\n     *\n     * Emits a `Swap` event.\n     */\n    function swap(\n        SingleSwap memory singleSwap,\n        FundManagement memory funds,\n        uint256 limit,\n        uint256 deadline\n    ) external payable returns (uint256);\n\n    /**\n     * @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\n     * the `kind` value.\n     *\n     * `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\n     * Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct SingleSwap {\n        bytes32 poolId;\n        SwapKind kind;\n        IAsset assetIn;\n        IAsset assetOut;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n     * the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n     *\n     * Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n     * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n     * the same index in the `assets` array.\n     *\n     * Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n     * Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n     * `amountOut` depending on the swap kind.\n     *\n     * Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n     * of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n     * the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n     *\n     * The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n     * or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n     * out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n     * or unwrapped from WETH by the Vault.\n     *\n     * Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n     * the minimum or maximum amount of each token the vault is allowed to transfer.\n     *\n     * `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n     * equivalent `swap` call.\n     *\n     * Emits `Swap` events.\n     */\n    function batchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds,\n        int256[] memory limits,\n        uint256 deadline\n    ) external payable returns (int256[] memory);\n\n    /**\n     * @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\n     * `assets` array passed to that function, and ETH assets are converted to WETH.\n     *\n     * If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\n     * from the previous swap, depending on the swap kind.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Emitted for each individual swap performed by `swap` or `batchSwap`.\n     */\n    event Swap(\n        bytes32 indexed poolId,\n        IERC20 indexed tokenIn,\n        IERC20 indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    /**\n     * @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\n     * `recipient` account.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\n     * transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\n     * must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\n     * `joinPool`.\n     *\n     * If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\n     * transferred. This matches the behavior of `exitPool`.\n     *\n     * Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\n     * revert.\n     */\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n     * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n     *\n     * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n     * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n     * receives are the same that an equivalent `batchSwap` call would receive.\n     *\n     * Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n     * This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n     * approve them for the Vault, or even know a user's address.\n     *\n     * Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n     * eth_call instead of eth_sendTransaction.\n     */\n    function queryBatchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds\n    ) external returns (int256[] memory assetDeltas);\n\n    // Flash Loans\n\n    /**\n     * @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n     * and then reverting unless the tokens plus a proportional protocol fee have been returned.\n     *\n     * The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n     * for each token contract. `tokens` must be sorted in ascending order.\n     *\n     * The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n     * `receiveFlashLoan` call.\n     *\n     * Emits `FlashLoan` events.\n     */\n    function flashLoan(\n        IFlashLoanRecipient recipient,\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        bytes memory userData\n    ) external;\n\n    /**\n     * @dev Emitted for each individual flash loan performed by `flashLoan`.\n     */\n    event FlashLoan(IFlashLoanRecipient indexed recipient, IERC20 indexed token, uint256 amount, uint256 feeAmount);\n\n    // Asset Management\n    //\n    // Each token registered for a Pool can be assigned an Asset Manager, which is able to freely withdraw the Pool's\n    // tokens from the Vault, deposit them, or assign arbitrary values to its `managed` balance (see\n    // `getPoolTokenInfo`). This makes them extremely powerful and dangerous. Even if an Asset Manager only directly\n    // controls one of the tokens in a Pool, a malicious manager could set that token's balance to manipulate the\n    // prices of the other tokens, and then drain the Pool with swaps. The risk of using Asset Managers is therefore\n    // not constrained to the tokens they are managing, but extends to the entire Pool's holdings.\n    //\n    // However, a properly designed Asset Manager smart contract can be safely used for the Pool's benefit,\n    // for example by lending unused tokens out for interest, or using them to participate in voting protocols.\n    //\n    // This concept is unrelated to the IAsset interface.\n\n    /**\n     * @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n     *\n     * Pool Balance management features batching, which means a single contract call can be used to perform multiple\n     * operations of different kinds, with different Pools and tokens, at once.\n     *\n     * For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\n     */\n    function managePoolBalance(PoolBalanceOp[] memory ops) external;\n\n    struct PoolBalanceOp {\n        PoolBalanceOpKind kind;\n        bytes32 poolId;\n        IERC20 token;\n        uint256 amount;\n    }\n\n    /**\n     * Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\n     *\n     * Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\n     *\n     * Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\n     * The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss).\n     */\n    enum PoolBalanceOpKind { WITHDRAW, DEPOSIT, UPDATE }\n\n    /**\n     * @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\n     */\n    event PoolBalanceManaged(\n        bytes32 indexed poolId,\n        address indexed assetManager,\n        IERC20 indexed token,\n        int256 cashDelta,\n        int256 managedDelta\n    );\n\n    // Protocol Fees\n    //\n    // Some operations cause the Vault to collect tokens in the form of protocol fees, which can then be withdrawn by\n    // permissioned accounts.\n    //\n    // There are two kinds of protocol fees:\n    //\n    //  - flash loan fees: charged on all flash loans, as a percentage of the amounts lent.\n    //\n    //  - swap fees: a percentage of the fees charged by Pools when performing swaps. For a number of reasons, including\n    // swap gas costs and interface simplicity, protocol swap fees are not charged on each individual swap. Rather,\n    // Pools are expected to keep track of how much they have charged in swap fees, and pay any outstanding debts to the\n    // Vault when they are joined or exited. This prevents users from joining a Pool with unpaid debt, as well as\n    // exiting a Pool in debt without first paying their share.\n\n    /**\n     * @dev Returns the current protocol fee module.\n     */\n    function getProtocolFeesCollector() external view returns (IProtocolFeesCollector);\n\n    /**\n     * @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n     * error in some part of the system.\n     *\n     * The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n     *\n     * While the contract is paused, the following features are disabled:\n     * - depositing and transferring internal balance\n     * - transferring external balance (using the Vault's allowance)\n     * - swaps\n     * - joining Pools\n     * - Asset Manager interactions\n     *\n     * Internal Balance can still be withdrawn, and Pools exited.\n     */\n    function setPaused(bool paused) external;\n\n    /**\n     * @dev Returns the Vault's WETH instance.\n     */\n    function WETH() external view returns (IWETH);\n    // solhint-disable-previous-line func-name-mixedcase\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\";\n\ninterface IAuthorizerAdaptor is IAuthentication {\n    /**\n     * @notice Returns the Balancer Vault\n     */\n    function getVault() external view returns (IVault);\n\n    /**\n     * @notice Returns the Authorizer\n     */\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    /**\n     * @notice Performs an arbitrary function call on a target contract, provided the caller is authorized to do so.\n     * @param target - Address of the contract to be called\n     * @param data - Calldata to be sent to the target contract\n     * @return The bytes encoded return value from the performed function call\n     */\n    function performAction(address target, bytes calldata data) external payable returns (bytes memory);\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\";\n\nimport \"./IAuthorizerAdaptor.sol\";\nimport \"./IGaugeController.sol\";\nimport \"./ILiquidityGauge.sol\";\nimport \"./ILiquidityGaugeFactory.sol\";\nimport \"./IStakingLiquidityGauge.sol\";\n\ninterface IGaugeAdder is IAuthentication {\n    enum GaugeType { LiquidityMiningCommittee, veBAL, Ethereum, Polygon, Arbitrum }\n\n    event GaugeFactoryAdded(GaugeType indexed gaugeType, ILiquidityGaugeFactory gaugeFactory);\n\n    /**\n     * @notice Returns the address of the Gauge Controller\n     */\n    function getGaugeController() external view returns (IGaugeController);\n\n    /**\n     * @notice Returns the gauge corresponding to a Balancer pool `pool` on Ethereum mainnet.\n     * Only returns gauges which have been added to the Gauge Controller.\n     * @dev Gauge Factories also implement a `getPoolGauge` function which maps pools to gauges which it has deployed.\n     * This function provides global information by using which gauge has been added to the Gauge Controller\n     * to represent the canonical gauge for a given pool address.\n     */\n    function getPoolGauge(IERC20 pool) external view returns (ILiquidityGauge);\n\n    /**\n     * @notice Returns the `index`'th factory for gauge type `gaugeType`\n     */\n    function getFactoryForGaugeType(GaugeType gaugeType, uint256 index) external view returns (address);\n\n    /**\n     * @notice Returns the number of factories for gauge type `gaugeType`\n     */\n    function getFactoryForGaugeTypeCount(GaugeType gaugeType) external view returns (uint256);\n\n    /**\n     * @notice Returns whether `gauge` has been deployed by one of the listed factories for the gauge type `gaugeType`\n     */\n    function isGaugeFromValidFactory(address gauge, GaugeType gaugeType) external view returns (bool);\n\n    /**\n     * @notice Adds a new gauge to the GaugeController for the \"Ethereum\" type.\n     */\n    function addEthereumGauge(IStakingLiquidityGauge gauge) external;\n\n    /**\n     * @notice Adds a new gauge to the GaugeController for the \"Polygon\" type.\n     * This function must be called with the address of the *root* gauge which is deployed on Ethereum mainnet.\n     * It should not be called with the address of the gauge which is deployed on Polygon\n     */\n    function addPolygonGauge(address rootGauge) external;\n\n    /**\n     * @notice Adds a new gauge to the GaugeController for the \"Arbitrum\" type.\n     * This function must be called with the address of the *root* gauge which is deployed on Ethereum mainnet.\n     * It should not be called with the address of the gauge which is deployed on Arbitrum\n     */\n    function addArbitrumGauge(address rootGauge) external;\n\n    /**\n     * @notice Adds `factory` as an allowlisted factory contract for gauges with type `gaugeType`.\n     */\n    function addGaugeFactory(ILiquidityGaugeFactory factory, GaugeType gaugeType) external;\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\";\n\nimport \"./IAuthorizerAdaptor.sol\";\nimport \"./IVotingEscrow.sol\";\n\n// For compatibility, we're keeping the same function names as in the original Curve code, including the mixed-case\n// naming convention.\n// solhint-disable func-name-mixedcase\n\ninterface IGaugeController {\n    function checkpoint_gauge(address gauge) external;\n\n    function gauge_relative_weight(address gauge, uint256 time) external returns (uint256);\n\n    function voting_escrow() external view returns (IVotingEscrow);\n\n    function token() external view returns (IERC20);\n\n    function add_type(string calldata name, uint256 weight) external;\n\n    function change_type_weight(int128 typeId, uint256 weight) external;\n\n    // Gauges are to be added with zero initial weight so the full signature is not required\n    function add_gauge(address gauge, int128 gaugeType) external;\n\n    function n_gauge_types() external view returns (int128);\n\n    function gauge_types(address gauge) external view returns (int128);\n\n    function admin() external view returns (IAuthorizerAdaptor);\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"./IBalancerTokenAdmin.sol\";\nimport \"./IGaugeController.sol\";\n\ninterface IBalancerMinter {\n    event Minted(address indexed recipient, address gauge, uint256 minted);\n\n    /**\n     * @notice Returns the address of the Balancer Governance Token\n     */\n    function getBalancerToken() external view returns (IERC20);\n\n    /**\n     * @notice Returns the address of the Balancer Token Admin contract\n     */\n    function getBalancerTokenAdmin() external view returns (IBalancerTokenAdmin);\n\n    /**\n     * @notice Returns the address of the Gauge Controller\n     */\n    function getGaugeController() external view returns (IGaugeController);\n\n    /**\n     * @notice Mint everything which belongs to `msg.sender` and send to them\n     * @param gauge `LiquidityGauge` address to get mintable amount from\n     */\n    function mint(address gauge) external returns (uint256);\n\n    /**\n     * @notice Mint everything which belongs to `msg.sender` across multiple gauges\n     * @param gauges List of `LiquidityGauge` addresses\n     */\n    function mintMany(address[] calldata gauges) external returns (uint256);\n\n    /**\n     * @notice Mint tokens for `user`\n     * @dev Only possible when `msg.sender` has been approved by `user` to mint on their behalf\n     * @param gauge `LiquidityGauge` address to get mintable amount from\n     * @param user Address to mint to\n     */\n    function mintFor(address gauge, address user) external returns (uint256);\n\n    /**\n     * @notice Mint tokens for `user` across multiple gauges\n     * @dev Only possible when `msg.sender` has been approved by `user` to mint on their behalf\n     * @param gauges List of `LiquidityGauge` addresses\n     * @param user Address to mint to\n     */\n    function mintManyFor(address[] calldata gauges, address user) external returns (uint256);\n\n    /**\n     * @notice The total number of tokens minted for `user` from `gauge`\n     */\n    function minted(address user, address gauge) external view returns (uint256);\n\n    /**\n     * @notice Whether `minter` is approved to mint tokens for `user`\n     */\n    function getMinterApproval(address minter, address user) external view returns (bool);\n\n    /**\n     * @notice Set whether `minter` is approved to mint tokens on your behalf\n     */\n    function setMinterApproval(address minter, bool approval) external;\n\n    /**\n     * @notice Set whether `minter` is approved to mint tokens on behalf of `user`, who has signed a message authorizing\n     * them.\n     */\n    function setMinterApprovalWithSignature(\n        address minter,\n        bool approval,\n        address user,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    // The below functions are near-duplicates of functions available above.\n    // They are included for ABI compatibility with snake_casing as used in vyper contracts.\n    // solhint-disable func-name-mixedcase\n\n    /**\n     * @notice Whether `minter` is approved to mint tokens for `user`\n     */\n    function allowed_to_mint_for(address minter, address user) external view returns (bool);\n\n    /**\n     * @notice Mint everything which belongs to `msg.sender` across multiple gauges\n     * @dev This function is not recommended as `mintMany()` is more flexible and gas efficient\n     * @param gauges List of `LiquidityGauge` addresses\n     */\n    function mint_many(address[8] calldata gauges) external;\n\n    /**\n     * @notice Mint tokens for `user`\n     * @dev Only possible when `msg.sender` has been approved by `user` to mint on their behalf\n     * @param gauge `LiquidityGauge` address to get mintable amount from\n     * @param user Address to mint to\n     */\n    function mint_for(address gauge, address user) external;\n\n    /**\n     * @notice Toggle whether `minter` is approved to mint tokens for `user`\n     */\n    function toggle_approve_mint(address minter) external;\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\";\nimport \"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\";\n\nimport \"./IBalancerToken.sol\";\n\ninterface IBalancerTokenAdmin is IAuthentication {\n    // solhint-disable func-name-mixedcase\n    function INITIAL_RATE() external view returns (uint256);\n\n    function RATE_REDUCTION_TIME() external view returns (uint256);\n\n    function RATE_REDUCTION_COEFFICIENT() external view returns (uint256);\n\n    function RATE_DENOMINATOR() external view returns (uint256);\n\n    // solhint-enable func-name-mixedcase\n\n    /**\n     * @notice Returns the address of the Balancer Governance Token\n     */\n    function getBalancerToken() external view returns (IBalancerToken);\n\n    /**\n     * @notice Returns the Balancer Vault.\n     */\n    function getVault() external view returns (IVault);\n\n    function activate() external;\n\n    function rate() external view returns (uint256);\n\n    function startEpochTimeWrite() external returns (uint256);\n\n    function mint(address to, uint256 amount) external;\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./ILiquidityGauge.sol\";\n\ninterface ILiquidityGaugeFactory {\n    /**\n     * @notice Returns true if `gauge` was created by this factory.\n     */\n    function isGaugeFromFactory(address gauge) external view returns (bool);\n\n    function create(address pool) external returns (address);\n}\n"
      },
      "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol\";\nimport \"./IBALTokenHolder.sol\";\n\ninterface IBALTokenHolderFactory {\n    function getBalancerToken() external view returns (IBalancerToken);\n\n    function getVault() external view returns (IVault);\n\n    function isHolderFromFactory(address holder) external view returns (bool);\n\n    function create(string memory name) external returns (IBALTokenHolder);\n}\n"
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\n// solhint-disable\n\n/**\n * @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\n * supported.\n */\nfunction _require(bool condition, uint256 errorCode) pure {\n    if (!condition) _revert(errorCode);\n}\n\n/**\n * @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported.\n */\nfunction _revert(uint256 errorCode) pure {\n    // We're going to dynamically create a revert string based on the error code, with the following format:\n    // 'BAL#{errorCode}'\n    // where the code is left-padded with zeroes to three digits (so they range from 000 to 999).\n    //\n    // We don't have revert strings embedded in the contract to save bytecode size: it takes much less space to store a\n    // number (8 to 16 bits) than the individual string characters.\n    //\n    // The dynamic string creation algorithm that follows could be implemented in Solidity, but assembly allows for a\n    // much denser implementation, again saving bytecode size. Given this function unconditionally reverts, this is a\n    // safe place to rely on it without worrying about how its usage might affect e.g. memory contents.\n    assembly {\n        // First, we need to compute the ASCII representation of the error code. We assume that it is in the 0-999\n        // range, so we only need to convert three digits. To convert the digits to ASCII, we add 0x30, the value for\n        // the '0' character.\n\n        let units := add(mod(errorCode, 10), 0x30)\n\n        errorCode := div(errorCode, 10)\n        let tenths := add(mod(errorCode, 10), 0x30)\n\n        errorCode := div(errorCode, 10)\n        let hundreds := add(mod(errorCode, 10), 0x30)\n\n        // With the individual characters, we can now construct the full string. The \"BAL#\" part is a known constant\n        // (0x42414c23): we simply shift this by 24 (to provide space for the 3 bytes of the error code), and add the\n        // characters to it, each shifted by a multiple of 8.\n        // The revert reason is then shifted left by 200 bits (256 minus the length of the string, 7 characters * 8 bits\n        // per character = 56) to locate it in the most significant part of the 256 slot (the beginning of a byte\n        // array).\n\n        let revertReason := shl(200, add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds))))\n\n        // We can now encode the reason in memory, which can be safely overwritten as we're about to revert. The encoded\n        // message will have the following layout:\n        // [ revert reason identifier ] [ string location offset ] [ string length ] [ string contents ]\n\n        // The Solidity revert reason identifier is 0x08c739a0, the function selector of the Error(string) function. We\n        // also write zeroes to the next 28 bytes of memory, but those are about to be overwritten.\n        mstore(0x0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n        // Next is the offset to the location of the string, which will be placed immediately after (20 bytes away).\n        mstore(0x04, 0x0000000000000000000000000000000000000000000000000000000000000020)\n        // The string length is fixed: 7 characters.\n        mstore(0x24, 7)\n        // Finally, the string itself is stored.\n        mstore(0x44, revertReason)\n\n        // Even if the string is only 7 bytes long, we need to return a full 32 byte slot containing it. The length of\n        // the encoded message is therefore 4 + 32 + 32 + 32 = 100.\n        revert(0, 100)\n    }\n}\n\nlibrary Errors {\n    // Math\n    uint256 internal constant ADD_OVERFLOW = 0;\n    uint256 internal constant SUB_OVERFLOW = 1;\n    uint256 internal constant SUB_UNDERFLOW = 2;\n    uint256 internal constant MUL_OVERFLOW = 3;\n    uint256 internal constant ZERO_DIVISION = 4;\n    uint256 internal constant DIV_INTERNAL = 5;\n    uint256 internal constant X_OUT_OF_BOUNDS = 6;\n    uint256 internal constant Y_OUT_OF_BOUNDS = 7;\n    uint256 internal constant PRODUCT_OUT_OF_BOUNDS = 8;\n    uint256 internal constant INVALID_EXPONENT = 9;\n\n    // Input\n    uint256 internal constant OUT_OF_BOUNDS = 100;\n    uint256 internal constant UNSORTED_ARRAY = 101;\n    uint256 internal constant UNSORTED_TOKENS = 102;\n    uint256 internal constant INPUT_LENGTH_MISMATCH = 103;\n    uint256 internal constant ZERO_TOKEN = 104;\n\n    // Shared pools\n    uint256 internal constant MIN_TOKENS = 200;\n    uint256 internal constant MAX_TOKENS = 201;\n    uint256 internal constant MAX_SWAP_FEE_PERCENTAGE = 202;\n    uint256 internal constant MIN_SWAP_FEE_PERCENTAGE = 203;\n    uint256 internal constant MINIMUM_BPT = 204;\n    uint256 internal constant CALLER_NOT_VAULT = 205;\n    uint256 internal constant UNINITIALIZED = 206;\n    uint256 internal constant BPT_IN_MAX_AMOUNT = 207;\n    uint256 internal constant BPT_OUT_MIN_AMOUNT = 208;\n    uint256 internal constant EXPIRED_PERMIT = 209;\n    uint256 internal constant NOT_TWO_TOKENS = 210;\n    uint256 internal constant DISABLED = 211;\n\n    // Pools\n    uint256 internal constant MIN_AMP = 300;\n    uint256 internal constant MAX_AMP = 301;\n    uint256 internal constant MIN_WEIGHT = 302;\n    uint256 internal constant MAX_STABLE_TOKENS = 303;\n    uint256 internal constant MAX_IN_RATIO = 304;\n    uint256 internal constant MAX_OUT_RATIO = 305;\n    uint256 internal constant MIN_BPT_IN_FOR_TOKEN_OUT = 306;\n    uint256 internal constant MAX_OUT_BPT_FOR_TOKEN_IN = 307;\n    uint256 internal constant NORMALIZED_WEIGHT_INVARIANT = 308;\n    uint256 internal constant INVALID_TOKEN = 309;\n    uint256 internal constant UNHANDLED_JOIN_KIND = 310;\n    uint256 internal constant ZERO_INVARIANT = 311;\n    uint256 internal constant ORACLE_INVALID_SECONDS_QUERY = 312;\n    uint256 internal constant ORACLE_NOT_INITIALIZED = 313;\n    uint256 internal constant ORACLE_QUERY_TOO_OLD = 314;\n    uint256 internal constant ORACLE_INVALID_INDEX = 315;\n    uint256 internal constant ORACLE_BAD_SECS = 316;\n    uint256 internal constant AMP_END_TIME_TOO_CLOSE = 317;\n    uint256 internal constant AMP_ONGOING_UPDATE = 318;\n    uint256 internal constant AMP_RATE_TOO_HIGH = 319;\n    uint256 internal constant AMP_NO_ONGOING_UPDATE = 320;\n    uint256 internal constant STABLE_INVARIANT_DIDNT_CONVERGE = 321;\n    uint256 internal constant STABLE_GET_BALANCE_DIDNT_CONVERGE = 322;\n    uint256 internal constant RELAYER_NOT_CONTRACT = 323;\n    uint256 internal constant BASE_POOL_RELAYER_NOT_CALLED = 324;\n    uint256 internal constant REBALANCING_RELAYER_REENTERED = 325;\n    uint256 internal constant GRADUAL_UPDATE_TIME_TRAVEL = 326;\n    uint256 internal constant SWAPS_DISABLED = 327;\n    uint256 internal constant CALLER_IS_NOT_LBP_OWNER = 328;\n    uint256 internal constant PRICE_RATE_OVERFLOW = 329;\n    uint256 internal constant INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED = 330;\n    uint256 internal constant WEIGHT_CHANGE_TOO_FAST = 331;\n    uint256 internal constant LOWER_GREATER_THAN_UPPER_TARGET = 332;\n    uint256 internal constant UPPER_TARGET_TOO_HIGH = 333;\n    uint256 internal constant UNHANDLED_BY_LINEAR_POOL = 334;\n    uint256 internal constant OUT_OF_TARGET_RANGE = 335;\n    uint256 internal constant UNHANDLED_EXIT_KIND = 336;\n    uint256 internal constant UNAUTHORIZED_EXIT = 337;\n    uint256 internal constant MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE = 338;\n    uint256 internal constant UNHANDLED_BY_MANAGED_POOL = 339;\n    uint256 internal constant UNHANDLED_BY_PHANTOM_POOL = 340;\n    uint256 internal constant TOKEN_DOES_NOT_HAVE_RATE_PROVIDER = 341;\n    uint256 internal constant INVALID_INITIALIZATION = 342;\n    uint256 internal constant OUT_OF_NEW_TARGET_RANGE = 343;\n    uint256 internal constant UNAUTHORIZED_OPERATION = 344;\n    uint256 internal constant UNINITIALIZED_POOL_CONTROLLER = 345;\n\n    // Lib\n    uint256 internal constant REENTRANCY = 400;\n    uint256 internal constant SENDER_NOT_ALLOWED = 401;\n    uint256 internal constant PAUSED = 402;\n    uint256 internal constant PAUSE_WINDOW_EXPIRED = 403;\n    uint256 internal constant MAX_PAUSE_WINDOW_DURATION = 404;\n    uint256 internal constant MAX_BUFFER_PERIOD_DURATION = 405;\n    uint256 internal constant INSUFFICIENT_BALANCE = 406;\n    uint256 internal constant INSUFFICIENT_ALLOWANCE = 407;\n    uint256 internal constant ERC20_TRANSFER_FROM_ZERO_ADDRESS = 408;\n    uint256 internal constant ERC20_TRANSFER_TO_ZERO_ADDRESS = 409;\n    uint256 internal constant ERC20_MINT_TO_ZERO_ADDRESS = 410;\n    uint256 internal constant ERC20_BURN_FROM_ZERO_ADDRESS = 411;\n    uint256 internal constant ERC20_APPROVE_FROM_ZERO_ADDRESS = 412;\n    uint256 internal constant ERC20_APPROVE_TO_ZERO_ADDRESS = 413;\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_ALLOWANCE = 414;\n    uint256 internal constant ERC20_DECREASED_ALLOWANCE_BELOW_ZERO = 415;\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_BALANCE = 416;\n    uint256 internal constant ERC20_BURN_EXCEEDS_ALLOWANCE = 417;\n    uint256 internal constant SAFE_ERC20_CALL_FAILED = 418;\n    uint256 internal constant ADDRESS_INSUFFICIENT_BALANCE = 419;\n    uint256 internal constant ADDRESS_CANNOT_SEND_VALUE = 420;\n    uint256 internal constant SAFE_CAST_VALUE_CANT_FIT_INT256 = 421;\n    uint256 internal constant GRANT_SENDER_NOT_ADMIN = 422;\n    uint256 internal constant REVOKE_SENDER_NOT_ADMIN = 423;\n    uint256 internal constant RENOUNCE_SENDER_NOT_ALLOWED = 424;\n    uint256 internal constant BUFFER_PERIOD_EXPIRED = 425;\n    uint256 internal constant CALLER_IS_NOT_OWNER = 426;\n    uint256 internal constant NEW_OWNER_IS_ZERO = 427;\n    uint256 internal constant CODE_DEPLOYMENT_FAILED = 428;\n    uint256 internal constant CALL_TO_NON_CONTRACT = 429;\n    uint256 internal constant LOW_LEVEL_CALL_FAILED = 430;\n    uint256 internal constant NOT_PAUSED = 431;\n    uint256 internal constant ADDRESS_ALREADY_ALLOWLISTED = 432;\n    uint256 internal constant ADDRESS_NOT_ALLOWLISTED = 433;\n    uint256 internal constant ERC20_BURN_EXCEEDS_BALANCE = 434;\n\n    // Vault\n    uint256 internal constant INVALID_POOL_ID = 500;\n    uint256 internal constant CALLER_NOT_POOL = 501;\n    uint256 internal constant SENDER_NOT_ASSET_MANAGER = 502;\n    uint256 internal constant USER_DOESNT_ALLOW_RELAYER = 503;\n    uint256 internal constant INVALID_SIGNATURE = 504;\n    uint256 internal constant EXIT_BELOW_MIN = 505;\n    uint256 internal constant JOIN_ABOVE_MAX = 506;\n    uint256 internal constant SWAP_LIMIT = 507;\n    uint256 internal constant SWAP_DEADLINE = 508;\n    uint256 internal constant CANNOT_SWAP_SAME_TOKEN = 509;\n    uint256 internal constant UNKNOWN_AMOUNT_IN_FIRST_SWAP = 510;\n    uint256 internal constant MALCONSTRUCTED_MULTIHOP_SWAP = 511;\n    uint256 internal constant INTERNAL_BALANCE_OVERFLOW = 512;\n    uint256 internal constant INSUFFICIENT_INTERNAL_BALANCE = 513;\n    uint256 internal constant INVALID_ETH_INTERNAL_BALANCE = 514;\n    uint256 internal constant INVALID_POST_LOAN_BALANCE = 515;\n    uint256 internal constant INSUFFICIENT_ETH = 516;\n    uint256 internal constant UNALLOCATED_ETH = 517;\n    uint256 internal constant ETH_TRANSFER = 518;\n    uint256 internal constant CANNOT_USE_ETH_SENTINEL = 519;\n    uint256 internal constant TOKENS_MISMATCH = 520;\n    uint256 internal constant TOKEN_NOT_REGISTERED = 521;\n    uint256 internal constant TOKEN_ALREADY_REGISTERED = 522;\n    uint256 internal constant TOKENS_ALREADY_SET = 523;\n    uint256 internal constant TOKENS_LENGTH_MUST_BE_2 = 524;\n    uint256 internal constant NONZERO_TOKEN_BALANCE = 525;\n    uint256 internal constant BALANCE_TOTAL_OVERFLOW = 526;\n    uint256 internal constant POOL_NO_TOKENS = 527;\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_BALANCE = 528;\n\n    // Fees\n    uint256 internal constant SWAP_FEE_PERCENTAGE_TOO_HIGH = 600;\n    uint256 internal constant FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH = 601;\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT = 602;\n}\n"
      },
      "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\ninterface IAuthentication {\n    /**\n     * @dev Returns the action identifier associated with the external function described by `selector`.\n     */\n    function getActionId(bytes4 selector) external view returns (bytes32);\n}\n"
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface for the SignatureValidator helper, used to support meta-transactions.\n */\ninterface ISignaturesValidator {\n    /**\n     * @dev Returns the EIP712 domain separator.\n     */\n    function getDomainSeparator() external view returns (bytes32);\n\n    /**\n     * @dev Returns the next nonce used by an address to sign messages.\n     */\n    function getNextNonce(address user) external view returns (uint256);\n}\n"
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface for the TemporarilyPausable helper.\n */\ninterface ITemporarilyPausable {\n    /**\n     * @dev Emitted every time the pause state changes by `_setPaused`.\n     */\n    event PausedStateChanged(bool paused);\n\n    /**\n     * @dev Returns the current paused state.\n     */\n    function getPausedState()\n        external\n        view\n        returns (\n            bool paused,\n            uint256 pauseWindowEndTime,\n            uint256 bufferPeriodEndTime\n        );\n}\n"
      },
      "@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/IERC20.sol\";\n\n/**\n * @dev Interface for WETH9.\n * See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\n */\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 amount) external;\n}\n"
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\n/**\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n * types.\n *\n * This concept is unrelated to a Pool's Asset Managers.\n */\ninterface IAsset {\n    // solhint-disable-previous-line no-empty-blocks\n}\n"
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\ninterface IAuthorizer {\n    /**\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\n     */\n    function canPerform(\n        bytes32 actionId,\n        address account,\n        address where\n    ) external view returns (bool);\n}\n"
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\n// Inspired by Aave Protocol's IFlashLoanReceiver.\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\";\n\ninterface IFlashLoanRecipient {\n    /**\n     * @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n     *\n     * At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n     * call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n     * Vault, or else the entire flash loan will revert.\n     *\n     * `userData` is the same value passed in the `IVault.flashLoan` call.\n     */\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external;\n}\n"
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\";\n\nimport \"./IVault.sol\";\nimport \"./IAuthorizer.sol\";\n\ninterface IProtocolFeesCollector {\n    event SwapFeePercentageChanged(uint256 newSwapFeePercentage);\n    event FlashLoanFeePercentageChanged(uint256 newFlashLoanFeePercentage);\n\n    function withdrawCollectedFees(\n        IERC20[] calldata tokens,\n        uint256[] calldata amounts,\n        address recipient\n    ) external;\n\n    function setSwapFeePercentage(uint256 newSwapFeePercentage) external;\n\n    function setFlashLoanFeePercentage(uint256 newFlashLoanFeePercentage) external;\n\n    function getSwapFeePercentage() external view returns (uint256);\n\n    function getFlashLoanFeePercentage() external view returns (uint256);\n\n    function getCollectedFeeAmounts(IERC20[] memory tokens) external view returns (uint256[] memory feeAmounts);\n\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    function vault() external view returns (IVault);\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\n// For compatibility, we're keeping the same function names as in the original Curve code, including the mixed-case\n// naming convention.\n// solhint-disable func-name-mixedcase\n\ninterface ILiquidityGauge {\n    function integrate_fraction(address user) external view returns (uint256);\n\n    function user_checkpoint(address user) external returns (bool);\n\n    function is_killed() external view returns (bool);\n\n    function killGauge() external;\n\n    function unkillGauge() external;\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\";\n\nimport \"./ILiquidityGauge.sol\";\n\n// For compatibility, we're keeping the same function names as in the original Curve code, including the mixed-case\n// naming convention.\n// solhint-disable func-name-mixedcase\n\ninterface IStakingLiquidityGauge is ILiquidityGauge, IERC20 {\n    function initialize(address lpToken) external;\n\n    function lp_token() external view returns (IERC20);\n\n    function deposit(uint256 value, address recipient) external;\n\n    function withdraw(uint256 value) external;\n\n    function claim_rewards(address user) external;\n\n    function add_reward(address rewardToken, address distributor) external;\n\n    function set_reward_distributor(address rewardToken, address distributor) external;\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./IAuthorizerAdaptor.sol\";\n\n// For compatibility, we're keeping the same function names as in the original Curve code, including the mixed-case\n// naming convention.\n// solhint-disable func-name-mixedcase\n\ninterface IVotingEscrow {\n    struct Point {\n        int128 bias;\n        int128 slope; // - dweight / dt\n        uint256 ts;\n        uint256 blk; // block\n    }\n\n    function epoch() external view returns (uint256);\n\n    function totalSupply(uint256 timestamp) external view returns (uint256);\n\n    function user_point_epoch(address user) external view returns (uint256);\n\n    function point_history(uint256 timestamp) external view returns (Point memory);\n\n    function user_point_history(address user, uint256 timestamp) external view returns (Point memory);\n\n    function checkpoint() external;\n\n    function admin() external view returns (IAuthorizerAdaptor);\n\n    function smart_wallet_checker() external view returns (address);\n\n    function commit_smart_wallet_checker(address newSmartWalletChecker) external;\n\n    function apply_smart_wallet_checker() external;\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\";\n\ninterface IBalancerToken is IERC20 {\n    function mint(address to, uint256 amount) external;\n\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    function grantRole(bytes32 role, address account) external;\n\n    function revokeRole(bytes32 role, address account) external;\n\n    // solhint-disable-next-line func-name-mixedcase\n    function DEFAULT_ADMIN_ROLE() external view returns (bytes32);\n\n    // solhint-disable-next-line func-name-mixedcase\n    function MINTER_ROLE() external view returns (bytes32);\n\n    // solhint-disable-next-line func-name-mixedcase\n    function SNAPSHOT_ROLE() external view returns (bytes32);\n\n    function snapshot() external;\n}\n"
      },
      "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\";\n\ninterface IBALTokenHolder is IAuthentication {\n    function withdrawFunds(address recipient, uint256 amount) external;\n\n    function sweepTokens(\n        IERC20 token,\n        address recipient,\n        uint256 amount\n    ) external;\n}\n"
      },
      "contracts/20220415-veBAL-L2/veBALL2GaugeSetupCoordinator.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\";\nimport \"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\";\n\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol\";\nimport \"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol\";\nimport \"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol\";\n\n// solhint-disable not-rely-on-time\n\n/**\n * @dev The currently deployed Authorizer has a different interface relative to the Authorizer in the monorepo\n * for granting/revoking roles(referred to as permissions in the new Authorizer) and so we require a one-off interface\n */\ninterface ICurrentAuthorizer is IAuthorizer {\n    // solhint-disable-next-line func-name-mixedcase\n    function DEFAULT_ADMIN_ROLE() external view returns (bytes32);\n\n    function grantRole(bytes32 role, address account) external;\n\n    function revokeRole(bytes32 role, address account) external;\n}\n\n// https://vote.balancer.fi/#/proposal/0x9fe19c491cf90ed2e3ed9c15761c43d39fd1fb732a940aba8058ff69787ee90a\n// solhint-disable-next-line contract-name-camelcase\ncontract veBALL2GaugeSetupCoordinator is ReentrancyGuard {\n    IVault private immutable _vault;\n    IAuthorizerAdaptor private immutable _authorizerAdaptor;\n    IVotingEscrow private immutable _votingEscrow;\n    IGaugeController private immutable _gaugeController;\n    IGaugeAdder private immutable _gaugeAdder;\n    ILiquidityGaugeFactory private immutable _ethereumGaugeFactory;\n    ISingleRecipientGaugeFactory private immutable _polygonGaugeFactory;\n    ISingleRecipientGaugeFactory private immutable _arbitrumGaugeFactory;\n\n    address public immutable GAUGE_CHECKPOINTER_MULTISIG = 0x02f35dA6A02017154367Bc4d47bb6c7D06C7533B;\n\n    enum DeploymentStage { PENDING, FIRST_STAGE_DONE, SECOND_STAGE_DONE }\n\n    uint256 public firstStageActivationTime;\n    uint256 public secondStageActivationTime;\n\n    DeploymentStage private _currentDeploymentStage;\n\n    constructor(\n        IAuthorizerAdaptor authorizerAdaptor,\n        IVotingEscrow votingEscrow,\n        IGaugeAdder gaugeAdder,\n        ILiquidityGaugeFactory ethereumGaugeFactory,\n        ISingleRecipientGaugeFactory polygonGaugeFactory,\n        ISingleRecipientGaugeFactory arbitrumGaugeFactory\n    ) {\n        _currentDeploymentStage = DeploymentStage.PENDING;\n\n        IVault vault = authorizerAdaptor.getVault();\n        _vault = vault;\n        _authorizerAdaptor = authorizerAdaptor;\n        _votingEscrow = votingEscrow;\n        _gaugeController = gaugeAdder.getGaugeController();\n        _gaugeAdder = gaugeAdder;\n        _ethereumGaugeFactory = ethereumGaugeFactory;\n        _polygonGaugeFactory = polygonGaugeFactory;\n        _arbitrumGaugeFactory = arbitrumGaugeFactory;\n    }\n\n    /**\n     * @notice Returns the Balancer Vault.\n     */\n    function getVault() public view returns (IVault) {\n        return _vault;\n    }\n\n    /**\n     * @notice Returns the Balancer Vault's current authorizer.\n     */\n    function getAuthorizer() public view returns (ICurrentAuthorizer) {\n        return ICurrentAuthorizer(address(getVault().getAuthorizer()));\n    }\n\n    function getAuthorizerAdaptor() public view returns (IAuthorizerAdaptor) {\n        return _authorizerAdaptor;\n    }\n\n    function getCurrentDeploymentStage() external view returns (DeploymentStage) {\n        return _currentDeploymentStage;\n    }\n\n    function performFirstStage() external nonReentrant {\n        // Check internal state\n        require(_currentDeploymentStage == DeploymentStage.PENDING, \"First step already performed\");\n\n        // Check external state: we need admin permission on the Authorizer\n        ICurrentAuthorizer authorizer = getAuthorizer();\n        require(authorizer.canPerform(bytes32(0), address(this), address(0)), \"Not Authorizer admin\");\n\n        // Step 1: Allow multisig to checkpoint Polygon and Arbitrum gauges.\n        _addGaugeCheckpointerMultisig();\n\n        // Step 2: Add new gauges to the GaugeController.\n        _addNewEthereumGauges();\n\n        // Step 3: Deploy Arbitrum gauges and add them to the Gauge Controller.\n        _addNewArbitrumGauges();\n\n        // The following steps are performed in a separate stage to reduce the gas cost of the execution of each step.\n\n        firstStageActivationTime = block.timestamp;\n        _currentDeploymentStage = DeploymentStage.FIRST_STAGE_DONE;\n    }\n\n    function performSecondStage() external nonReentrant {\n        // Check internal state\n        require(_currentDeploymentStage == DeploymentStage.FIRST_STAGE_DONE, \"Not ready for second stage\");\n\n        // Check external state: we need admin permission on the Authorizer\n        ICurrentAuthorizer authorizer = getAuthorizer();\n        require(authorizer.canPerform(bytes32(0), address(this), address(0)), \"Not Authorizer admin\");\n\n        // Step 4: Deploy Polygon gauges and add them to the Gauge Controller.\n        _addNewPolygonGauges();\n\n        // Step 5: Kill deprecated Polygon and Arbitrum gauges.\n        _deprecateOldGauges();\n\n        // Step 6: Renounce admin role over the Authorizer.\n        authorizer.revokeRole(bytes32(0), address(this));\n\n        secondStageActivationTime = block.timestamp;\n        _currentDeploymentStage = DeploymentStage.SECOND_STAGE_DONE;\n    }\n\n    function _addGaugeCheckpointerMultisig() private {\n        ICurrentAuthorizer authorizer = getAuthorizer();\n        bytes32 checkpointGaugeRole = _authorizerAdaptor.getActionId(IStakelessGauge.checkpoint.selector);\n        authorizer.grantRole(checkpointGaugeRole, GAUGE_CHECKPOINTER_MULTISIG);\n    }\n\n    function _addNewEthereumGauges() private {\n        // All these addresses are required to be mainnet gauges which have already been deployed\n        address payable[3] memory newGauges = [\n            0xa57453737849A4029325dfAb3F6034656644E104, // 80HAUS-20WETH\n            0xA6468eca7633246Dcb24E5599681767D27d1F978, // 50COW-50GNO\n            0x158772F59Fe0d3b75805fC11139b46CBc89F70e5 // 50COW-50WETH\n            // 80NOTE-20WETH may be eligible to be added here as well soon\n        ];\n\n        ICurrentAuthorizer authorizer = getAuthorizer();\n        bytes32 addEthereumGaugeRole = _gaugeAdder.getActionId(IGaugeAdder.addEthereumGauge.selector);\n\n        authorizer.grantRole(addEthereumGaugeRole, address(this));\n\n        uint256 gaugesLength = newGauges.length;\n        for (uint256 i = 0; i < gaugesLength; i++) {\n            _gaugeAdder.addEthereumGauge(IStakingLiquidityGauge(newGauges[i]));\n        }\n\n        authorizer.revokeRole(addEthereumGaugeRole, address(this));\n    }\n\n    function _addNewPolygonGauges() private {\n        // All these addresses are required to match ChildChainStreamers which have been deployed to Polygon mainnet.\n        address payable[19] memory initialRecipients = [\n            // Streamer                                 // Pool\n            0x0FC855f77cE75Bb6a5d650D0c4cC92E460c03E25, // 0x0297e37f1873d2dab4487aa67cd56b58e2f27875\n            0x4b878e9727B9E91fDaE37CdD85949f4367220187, // 0x03cd191f589d12b0582a99808cf19851e468e6b5\n            0x66750473cE1dECBa4ef2576a47fd5FF7BF07C4e2, // 0x06df3b2bbb68adc8b0e302443692037ed9f91b42\n            0x2Ac595007563df473449005883F1F2BA3036eBeF, // 0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f\n            0x3b4D173601F8b36024cD49F7C5859D263385AF34, // 0x10f21c9bd8128a29aa785ab2de0d044dcdd79436\n            0xDe2F58c43CB222725A96236272c7749E4Abf1a25, // 0x186084ff790c65088ba694df11758fae4943ee9e\n            0x73CF9C065bFB9ABf76d94787324CfC4F751ac097, // 0x36128d5436d2d70cab39c9af9cce146c38554ff0\n            0x2845E95D2a4eFcd14Cf5D77B9Ba732788b96267f, // 0x5a6ae1fd70d04ba4a279fc219dfabc53825cb01d\n            0xb061F502d84f00d1B26568888A8f741cBE352C23, // 0x614b5038611729ed49e0ded154d8a5d3af9d1d9e\n            0xD65F35e750d5FFB63a3B6C7B4e5D4afe4CA5550D, // 0x7c9cf12d783821d5c63d8e9427af5c44bad92445\n            0x25a526ADb6925a9f40141567C06430D368232FEE, // 0x805ca3ccc61cc231851dee2da6aabff0a7714aa7\n            0x0fD7e9171b4dC9D89E157c2cc9A424Cd9C40a034, // 0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d\n            0xbc9F244cf5a774785E726A9157aFe3725d93249B, // 0xb204bf10bc3a5435017d3db247f56da601dfe08a\n            0x2CCc518B7B6177C2d44771d6b249F85a5A0cC1D4, // 0xc31a37105b94ab4efca1954a14f059af11fcd9bb\n            0x64AFDb69C22971B2ed289020f78a47E070cFadba, // 0xce66904b68f1f070332cbc631de7ee98b650b499\n            0x6F4d27730d5253148d82283E3aD93eae9264DaA3, // 0xcf354603a9aebd2ff9f33e1b04246d8ea204ae95\n            0x6812162860fAC498fB6f03339D39d23b5a264152, // 0xdb1db6e248d7bb4175f6e5a382d0a03fe3dcc813\n            0x5EA9C37A3eCf0c82900FbbFd064FE29A427c41AB, // 0xea4e073c8ac859f2994c07e627178719c8002dc0\n            0xA95E0B91A3F522dDE42D5b6a4e430e0BFAD0F2F5 // 0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56\n        ];\n\n        ICurrentAuthorizer authorizer = getAuthorizer();\n\n        bytes32 addGaugeFactoryRole = _gaugeAdder.getActionId(IGaugeAdder.addGaugeFactory.selector);\n        bytes32 addPolygonGaugeRole = _gaugeAdder.getActionId(IGaugeAdder.addPolygonGauge.selector);\n\n        // As these are the first polygon gauges we need to allowlist the factory in order to add them.\n        authorizer.grantRole(addGaugeFactoryRole, address(this));\n        _gaugeAdder.addGaugeFactory(_polygonGaugeFactory, IGaugeAdder.GaugeType.Polygon);\n        authorizer.revokeRole(addGaugeFactoryRole, address(this));\n\n        authorizer.grantRole(addPolygonGaugeRole, address(this));\n\n        uint256 initialRecipientsLength = initialRecipients.length;\n        for (uint256 i = 0; i < initialRecipientsLength; i++) {\n            address gauge = _deployGauge(_polygonGaugeFactory, initialRecipients[i]);\n            _gaugeAdder.addPolygonGauge(gauge);\n        }\n\n        authorizer.revokeRole(addPolygonGaugeRole, address(this));\n    }\n\n    function _addNewArbitrumGauges() private {\n        // All these addresses are required to match ChildChainStreamers which have been deployed to Arbitrum One.\n        address payable[14] memory initialRecipients = [\n            // Streamer                                 // Pool\n            0xD84d832F47C22Cf5413aE4FE2bd9D220FE6E3Dc6, // 0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf\n            0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2, // 0x0adeb25cb5920d4f7447af4a0428072edc2cee22\n            0x7C1028Bcde7Ca03EcF6DaAA9cBfA06E931913EaD, // 0x1533a3278f3f9141d5f820a184ea4b017fce2382\n            0xa57eaBc36A47dae5F11051c8339385cF95E77235, // 0x1779900c7707885720d39aa741f4086886307e9e\n            0x37A6FC079cad790E556BaeddA879358e076EF1B3, // 0x4a3a22a3e7fee0ffbb66f1c28bfac50f75546fc7\n            0xB556A02642A0f7be8c79932EFBC915F6e0485147, // 0x5a5884fc31948d59df2aeccca143de900d49e1a3\n            0x4B1137789FF06406a72bAce67Cd15Cf6786844cC, // 0x64541216bafffeec8ea535bb71fbc927831d0595\n            0xBd65449BabF09Be544d68fc7CCF0CEbe298fb214, // 0x651e00ffd5ecfa7f3d4f33d62ede0a97cf62ede2\n            0x2246211E715b6567a8F7138180EF61a79678ef46, // 0xb28670b3e7ad27bd41fb5938136bf9e9cba90d65\n            0xf2Bbfa122D41fFcF7056441578D108E3c40a7E99, // 0xb340b6b1a34019853cb05b2de6ee8ffd0b89a008\n            0xf081862BF62C24E3C708BdBeda24ABE6B55E42f7, // 0xb5b77f1ad2b520df01612399258e7787af63025d\n            0x28Cc04DcD85C4b40c6Dad463c628e98728ae9496, // 0xc2f082d33b5b8ef3a7e3de30da54efd3114512ac\n            0xDC467DB6AbdA75E62F4809f3a4934ae3aca1C380, // 0xc61ff48f94d801c1ceface0289085197b5ec44f0\n            0xd5Cd8328D93bf4bEf9824Fd288F32C8f0da1c551 // 0xcc65a812ce382ab909a11e434dbf75b34f1cc59d\n        ];\n\n        ICurrentAuthorizer authorizer = getAuthorizer();\n\n        bytes32 addGaugeFactoryRole = _gaugeAdder.getActionId(IGaugeAdder.addGaugeFactory.selector);\n        bytes32 addArbitrumGaugeRole = _gaugeAdder.getActionId(IGaugeAdder.addArbitrumGauge.selector);\n\n        // As these are the first arbitrum gauges we need to allowlist the factory in order to add them.\n        authorizer.grantRole(addGaugeFactoryRole, address(this));\n        _gaugeAdder.addGaugeFactory(_arbitrumGaugeFactory, IGaugeAdder.GaugeType.Arbitrum);\n        authorizer.revokeRole(addGaugeFactoryRole, address(this));\n\n        authorizer.grantRole(addArbitrumGaugeRole, address(this));\n\n        uint256 initialRecipientsLength = initialRecipients.length;\n        for (uint256 i = 0; i < initialRecipientsLength; i++) {\n            address gauge = _deployGauge(_arbitrumGaugeFactory, initialRecipients[i]);\n            _gaugeAdder.addArbitrumGauge(gauge);\n        }\n\n        authorizer.revokeRole(addArbitrumGaugeRole, address(this));\n    }\n\n    function _deprecateOldGauges() private {\n        address payable[2] memory deprecatedGauges = [\n            0x9fb8312CEdFB9b35364FF06311B429a2f4Cdf422, // Temporary Polygon gauge\n            0x3F829a8303455CB36B7Bcf3D1bdc18D5F6946aeA // Temporary Arbitrum gauge\n        ];\n\n        ICurrentAuthorizer authorizer = getAuthorizer();\n\n        bytes32 killGaugeRole = _authorizerAdaptor.getActionId(ILiquidityGauge.killGauge.selector);\n\n        authorizer.grantRole(killGaugeRole, address(this));\n\n        uint256 deprecatedGaugesLength = deprecatedGauges.length;\n        for (uint256 i = 0; i < deprecatedGaugesLength; i++) {\n            _killGauge(deprecatedGauges[i]);\n        }\n\n        authorizer.revokeRole(killGaugeRole, address(this));\n    }\n\n    function _deployGauge(ISingleRecipientGaugeFactory factory, address recipient) private returns (address gauge) {\n        // Find gauge which distributes BAL to listed recipient\n        gauge = address(factory.getRecipientGauge(recipient));\n        if (gauge == address(0)) {\n            // If gauge doesn't exist yet then create one.\n            gauge = factory.create(recipient);\n        }\n    }\n\n    function _killGauge(address gauge) private {\n        getAuthorizerAdaptor().performAction(gauge, abi.encodeWithSelector(ILiquidityGauge.killGauge.selector));\n    }\n\n    function _setGaugeTypeWeight(IGaugeAdder.GaugeType typeId, uint256 weight) private {\n        getAuthorizerAdaptor().performAction(\n            address(_gaugeController),\n            abi.encodeWithSelector(IGaugeController.change_type_weight.selector, int128(typeId), weight)\n        );\n    }\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./ILiquidityGaugeFactory.sol\";\n\ninterface ISingleRecipientGaugeFactory is ILiquidityGaugeFactory {\n    /**\n     * @notice Returns the gauge which sends funds to `recipient`.\n     */\n    function getRecipientGauge(address recipient) external view returns (ILiquidityGauge);\n\n    /**\n     * @notice Returns the recipient of `gauge`.\n     */\n    function getGaugeRecipient(address gauge) external view returns (address);\n}\n"
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"./ILiquidityGauge.sol\";\n\ninterface IStakelessGauge is ILiquidityGauge {\n    function checkpoint() external payable returns (bool);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 9999
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol": {
        "IAuthorizerAdaptor": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "getActionId",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAuthorizer",
              "outputs": [
                {
                  "internalType": "contract IAuthorizer",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVault",
              "outputs": [
                {
                  "internalType": "contract IVault",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "performAction",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getActionId(bytes4)": "851c1bb3",
              "getAuthorizer()": "aaabadc5",
              "getVault()": "8d928af8",
              "performAction(address,bytes)": "4036176a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"performAction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"performAction(address,bytes)\":{\"params\":{\"data\":\"- Calldata to be sent to the target contract\",\"target\":\"- Address of the contract to be called\"},\"returns\":{\"_0\":\"The bytes encoded return value from the performed function call\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAuthorizer()\":{\"notice\":\"Returns the Authorizer\"},\"getVault()\":{\"notice\":\"Returns the Balancer Vault\"},\"performAction(address,bytes)\":{\"notice\":\"Performs an arbitrary function call on a target contract, provided the caller is authorized to do so.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\":\"IAuthorizerAdaptor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x999b90d074bc14e7f1b5800053a63734855e9d30fcff6017dde0679636dde008\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://63768db76eb190dce7527f1c9bf0ea7c59402ad76e529ab3d7376d60e1823c4f\",\"dweb:/ipfs/QmbnmnSkPh1ukq43k6kHUSqafRznvY5ejoNZcHQT1TJfsh\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol": {
        "IBalancerMinter": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "minted",
                  "type": "uint256"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "minter",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "allowed_to_mint_for",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalancerToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalancerTokenAdmin",
              "outputs": [
                {
                  "internalType": "contract IBalancerTokenAdmin",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGaugeController",
              "outputs": [
                {
                  "internalType": "contract IGaugeController",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "minter",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getMinterApproval",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "mintFor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "gauges",
                  "type": "address[]"
                }
              ],
              "name": "mintMany",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "gauges",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "mintManyFor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "mint_for",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[8]",
                  "name": "gauges",
                  "type": "address[8]"
                }
              ],
              "name": "mint_many",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                }
              ],
              "name": "minted",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "minter",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approval",
                  "type": "bool"
                }
              ],
              "name": "setMinterApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "minter",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approval",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "setMinterApprovalWithSignature",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "minter",
                  "type": "address"
                }
              ],
              "name": "toggle_approve_mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowed_to_mint_for(address,address)": "a0990033",
              "getBalancerToken()": "c0039699",
              "getBalancerTokenAdmin()": "e6dec36f",
              "getGaugeController()": "58de9ade",
              "getMinterApproval(address,address)": "3c543bc6",
              "mint(address)": "6a627842",
              "mintFor(address,address)": "7504a15d",
              "mintMany(address[])": "397ada21",
              "mintManyFor(address[],address)": "3b9f7384",
              "mint_for(address,address)": "27f18ae3",
              "mint_many(address[8])": "a51e1904",
              "minted(address,address)": "8b752bb0",
              "setMinterApproval(address,bool)": "0de54ba0",
              "setMinterApprovalWithSignature(address,bool,address,uint256,uint8,bytes32,bytes32)": "c6542794",
              "toggle_approve_mint(address)": "dd289d60"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"allowed_to_mint_for\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalancerToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalancerTokenAdmin\",\"outputs\":[{\"internalType\":\"contract IBalancerTokenAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGaugeController\",\"outputs\":[{\"internalType\":\"contract IGaugeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getMinterApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mintFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"gauges\",\"type\":\"address[]\"}],\"name\":\"mintMany\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"gauges\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mintManyFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mint_for\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[8]\",\"name\":\"gauges\",\"type\":\"address[8]\"}],\"name\":\"mint_many\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"minted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approval\",\"type\":\"bool\"}],\"name\":\"setMinterApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approval\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"setMinterApprovalWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"toggle_approve_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mint(address)\":{\"params\":{\"gauge\":\"`LiquidityGauge` address to get mintable amount from\"}},\"mintFor(address,address)\":{\"details\":\"Only possible when `msg.sender` has been approved by `user` to mint on their behalf\",\"params\":{\"gauge\":\"`LiquidityGauge` address to get mintable amount from\",\"user\":\"Address to mint to\"}},\"mintMany(address[])\":{\"params\":{\"gauges\":\"List of `LiquidityGauge` addresses\"}},\"mintManyFor(address[],address)\":{\"details\":\"Only possible when `msg.sender` has been approved by `user` to mint on their behalf\",\"params\":{\"gauges\":\"List of `LiquidityGauge` addresses\",\"user\":\"Address to mint to\"}},\"mint_for(address,address)\":{\"details\":\"Only possible when `msg.sender` has been approved by `user` to mint on their behalf\",\"params\":{\"gauge\":\"`LiquidityGauge` address to get mintable amount from\",\"user\":\"Address to mint to\"}},\"mint_many(address[8])\":{\"details\":\"This function is not recommended as `mintMany()` is more flexible and gas efficient\",\"params\":{\"gauges\":\"List of `LiquidityGauge` addresses\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowed_to_mint_for(address,address)\":{\"notice\":\"Whether `minter` is approved to mint tokens for `user`\"},\"getBalancerToken()\":{\"notice\":\"Returns the address of the Balancer Governance Token\"},\"getBalancerTokenAdmin()\":{\"notice\":\"Returns the address of the Balancer Token Admin contract\"},\"getGaugeController()\":{\"notice\":\"Returns the address of the Gauge Controller\"},\"getMinterApproval(address,address)\":{\"notice\":\"Whether `minter` is approved to mint tokens for `user`\"},\"mint(address)\":{\"notice\":\"Mint everything which belongs to `msg.sender` and send to them\"},\"mintFor(address,address)\":{\"notice\":\"Mint tokens for `user`\"},\"mintMany(address[])\":{\"notice\":\"Mint everything which belongs to `msg.sender` across multiple gauges\"},\"mintManyFor(address[],address)\":{\"notice\":\"Mint tokens for `user` across multiple gauges\"},\"mint_for(address,address)\":{\"notice\":\"Mint tokens for `user`\"},\"mint_many(address[8])\":{\"notice\":\"Mint everything which belongs to `msg.sender` across multiple gauges\"},\"minted(address,address)\":{\"notice\":\"The total number of tokens minted for `user` from `gauge`\"},\"setMinterApproval(address,bool)\":{\"notice\":\"Set whether `minter` is approved to mint tokens on your behalf\"},\"setMinterApprovalWithSignature(address,bool,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Set whether `minter` is approved to mint tokens on behalf of `user`, who has signed a message authorizing them.\"},\"toggle_approve_mint(address)\":{\"notice\":\"Toggle whether `minter` is approved to mint tokens for `user`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol\":\"IBalancerMinter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x999b90d074bc14e7f1b5800053a63734855e9d30fcff6017dde0679636dde008\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://63768db76eb190dce7527f1c9bf0ea7c59402ad76e529ab3d7376d60e1823c4f\",\"dweb:/ipfs/QmbnmnSkPh1ukq43k6kHUSqafRznvY5ejoNZcHQT1TJfsh\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol\":{\"keccak256\":\"0x286a4b1cb4a632954e58c68baac671fb0dcbd139c5a353b0419088b0de40477c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b57ab7eadc573d8d23b3668b90412e65182beea79726c1a1b8cb57f76abc74a\",\"dweb:/ipfs/QmfNe6Uu4S4xMDzMktJnGz92MT6zVENi3Rye2AazUcrLL4\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol\":{\"keccak256\":\"0x70d5951087ad40350876adde9e9d377ccb3f4084c13dbdd144a0a2b362abdd2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f01d5d7a4cd855d532cd5fc739f9da334fe2e4c1a822f35cd3dd70ddf4c4144\",\"dweb:/ipfs/QmZSdw3TJL5FhZrvZqVWJQPcioLqXP9rMHwhYnm6wUpu3U\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol\":{\"keccak256\":\"0x6a6b3d171d65a0cab4d1ae3138171decd1faf234d483a223edf2eb2d300d6561\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://351ad36c433b722057145dcd9c85dc5e2f2df9ec8ea8f17a247d73851c6a5779\",\"dweb:/ipfs/QmfVR9uhTe6KDudsRLFCbBsE1w3aMgnbYBm5eke44bfLFq\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol\":{\"keccak256\":\"0x5e6f331c303495f1dc03cb763902abb1c7b74a4b635c20c35beb6a2e4013ec94\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c258ccd4df96bf251b338e2267c2ff3f25901e0fb71ed47e51ce92c3bbcbea2b\",\"dweb:/ipfs/Qme9CkvWEktE8LjsfYPSNHvpQe782HHTdv2encSof7DFRc\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x3d362ad70a19a0307bc9af2b053c4de85a4e0aacf1eb6b1fb5083873b8a62045\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b141dcb49084bd633c4b95765c57e760deadf484a599e7f8fcbb74a46febe3f\",\"dweb:/ipfs/QmQz9P1bWh8mNQUxz5jdqNqwS226osyCPbQA8DznFspf4f\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol": {
        "IBalancerToken": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINTER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "SNAPSHOT_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "getRoleMember",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleMemberCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "snapshot",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "MINTER_ROLE()": "d5391393",
              "SNAPSHOT_ROLE()": "7028e2cd",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "getRoleMember(bytes32,uint256)": "9010d07c",
              "getRoleMemberCount(bytes32)": "ca15c873",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "mint(address,uint256)": "40c10f19",
              "revokeRole(bytes32,address)": "d547741f",
              "snapshot()": "9711715a",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SNAPSHOT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol\":\"IBalancerToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol\":{\"keccak256\":\"0x70d5951087ad40350876adde9e9d377ccb3f4084c13dbdd144a0a2b362abdd2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f01d5d7a4cd855d532cd5fc739f9da334fe2e4c1a822f35cd3dd70ddf4c4144\",\"dweb:/ipfs/QmZSdw3TJL5FhZrvZqVWJQPcioLqXP9rMHwhYnm6wUpu3U\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol": {
        "IBalancerTokenAdmin": {
          "abi": [
            {
              "inputs": [],
              "name": "INITIAL_RATE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "RATE_DENOMINATOR",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "RATE_REDUCTION_COEFFICIENT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "RATE_REDUCTION_TIME",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "activate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "getActionId",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalancerToken",
              "outputs": [
                {
                  "internalType": "contract IBalancerToken",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVault",
              "outputs": [
                {
                  "internalType": "contract IVault",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "startEpochTimeWrite",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "INITIAL_RATE()": "4dbac733",
              "RATE_DENOMINATOR()": "7efad8e0",
              "RATE_REDUCTION_COEFFICIENT()": "21609bbf",
              "RATE_REDUCTION_TIME()": "b87b5616",
              "activate()": "0f15f4c0",
              "getActionId(bytes4)": "851c1bb3",
              "getBalancerToken()": "c0039699",
              "getVault()": "8d928af8",
              "mint(address,uint256)": "40c10f19",
              "rate()": "2c4e722e",
              "startEpochTimeWrite()": "a228bced"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"INITIAL_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATE_REDUCTION_COEFFICIENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATE_REDUCTION_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalancerToken\",\"outputs\":[{\"internalType\":\"contract IBalancerToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startEpochTimeWrite\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getBalancerToken()\":{\"notice\":\"Returns the address of the Balancer Governance Token\"},\"getVault()\":{\"notice\":\"Returns the Balancer Vault.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol\":\"IBalancerTokenAdmin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol\":{\"keccak256\":\"0x70d5951087ad40350876adde9e9d377ccb3f4084c13dbdd144a0a2b362abdd2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f01d5d7a4cd855d532cd5fc739f9da334fe2e4c1a822f35cd3dd70ddf4c4144\",\"dweb:/ipfs/QmZSdw3TJL5FhZrvZqVWJQPcioLqXP9rMHwhYnm6wUpu3U\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol\":{\"keccak256\":\"0x6a6b3d171d65a0cab4d1ae3138171decd1faf234d483a223edf2eb2d300d6561\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://351ad36c433b722057145dcd9c85dc5e2f2df9ec8ea8f17a247d73851c6a5779\",\"dweb:/ipfs/QmfVR9uhTe6KDudsRLFCbBsE1w3aMgnbYBm5eke44bfLFq\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol": {
        "IGaugeAdder": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "enum IGaugeAdder.GaugeType",
                  "name": "gaugeType",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "contract ILiquidityGaugeFactory",
                  "name": "gaugeFactory",
                  "type": "address"
                }
              ],
              "name": "GaugeFactoryAdded",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "rootGauge",
                  "type": "address"
                }
              ],
              "name": "addArbitrumGauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IStakingLiquidityGauge",
                  "name": "gauge",
                  "type": "address"
                }
              ],
              "name": "addEthereumGauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ILiquidityGaugeFactory",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "enum IGaugeAdder.GaugeType",
                  "name": "gaugeType",
                  "type": "uint8"
                }
              ],
              "name": "addGaugeFactory",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "rootGauge",
                  "type": "address"
                }
              ],
              "name": "addPolygonGauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "getActionId",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum IGaugeAdder.GaugeType",
                  "name": "gaugeType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "getFactoryForGaugeType",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum IGaugeAdder.GaugeType",
                  "name": "gaugeType",
                  "type": "uint8"
                }
              ],
              "name": "getFactoryForGaugeTypeCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGaugeController",
              "outputs": [
                {
                  "internalType": "contract IGaugeController",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "getPoolGauge",
              "outputs": [
                {
                  "internalType": "contract ILiquidityGauge",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                },
                {
                  "internalType": "enum IGaugeAdder.GaugeType",
                  "name": "gaugeType",
                  "type": "uint8"
                }
              ],
              "name": "isGaugeFromValidFactory",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addArbitrumGauge(address)": "bf2972d5",
              "addEthereumGauge(address)": "5e45a273",
              "addGaugeFactory(address,uint8)": "6440e973",
              "addPolygonGauge(address)": "f87fcfa2",
              "getActionId(bytes4)": "851c1bb3",
              "getFactoryForGaugeType(uint8,uint256)": "52854ed7",
              "getFactoryForGaugeTypeCount(uint8)": "f3d8b4cf",
              "getGaugeController()": "58de9ade",
              "getPoolGauge(address)": "a8ea6875",
              "isGaugeFromValidFactory(address,uint8)": "abfca009"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum IGaugeAdder.GaugeType\",\"name\":\"gaugeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract ILiquidityGaugeFactory\",\"name\":\"gaugeFactory\",\"type\":\"address\"}],\"name\":\"GaugeFactoryAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rootGauge\",\"type\":\"address\"}],\"name\":\"addArbitrumGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStakingLiquidityGauge\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"addEthereumGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILiquidityGaugeFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"enum IGaugeAdder.GaugeType\",\"name\":\"gaugeType\",\"type\":\"uint8\"}],\"name\":\"addGaugeFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rootGauge\",\"type\":\"address\"}],\"name\":\"addPolygonGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IGaugeAdder.GaugeType\",\"name\":\"gaugeType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFactoryForGaugeType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IGaugeAdder.GaugeType\",\"name\":\"gaugeType\",\"type\":\"uint8\"}],\"name\":\"getFactoryForGaugeTypeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGaugeController\",\"outputs\":[{\"internalType\":\"contract IGaugeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolGauge\",\"outputs\":[{\"internalType\":\"contract ILiquidityGauge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"enum IGaugeAdder.GaugeType\",\"name\":\"gaugeType\",\"type\":\"uint8\"}],\"name\":\"isGaugeFromValidFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getPoolGauge(address)\":{\"details\":\"Gauge Factories also implement a `getPoolGauge` function which maps pools to gauges which it has deployed. This function provides global information by using which gauge has been added to the Gauge Controller to represent the canonical gauge for a given pool address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addArbitrumGauge(address)\":{\"notice\":\"Adds a new gauge to the GaugeController for the \\\"Arbitrum\\\" type. This function must be called with the address of the *root* gauge which is deployed on Ethereum mainnet. It should not be called with the address of the gauge which is deployed on Arbitrum\"},\"addEthereumGauge(address)\":{\"notice\":\"Adds a new gauge to the GaugeController for the \\\"Ethereum\\\" type.\"},\"addGaugeFactory(address,uint8)\":{\"notice\":\"Adds `factory` as an allowlisted factory contract for gauges with type `gaugeType`.\"},\"addPolygonGauge(address)\":{\"notice\":\"Adds a new gauge to the GaugeController for the \\\"Polygon\\\" type. This function must be called with the address of the *root* gauge which is deployed on Ethereum mainnet. It should not be called with the address of the gauge which is deployed on Polygon\"},\"getFactoryForGaugeType(uint8,uint256)\":{\"notice\":\"Returns the `index`'th factory for gauge type `gaugeType`\"},\"getFactoryForGaugeTypeCount(uint8)\":{\"notice\":\"Returns the number of factories for gauge type `gaugeType`\"},\"getGaugeController()\":{\"notice\":\"Returns the address of the Gauge Controller\"},\"getPoolGauge(address)\":{\"notice\":\"Returns the gauge corresponding to a Balancer pool `pool` on Ethereum mainnet. Only returns gauges which have been added to the Gauge Controller.\"},\"isGaugeFromValidFactory(address,uint8)\":{\"notice\":\"Returns whether `gauge` has been deployed by one of the listed factories for the gauge type `gaugeType`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol\":\"IGaugeAdder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x999b90d074bc14e7f1b5800053a63734855e9d30fcff6017dde0679636dde008\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://63768db76eb190dce7527f1c9bf0ea7c59402ad76e529ab3d7376d60e1823c4f\",\"dweb:/ipfs/QmbnmnSkPh1ukq43k6kHUSqafRznvY5ejoNZcHQT1TJfsh\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol\":{\"keccak256\":\"0x9f0a6cae20422fc68ffb45dc0bd9f72f443ff704162ab001d7c7d8b0c857f7f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe4db95c1fdc3ce371e763d45066bd554ded70a34758ce0ba56b0f2857cceaaa\",\"dweb:/ipfs/QmPjAApGbRQgsvMaxFYK25KNgzHb9fWew5UV5CkoQfjB2b\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol\":{\"keccak256\":\"0x5e6f331c303495f1dc03cb763902abb1c7b74a4b635c20c35beb6a2e4013ec94\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c258ccd4df96bf251b338e2267c2ff3f25901e0fb71ed47e51ce92c3bbcbea2b\",\"dweb:/ipfs/Qme9CkvWEktE8LjsfYPSNHvpQe782HHTdv2encSof7DFRc\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":{\"keccak256\":\"0xe73d2e5fcc18b9f53cb6795d83a160c34d1219ce5883a7a276cd8d07d5598a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd6f4d728b50fb1ede61a5aed2c86651a810f739180fe10c8ab6f3e11726015\",\"dweb:/ipfs/QmZSQgJUG7wa7NgoH9ZsaFBX188FFSBg3Z4uyj1dbAtGTZ\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol\":{\"keccak256\":\"0x496c5997689ccb7666e020cfabcf3d46b099818f958a7b78ca5f385fc2117f36\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e751bdd6c7b13f5cc68606ef9321291470d7c064ac15b74fdcce75a5b519a039\",\"dweb:/ipfs/QmQ7NpZQQKovhNjeeZ2aYt5mzoxbEgYFJC633PP9BdtHb7\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol\":{\"keccak256\":\"0xa535e9577698627ccb3f4470426c2e4702d236c79305d864d577cf7d1daf748a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a3afe9a2630408a9037b19d088232d3ebacc6d29ed7ef31412557dc4485bb862\",\"dweb:/ipfs/QmbbFmZYJUMraPx3sKzpY4foFpRPTa1MnyHnKLgvxgzdFn\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x3d362ad70a19a0307bc9af2b053c4de85a4e0aacf1eb6b1fb5083873b8a62045\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b141dcb49084bd633c4b95765c57e760deadf484a599e7f8fcbb74a46febe3f\",\"dweb:/ipfs/QmQz9P1bWh8mNQUxz5jdqNqwS226osyCPbQA8DznFspf4f\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol": {
        "IGaugeController": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                },
                {
                  "internalType": "int128",
                  "name": "gaugeType",
                  "type": "int128"
                }
              ],
              "name": "add_gauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                }
              ],
              "name": "add_type",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "contract IAuthorizerAdaptor",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int128",
                  "name": "typeId",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                }
              ],
              "name": "change_type_weight",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                }
              ],
              "name": "checkpoint_gauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "gauge_relative_weight",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                }
              ],
              "name": "gauge_types",
              "outputs": [
                {
                  "internalType": "int128",
                  "name": "",
                  "type": "int128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "n_gauge_types",
              "outputs": [
                {
                  "internalType": "int128",
                  "name": "",
                  "type": "int128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "voting_escrow",
              "outputs": [
                {
                  "internalType": "contract IVotingEscrow",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "add_gauge(address,int128)": "3a04f900",
              "add_type(string,uint256)": "92d0d232",
              "admin()": "f851a440",
              "change_type_weight(int128,uint256)": "db1ca260",
              "checkpoint_gauge(address)": "615e5237",
              "gauge_relative_weight(address,uint256)": "d3078c94",
              "gauge_types(address)": "3f9095b7",
              "n_gauge_types()": "9fba03a1",
              "token()": "fc0c546a",
              "voting_escrow()": "dfe05031"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"int128\",\"name\":\"gaugeType\",\"type\":\"int128\"}],\"name\":\"add_gauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"add_type\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"contract IAuthorizerAdaptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"typeId\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"change_type_weight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"checkpoint_gauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"gauge_relative_weight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"gauge_types\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"n_gauge_types\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voting_escrow\",\"outputs\":[{\"internalType\":\"contract IVotingEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol\":\"IGaugeController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x999b90d074bc14e7f1b5800053a63734855e9d30fcff6017dde0679636dde008\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://63768db76eb190dce7527f1c9bf0ea7c59402ad76e529ab3d7376d60e1823c4f\",\"dweb:/ipfs/QmbnmnSkPh1ukq43k6kHUSqafRznvY5ejoNZcHQT1TJfsh\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol\":{\"keccak256\":\"0x5e6f331c303495f1dc03cb763902abb1c7b74a4b635c20c35beb6a2e4013ec94\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c258ccd4df96bf251b338e2267c2ff3f25901e0fb71ed47e51ce92c3bbcbea2b\",\"dweb:/ipfs/Qme9CkvWEktE8LjsfYPSNHvpQe782HHTdv2encSof7DFRc\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x3d362ad70a19a0307bc9af2b053c4de85a4e0aacf1eb6b1fb5083873b8a62045\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b141dcb49084bd633c4b95765c57e760deadf484a599e7f8fcbb74a46febe3f\",\"dweb:/ipfs/QmQz9P1bWh8mNQUxz5jdqNqwS226osyCPbQA8DznFspf4f\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol": {
        "ILiquidityGauge": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "integrate_fraction",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "is_killed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "killGauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unkillGauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "user_checkpoint",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "integrate_fraction(address)": "09400707",
              "is_killed()": "9c868ac0",
              "killGauge()": "ab8f0945",
              "unkillGauge()": "d34fb267",
              "user_checkpoint(address)": "4b820093"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"integrate_fraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_killed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"killGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unkillGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"user_checkpoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":\"ILiquidityGauge\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":{\"keccak256\":\"0xe73d2e5fcc18b9f53cb6795d83a160c34d1219ce5883a7a276cd8d07d5598a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd6f4d728b50fb1ede61a5aed2c86651a810f739180fe10c8ab6f3e11726015\",\"dweb:/ipfs/QmZSQgJUG7wa7NgoH9ZsaFBX188FFSBg3Z4uyj1dbAtGTZ\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol": {
        "ILiquidityGaugeFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "create",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                }
              ],
              "name": "isGaugeFromFactory",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "create(address)": "9ed93318",
              "isGaugeFromFactory(address)": "ce3cc8bd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"isGaugeFromFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isGaugeFromFactory(address)\":{\"notice\":\"Returns true if `gauge` was created by this factory.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol\":\"ILiquidityGaugeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":{\"keccak256\":\"0xe73d2e5fcc18b9f53cb6795d83a160c34d1219ce5883a7a276cd8d07d5598a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd6f4d728b50fb1ede61a5aed2c86651a810f739180fe10c8ab6f3e11726015\",\"dweb:/ipfs/QmZSQgJUG7wa7NgoH9ZsaFBX188FFSBg3Z4uyj1dbAtGTZ\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol\":{\"keccak256\":\"0x496c5997689ccb7666e020cfabcf3d46b099818f958a7b78ca5f385fc2117f36\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e751bdd6c7b13f5cc68606ef9321291470d7c064ac15b74fdcce75a5b519a039\",\"dweb:/ipfs/QmQ7NpZQQKovhNjeeZ2aYt5mzoxbEgYFJC633PP9BdtHb7\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol": {
        "ISingleRecipientGaugeFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "create",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                }
              ],
              "name": "getGaugeRecipient",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "getRecipientGauge",
              "outputs": [
                {
                  "internalType": "contract ILiquidityGauge",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "gauge",
                  "type": "address"
                }
              ],
              "name": "isGaugeFromFactory",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "create(address)": "9ed93318",
              "getGaugeRecipient(address)": "fa72ce95",
              "getRecipientGauge(address)": "7d5d0d10",
              "isGaugeFromFactory(address)": "ce3cc8bd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"getGaugeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"getRecipientGauge\",\"outputs\":[{\"internalType\":\"contract ILiquidityGauge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"isGaugeFromFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGaugeRecipient(address)\":{\"notice\":\"Returns the recipient of `gauge`.\"},\"getRecipientGauge(address)\":{\"notice\":\"Returns the gauge which sends funds to `recipient`.\"},\"isGaugeFromFactory(address)\":{\"notice\":\"Returns true if `gauge` was created by this factory.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol\":\"ISingleRecipientGaugeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":{\"keccak256\":\"0xe73d2e5fcc18b9f53cb6795d83a160c34d1219ce5883a7a276cd8d07d5598a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd6f4d728b50fb1ede61a5aed2c86651a810f739180fe10c8ab6f3e11726015\",\"dweb:/ipfs/QmZSQgJUG7wa7NgoH9ZsaFBX188FFSBg3Z4uyj1dbAtGTZ\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol\":{\"keccak256\":\"0x496c5997689ccb7666e020cfabcf3d46b099818f958a7b78ca5f385fc2117f36\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e751bdd6c7b13f5cc68606ef9321291470d7c064ac15b74fdcce75a5b519a039\",\"dweb:/ipfs/QmQ7NpZQQKovhNjeeZ2aYt5mzoxbEgYFJC633PP9BdtHb7\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol\":{\"keccak256\":\"0x0fbfdb1443cb651d81d7b2a7bf5d4211f96a3cf2698d83af9653f701e9b10f26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c65076fedf4ab56455d4d94fde8547b6610b71ca16a7cf9ead88ef68ca2262a7\",\"dweb:/ipfs/QmPCo9osP53Ay871mk4sWxuAki7oq4odCtjpY3wpS743cn\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol": {
        "IStakelessGauge": {
          "abi": [
            {
              "inputs": [],
              "name": "checkpoint",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "integrate_fraction",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "is_killed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "killGauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unkillGauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "user_checkpoint",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "checkpoint()": "c2c4c5c1",
              "integrate_fraction(address)": "09400707",
              "is_killed()": "9c868ac0",
              "killGauge()": "ab8f0945",
              "unkillGauge()": "d34fb267",
              "user_checkpoint(address)": "4b820093"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"checkpoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"integrate_fraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_killed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"killGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unkillGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"user_checkpoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol\":\"IStakelessGauge\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":{\"keccak256\":\"0xe73d2e5fcc18b9f53cb6795d83a160c34d1219ce5883a7a276cd8d07d5598a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd6f4d728b50fb1ede61a5aed2c86651a810f739180fe10c8ab6f3e11726015\",\"dweb:/ipfs/QmZSQgJUG7wa7NgoH9ZsaFBX188FFSBg3Z4uyj1dbAtGTZ\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol\":{\"keccak256\":\"0x1e377f8d163d624e24dea8f3c8e38e18e56e8b87e7654dc14efffd53e022e774\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://935d78b37a8e78fc0e06fe818be751a956269ace1597a5b6666c432196f828b3\",\"dweb:/ipfs/Qmee93PLdq43UZczR1nkSXfzimz9smUuiEPSz2GK2YScbR\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol": {
        "IStakingLiquidityGauge": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "distributor",
                  "type": "address"
                }
              ],
              "name": "add_reward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "claim_rewards",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "lpToken",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "integrate_fraction",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "is_killed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "killGauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lp_token",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "distributor",
                  "type": "address"
                }
              ],
              "name": "set_reward_distributor",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unkillGauge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "user_checkpoint",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "add_reward(address,address)": "e8de0d4d",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "claim_rewards(address)": "84e9bd7e",
              "deposit(uint256,address)": "6e553f65",
              "initialize(address)": "c4d66de8",
              "integrate_fraction(address)": "09400707",
              "is_killed()": "9c868ac0",
              "killGauge()": "ab8f0945",
              "lp_token()": "82c63066",
              "set_reward_distributor(address,address)": "058a3a24",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "unkillGauge()": "d34fb267",
              "user_checkpoint(address)": "4b820093",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"}],\"name\":\"add_reward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claim_rewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"integrate_fraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_killed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"killGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lp_token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"}],\"name\":\"set_reward_distributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unkillGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"user_checkpoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol\":\"IStakingLiquidityGauge\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":{\"keccak256\":\"0xe73d2e5fcc18b9f53cb6795d83a160c34d1219ce5883a7a276cd8d07d5598a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd6f4d728b50fb1ede61a5aed2c86651a810f739180fe10c8ab6f3e11726015\",\"dweb:/ipfs/QmZSQgJUG7wa7NgoH9ZsaFBX188FFSBg3Z4uyj1dbAtGTZ\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol\":{\"keccak256\":\"0xa535e9577698627ccb3f4470426c2e4702d236c79305d864d577cf7d1daf748a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a3afe9a2630408a9037b19d088232d3ebacc6d29ed7ef31412557dc4485bb862\",\"dweb:/ipfs/QmbbFmZYJUMraPx3sKzpY4foFpRPTa1MnyHnKLgvxgzdFn\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol": {
        "IVotingEscrow": {
          "abi": [
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "contract IAuthorizerAdaptor",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "apply_smart_wallet_checker",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "checkpoint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newSmartWalletChecker",
                  "type": "address"
                }
              ],
              "name": "commit_smart_wallet_checker",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "epoch",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "point_history",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "int128",
                      "name": "bias",
                      "type": "int128"
                    },
                    {
                      "internalType": "int128",
                      "name": "slope",
                      "type": "int128"
                    },
                    {
                      "internalType": "uint256",
                      "name": "ts",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "blk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IVotingEscrow.Point",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "smart_wallet_checker",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "user_point_epoch",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "user_point_history",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "int128",
                      "name": "bias",
                      "type": "int128"
                    },
                    {
                      "internalType": "int128",
                      "name": "slope",
                      "type": "int128"
                    },
                    {
                      "internalType": "uint256",
                      "name": "ts",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "blk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IVotingEscrow.Point",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "admin()": "f851a440",
              "apply_smart_wallet_checker()": "8e5b490f",
              "checkpoint()": "c2c4c5c1",
              "commit_smart_wallet_checker(address)": "57f901e2",
              "epoch()": "900cf0cf",
              "point_history(uint256)": "d1febfb9",
              "smart_wallet_checker()": "7175d4f7",
              "totalSupply(uint256)": "bd85b039",
              "user_point_epoch(address)": "010ae757",
              "user_point_history(address,uint256)": "28d09d47"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"contract IAuthorizerAdaptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"apply_smart_wallet_checker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSmartWalletChecker\",\"type\":\"address\"}],\"name\":\"commit_smart_wallet_checker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"point_history\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"}],\"internalType\":\"struct IVotingEscrow.Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"smart_wallet_checker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"user_point_epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"user_point_history\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"}],\"internalType\":\"struct IVotingEscrow.Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol\":\"IVotingEscrow\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x999b90d074bc14e7f1b5800053a63734855e9d30fcff6017dde0679636dde008\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://63768db76eb190dce7527f1c9bf0ea7c59402ad76e529ab3d7376d60e1823c4f\",\"dweb:/ipfs/QmbnmnSkPh1ukq43k6kHUSqafRznvY5ejoNZcHQT1TJfsh\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x3d362ad70a19a0307bc9af2b053c4de85a4e0aacf1eb6b1fb5083873b8a62045\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b141dcb49084bd633c4b95765c57e760deadf484a599e7f8fcbb74a46febe3f\",\"dweb:/ipfs/QmQz9P1bWh8mNQUxz5jdqNqwS226osyCPbQA8DznFspf4f\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol": {
        "Errors": {
          "abi": [],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022546453ef973fa13dbe861104cb68a70f5f2a7af88f13fe83cf7a25637d49b364736f6c63430007010033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SLOAD PUSH5 0x53EF973FA1 RETURNDATASIZE 0xBE DUP7 GT DIV 0xCB PUSH9 0xA70F5F2A7AF88F13FE DUP4 0xCF PUSH27 0x25637D49B364736F6C634300070100330000000000000000000000 ",
              "sourceMap": "4248:8326:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022546453ef973fa13dbe861104cb68a70f5f2a7af88f13fe83cf7a25637d49b364736f6c63430007010033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SLOAD PUSH5 0x53EF973FA1 RETURNDATASIZE 0xBE DUP7 GT DIV 0xCB PUSH9 0xA70F5F2A7AF88F13FE DUP4 0xCF PUSH27 0x25637D49B364736F6C634300070100330000000000000000000000 ",
              "sourceMap": "4248:8326:12:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\":\"Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\":{\"keccak256\":\"0x283835a4082eb3f0676d86a6549b0d225eaf4ba61aa2fce4008c51f9c1e65e09\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://400f999919366c64b30fbf836d240f9705aac314c3bce76c7b11e779d3b37a47\",\"dweb:/ipfs/QmbtppG2jgqSUEjT197nJ97osNDWnaiiRSv4xWMPgUpJ5X\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol": {
        "IAuthentication": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "getActionId",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getActionId(bytes4)": "851c1bb3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":\"IAuthentication\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol": {
        "ISignaturesValidator": {
          "abi": [
            {
              "inputs": [],
              "name": "getDomainSeparator",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getNextNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getDomainSeparator()": "ed24911d",
              "getNextNonce(address)": "90193b7c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SignatureValidator helper, used to support meta-transactions.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":\"ISignaturesValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol": {
        "ITemporarilyPausable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "paused",
                  "type": "bool"
                }
              ],
              "name": "PausedStateChanged",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "getPausedState",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "paused",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "pauseWindowEndTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bufferPeriodEndTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getPausedState()": "1c0de051"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the TemporarilyPausable helper.\",\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol": {
        "IWETH": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "deposit()": "d0e30db0",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for WETH9. See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\":{\"keccak256\":\"0x283835a4082eb3f0676d86a6549b0d225eaf4ba61aa2fce4008c51f9c1e65e09\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://400f999919366c64b30fbf836d240f9705aac314c3bce76c7b11e779d3b37a47\",\"dweb:/ipfs/QmbtppG2jgqSUEjT197nJ97osNDWnaiiRSv4xWMPgUpJ5X\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfe6da463cd5a6df10b49020a69b0978a4ef65d029e747c515062ec4a3359c464\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203824853ae4896a6216d53aa537a6941c9992d528c9aa4dd385114dac0f169c\",\"dweb:/ipfs/Qmdb6pN9EVQVHFkxfdMoWUKmRMx7BtVzqcXUqGJh8Xotgy\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol": {
        "IBALTokenHolder": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "getActionId",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "sweepTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawFunds",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getActionId(bytes4)": "851c1bb3",
              "sweepTokens(address,address,uint256)": "8b6ca32c",
              "withdrawFunds(address,uint256)": "c1075329"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sweepTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol\":\"IBALTokenHolder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol\":{\"keccak256\":\"0x8e156f0c3c6fc2ff7b3bde24c11449b8076900c894252bc26e5022f50b03b89c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://60d4b9e132c6ed5cb5e0800b019c93a9d2c635849d17ab6d3c81c62b50d22633\",\"dweb:/ipfs/QmTG9ZofezQrLxiytV2F7apCV2tDw3VkvefnhX3eJ12JJr\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol": {
        "IBALTokenHolderFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                }
              ],
              "name": "create",
              "outputs": [
                {
                  "internalType": "contract IBALTokenHolder",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalancerToken",
              "outputs": [
                {
                  "internalType": "contract IBalancerToken",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVault",
              "outputs": [
                {
                  "internalType": "contract IVault",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "holder",
                  "type": "address"
                }
              ],
              "name": "isHolderFromFactory",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "create(string)": "b6a46b3b",
              "getBalancerToken()": "c0039699",
              "getVault()": "8d928af8",
              "isHolderFromFactory(address)": "36390717"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"contract IBALTokenHolder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalancerToken\",\"outputs\":[{\"internalType\":\"contract IBalancerToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"isHolderFromFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol\":\"IBALTokenHolderFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol\":{\"keccak256\":\"0x70d5951087ad40350876adde9e9d377ccb3f4084c13dbdd144a0a2b362abdd2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f01d5d7a4cd855d532cd5fc739f9da334fe2e4c1a822f35cd3dd70ddf4c4144\",\"dweb:/ipfs/QmZSdw3TJL5FhZrvZqVWJQPcioLqXP9rMHwhYnm6wUpu3U\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol\":{\"keccak256\":\"0x8e156f0c3c6fc2ff7b3bde24c11449b8076900c894252bc26e5022f50b03b89c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://60d4b9e132c6ed5cb5e0800b019c93a9d2c635849d17ab6d3c81c62b50d22633\",\"dweb:/ipfs/QmTG9ZofezQrLxiytV2F7apCV2tDw3VkvefnhX3eJ12JJr\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol\":{\"keccak256\":\"0xdb55aadaa2bbcf0c31a73a681b115be07f48cd21824acf3d7df1282e7ede54ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://37a4530bbadbfc953872129f65b7b07b1d3e21d2e790d0701cde279709351a6d\",\"dweb:/ipfs/QmWgHBQzqxr1SfiLjS8tAnsmn6D5oEfcZUTQsQgPP5U1eK\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol": {
        "IAsset": {
          "abi": [],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":\"IAsset\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol": {
        "IAuthorizer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "actionId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "where",
                  "type": "address"
                }
              ],
              "name": "canPerform",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "canPerform(bytes32,address,address)": "9be2a884"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol": {
        "IFlashLoanRecipient": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "feeAmounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "receiveFlashLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "receiveFlashLoan(address[],uint256[],uint256[],bytes)": "f04f2707"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol": {
        "IProtocolFeesCollector": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newFlashLoanFeePercentage",
                  "type": "uint256"
                }
              ],
              "name": "FlashLoanFeePercentageChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newSwapFeePercentage",
                  "type": "uint256"
                }
              ],
              "name": "SwapFeePercentageChanged",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "getAuthorizer",
              "outputs": [
                {
                  "internalType": "contract IAuthorizer",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "getCollectedFeeAmounts",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "feeAmounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFlashLoanFeePercentage",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSwapFeePercentage",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newFlashLoanFeePercentage",
                  "type": "uint256"
                }
              ],
              "name": "setFlashLoanFeePercentage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newSwapFeePercentage",
                  "type": "uint256"
                }
              ],
              "name": "setSwapFeePercentage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "vault",
              "outputs": [
                {
                  "internalType": "contract IVault",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "withdrawCollectedFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getAuthorizer()": "aaabadc5",
              "getCollectedFeeAmounts(address[])": "e42abf35",
              "getFlashLoanFeePercentage()": "d877845c",
              "getSwapFeePercentage()": "55c67628",
              "setFlashLoanFeePercentage(uint256)": "6b6b9f69",
              "setSwapFeePercentage(uint256)": "38e9922e",
              "vault()": "fbfa77cf",
              "withdrawCollectedFees(address[],uint256[],address)": "6daefab6"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getCollectedFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlashLoanFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setFlashLoanFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawCollectedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":\"IProtocolFeesCollector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]}},\"version\":1}"
        }
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol": {
        "IVault": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IAuthorizer",
                  "name": "newAuthorizer",
                  "type": "address"
                }
              ],
              "name": "AuthorizerChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "ExternalBalanceTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IFlashLoanRecipient",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                }
              ],
              "name": "FlashLoan",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "delta",
                  "type": "int256"
                }
              ],
              "name": "InternalBalanceChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "paused",
                  "type": "bool"
                }
              ],
              "name": "PausedStateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "liquidityProvider",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "int256[]",
                  "name": "deltas",
                  "type": "int256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "protocolFeeAmounts",
                  "type": "uint256[]"
                }
              ],
              "name": "PoolBalanceChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "assetManager",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "cashDelta",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "managedDelta",
                  "type": "int256"
                }
              ],
              "name": "PoolBalanceManaged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "poolAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "enum IVault.PoolSpecialization",
                  "name": "specialization",
                  "type": "uint8"
                }
              ],
              "name": "PoolRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "relayer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "RelayerApprovalChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "TokensDeregistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "assetManagers",
                  "type": "address[]"
                }
              ],
              "name": "TokensRegistered",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "WETH",
              "outputs": [
                {
                  "internalType": "contract IWETH",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum IVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]"
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple"
                },
                {
                  "internalType": "int256[]",
                  "name": "limits",
                  "type": "int256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "batchSwap",
              "outputs": [
                {
                  "internalType": "int256[]",
                  "name": "",
                  "type": "int256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "deregisterTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IAsset[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "minAmountsOut",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.ExitPoolRequest",
                  "name": "request",
                  "type": "tuple"
                }
              ],
              "name": "exitPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IFlashLoanRecipient",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "flashLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "getActionId",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAuthorizer",
              "outputs": [
                {
                  "internalType": "contract IAuthorizer",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getDomainSeparator",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "getInternalBalance",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getNextNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPausedState",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "paused",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "pauseWindowEndTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bufferPeriodEndTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                }
              ],
              "name": "getPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "enum IVault.PoolSpecialization",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "getPoolTokenInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "cash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "managed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastChangeBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "assetManager",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                }
              ],
              "name": "getPoolTokens",
              "outputs": [
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "balances",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "lastChangeBlock",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getProtocolFeesCollector",
              "outputs": [
                {
                  "internalType": "contract IProtocolFeesCollector",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "relayer",
                  "type": "address"
                }
              ],
              "name": "hasApprovedRelayer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IAsset[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "maxAmountsIn",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.JoinPoolRequest",
                  "name": "request",
                  "type": "tuple"
                }
              ],
              "name": "joinPool",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum IVault.PoolBalanceOpKind",
                      "name": "kind",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IVault.PoolBalanceOp[]",
                  "name": "ops",
                  "type": "tuple[]"
                }
              ],
              "name": "managePoolBalance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum IVault.UserBalanceOpKind",
                      "name": "kind",
                      "type": "uint8"
                    },
                    {
                      "internalType": "contract IAsset",
                      "name": "asset",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IVault.UserBalanceOp[]",
                  "name": "ops",
                  "type": "tuple[]"
                }
              ],
              "name": "manageUserBalance",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum IVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]"
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple"
                }
              ],
              "name": "queryBatchSwap",
              "outputs": [
                {
                  "internalType": "int256[]",
                  "name": "assetDeltas",
                  "type": "int256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum IVault.PoolSpecialization",
                  "name": "specialization",
                  "type": "uint8"
                }
              ],
              "name": "registerPool",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "address[]",
                  "name": "assetManagers",
                  "type": "address[]"
                }
              ],
              "name": "registerTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAuthorizer",
                  "name": "newAuthorizer",
                  "type": "address"
                }
              ],
              "name": "setAuthorizer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "paused",
                  "type": "bool"
                }
              ],
              "name": "setPaused",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "relayer",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setRelayerApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "enum IVault.SwapKind",
                      "name": "kind",
                      "type": "uint8"
                    },
                    {
                      "internalType": "contract IAsset",
                      "name": "assetIn",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAsset",
                      "name": "assetOut",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct IVault.SingleSwap",
                  "name": "singleSwap",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "limit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "WETH()": "ad5c4648",
              "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": "945bcec9",
              "deregisterTokens(bytes32,address[])": "7d3aeb96",
              "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "8bdb3913",
              "flashLoan(address,address[],uint256[],bytes)": "5c38449e",
              "getActionId(bytes4)": "851c1bb3",
              "getAuthorizer()": "aaabadc5",
              "getDomainSeparator()": "ed24911d",
              "getInternalBalance(address,address[])": "0f5a6efa",
              "getNextNonce(address)": "90193b7c",
              "getPausedState()": "1c0de051",
              "getPool(bytes32)": "f6c00927",
              "getPoolTokenInfo(bytes32,address)": "b05f8e48",
              "getPoolTokens(bytes32)": "f94d4668",
              "getProtocolFeesCollector()": "d2946c2b",
              "hasApprovedRelayer(address,address)": "fec90d72",
              "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "b95cac28",
              "managePoolBalance((uint8,bytes32,address,uint256)[])": "e6c46092",
              "manageUserBalance((uint8,address,uint256,address,address)[])": "0e8e3e84",
              "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": "f84d066e",
              "registerPool(uint8)": "09b2760f",
              "registerTokens(bytes32,address[],address[])": "66a9c7d2",
              "setAuthorizer(address)": "058a628f",
              "setPaused(bool)": "16c38b3c",
              "setRelayerApproval(address,address,bool)": "fa6e671d",
              "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "52bbbe29"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract IProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Full external interface for the Vault core contract - no external or public methods exist in the contract that don't override one of these declarations.\",\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current paused state.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]}},\"version\":1}"
        }
      },
      "contracts/20220322-veBAL-activation/veBALDeploymentCoordinator.sol": {
        "ICurrentAuthorizer": {
          "abi": [
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "actionId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "where",
                  "type": "address"
                }
              ],
              "name": "canPerform",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "canPerform(bytes32,address,address)": "9be2a884",
              "grantRole(bytes32,address)": "2f2ff15d",
              "revokeRole(bytes32,address)": "d547741f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The currently deployed Authorizer has a different interface relative to the Authorizer in the monorepo for granting/revoking roles(referred to as permissions in the new Authorizer) and so we require a one-off interface\",\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/20220322-veBAL-activation/veBALDeploymentCoordinator.sol\":\"ICurrentAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x999b90d074bc14e7f1b5800053a63734855e9d30fcff6017dde0679636dde008\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://63768db76eb190dce7527f1c9bf0ea7c59402ad76e529ab3d7376d60e1823c4f\",\"dweb:/ipfs/QmbnmnSkPh1ukq43k6kHUSqafRznvY5ejoNZcHQT1TJfsh\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol\":{\"keccak256\":\"0x286a4b1cb4a632954e58c68baac671fb0dcbd139c5a353b0419088b0de40477c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b57ab7eadc573d8d23b3668b90412e65182beea79726c1a1b8cb57f76abc74a\",\"dweb:/ipfs/QmfNe6Uu4S4xMDzMktJnGz92MT6zVENi3Rye2AazUcrLL4\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol\":{\"keccak256\":\"0x70d5951087ad40350876adde9e9d377ccb3f4084c13dbdd144a0a2b362abdd2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f01d5d7a4cd855d532cd5fc739f9da334fe2e4c1a822f35cd3dd70ddf4c4144\",\"dweb:/ipfs/QmZSdw3TJL5FhZrvZqVWJQPcioLqXP9rMHwhYnm6wUpu3U\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol\":{\"keccak256\":\"0x6a6b3d171d65a0cab4d1ae3138171decd1faf234d483a223edf2eb2d300d6561\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://351ad36c433b722057145dcd9c85dc5e2f2df9ec8ea8f17a247d73851c6a5779\",\"dweb:/ipfs/QmfVR9uhTe6KDudsRLFCbBsE1w3aMgnbYBm5eke44bfLFq\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol\":{\"keccak256\":\"0x9f0a6cae20422fc68ffb45dc0bd9f72f443ff704162ab001d7c7d8b0c857f7f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe4db95c1fdc3ce371e763d45066bd554ded70a34758ce0ba56b0f2857cceaaa\",\"dweb:/ipfs/QmPjAApGbRQgsvMaxFYK25KNgzHb9fWew5UV5CkoQfjB2b\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol\":{\"keccak256\":\"0x5e6f331c303495f1dc03cb763902abb1c7b74a4b635c20c35beb6a2e4013ec94\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c258ccd4df96bf251b338e2267c2ff3f25901e0fb71ed47e51ce92c3bbcbea2b\",\"dweb:/ipfs/Qme9CkvWEktE8LjsfYPSNHvpQe782HHTdv2encSof7DFRc\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":{\"keccak256\":\"0xe73d2e5fcc18b9f53cb6795d83a160c34d1219ce5883a7a276cd8d07d5598a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd6f4d728b50fb1ede61a5aed2c86651a810f739180fe10c8ab6f3e11726015\",\"dweb:/ipfs/QmZSQgJUG7wa7NgoH9ZsaFBX188FFSBg3Z4uyj1dbAtGTZ\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol\":{\"keccak256\":\"0x496c5997689ccb7666e020cfabcf3d46b099818f958a7b78ca5f385fc2117f36\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e751bdd6c7b13f5cc68606ef9321291470d7c064ac15b74fdcce75a5b519a039\",\"dweb:/ipfs/QmQ7NpZQQKovhNjeeZ2aYt5mzoxbEgYFJC633PP9BdtHb7\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol\":{\"keccak256\":\"0xa535e9577698627ccb3f4470426c2e4702d236c79305d864d577cf7d1daf748a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a3afe9a2630408a9037b19d088232d3ebacc6d29ed7ef31412557dc4485bb862\",\"dweb:/ipfs/QmbbFmZYJUMraPx3sKzpY4foFpRPTa1MnyHnKLgvxgzdFn\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x3d362ad70a19a0307bc9af2b053c4de85a4e0aacf1eb6b1fb5083873b8a62045\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b141dcb49084bd633c4b95765c57e760deadf484a599e7f8fcbb74a46febe3f\",\"dweb:/ipfs/QmQz9P1bWh8mNQUxz5jdqNqwS226osyCPbQA8DznFspf4f\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\":{\"keccak256\":\"0x283835a4082eb3f0676d86a6549b0d225eaf4ba61aa2fce4008c51f9c1e65e09\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://400f999919366c64b30fbf836d240f9705aac314c3bce76c7b11e779d3b37a47\",\"dweb:/ipfs/QmbtppG2jgqSUEjT197nJ97osNDWnaiiRSv4xWMPgUpJ5X\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfe6da463cd5a6df10b49020a69b0978a4ef65d029e747c515062ec4a3359c464\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203824853ae4896a6216d53aa537a6941c9992d528c9aa4dd385114dac0f169c\",\"dweb:/ipfs/Qmdb6pN9EVQVHFkxfdMoWUKmRMx7BtVzqcXUqGJh8Xotgy\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol\":{\"keccak256\":\"0x8e156f0c3c6fc2ff7b3bde24c11449b8076900c894252bc26e5022f50b03b89c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://60d4b9e132c6ed5cb5e0800b019c93a9d2c635849d17ab6d3c81c62b50d22633\",\"dweb:/ipfs/QmTG9ZofezQrLxiytV2F7apCV2tDw3VkvefnhX3eJ12JJr\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol\":{\"keccak256\":\"0xdb55aadaa2bbcf0c31a73a681b115be07f48cd21824acf3d7df1282e7ede54ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://37a4530bbadbfc953872129f65b7b07b1d3e21d2e790d0701cde279709351a6d\",\"dweb:/ipfs/QmWgHBQzqxr1SfiLjS8tAnsmn6D5oEfcZUTQsQgPP5U1eK\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]},\"contracts/20220322-veBAL-activation/veBALDeploymentCoordinator.sol\":{\"keccak256\":\"0x395ba4d411697056960d28933341e2f4203184294f5570ee00c65f82b520fc3f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e688b3475d84958398c0a2672c5d4858142aa924856a26f7512bf31c751d94d9\",\"dweb:/ipfs/QmYprTjnXyGHrAyEj6KGyHbRrPtedWtwnhRkFzy2wvd5o8\"]}},\"version\":1}"
        },
        "veBALDeploymentCoordinator": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IBalancerMinter",
                  "name": "balancerMinter",
                  "type": "address"
                },
                {
                  "internalType": "contract IAuthorizerAdaptor",
                  "name": "authorizerAdaptor",
                  "type": "address"
                },
                {
                  "internalType": "contract IGaugeAdder",
                  "name": "gaugeAdder",
                  "type": "address"
                },
                {
                  "internalType": "contract ILiquidityGaugeFactory",
                  "name": "ethereumGaugeFactory",
                  "type": "address"
                },
                {
                  "internalType": "contract ILiquidityGaugeFactory",
                  "name": "singleRecipientGaugeFactory",
                  "type": "address"
                },
                {
                  "internalType": "contract IBALTokenHolderFactory",
                  "name": "balTokenHolderFactory",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "activationScheduledTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "thirdStageDelay",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "ARBITRUM_WEIGHT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ETHEREUM_WEIGHT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "LM_COMMITTEE_WEIGHT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "POLYGON_WEIGHT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "VEBAL_WEIGHT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "arbitrumGaugeRecipient",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "firstStageActivationTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getActivationScheduledTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAuthorizer",
              "outputs": [
                {
                  "internalType": "contract ICurrentAuthorizer",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAuthorizerAdaptor",
              "outputs": [
                {
                  "internalType": "contract IAuthorizerAdaptor",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalancerMinter",
              "outputs": [
                {
                  "internalType": "contract IBalancerMinter",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalancerTokenAdmin",
              "outputs": [
                {
                  "internalType": "contract IBalancerTokenAdmin",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentDeploymentStage",
              "outputs": [
                {
                  "internalType": "enum veBALDeploymentCoordinator.DeploymentStage",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGaugeController",
              "outputs": [
                {
                  "internalType": "contract IGaugeController",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getThirdStageDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVault",
              "outputs": [
                {
                  "internalType": "contract IVault",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lmCommitteeMultisig",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "performFirstStage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "performSecondStage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "performThirdStage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "polygonGaugeRecipient",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "secondStageActivationTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "thirdStageActivationTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "veBALGaugeRecipient",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "610200604052600180546001600160a01b031990811673c38c5f97b34e175ffd35407fc91a937300e338601790915560028054821673d2eb7bd802a7ca68d9acd209bec4e664a9abdd7b90811790915560038054831682179055600480549092161790553480156200007057600080fd5b5060405162003ad138038062003ad183398181016040526101008110156200009757600080fd5b5080516020808301516040808501516060860151608087015160a088015160c089015160e090990151600160009081556008805460ff19169055865163e6dec36f60e01b81529651999a979995989497939692959394919390926001600160a01b038c169263e6dec36f92600480840193829003018186803b1580156200011d57600080fd5b505afa15801562000132573d6000803e3d6000fd5b505050506040513d60208110156200014957600080fd5b50516001600160601b0319606082901b16608052604080516311b2515f60e31b815290519192506001600160a01b03831691638d928af891600480820192602092909190829003018186803b158015620001a257600080fd5b505afa158015620001b7573d6000803e3d6000fd5b505050506040513d6020811015620001ce57600080fd5b50516001600160601b0319606091821b811660a0529089901b1660c0526040805163c003969960e01b815290516001600160a01b0383169163c0039699916004808301926020929190829003018186803b1580156200022c57600080fd5b505afa15801562000241573d6000803e3d6000fd5b505050506040513d60208110156200025857600080fd5b50516001600160601b0319606091821b811660e052908a901b166101005260408051632c6f4d6f60e11b815290516001600160a01b038b16916358de9ade916004808301926020929190829003018186803b158015620002b757600080fd5b505afa158015620002cc573d6000803e3d6000fd5b505050506040513d6020811015620002e357600080fd5b50516001600160601b0319606091821b81166101205297811b88166101405295861b8716610160525092841b851661018052921b9092166101a0526101c0526101e052505060805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160601c6101405160601c6101605160601c6101805160601c6101a05160601c6101c0516101e0516136926200043f600039806103505280611df85250806107ae5280611dc95250806130955250806131c852508061247d52806127ac5250806117be5280612367528061244e528061256a52806126b352806128935280612914525080610b885280610cfd5280610de15280611e285280612b275280612dc252806133a45250806112f45280612a7d5250806108c852806108f75280610ed55280610f04525080612ac5525080611e6a525080610fc65280611087528061116f52806112435280612aa152506136926000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c8063761c4023116100e3578063b77984e91161008c578063e6dec36f11610066578063e6dec36f1461028e578063e758d36b14610296578063f5c458ab1461029e57610198565b8063b77984e91461025d578063dc8c9ec61461021d578063dce8b0cd1461028657610198565b80639912b3d4116100bd5780639912b3d414610245578063aaabadc51461024d578063b1e70e801461025557610198565b8063761c40231461022d578063844c7750146102355780638d928af81461023d57610198565b8063336d4dfc1161014557806342979adc1161011f57806342979adc14610215578063463d9e931461021d57806358de9ade1461022557610198565b8063336d4dfc146101fd5780633b54e68014610205578063410c2d8e1461020d57610198565b80631cdd07a4116101765780631cdd07a4146101e35780631e390389146101ed5780632bd46566146101f557610198565b80630249e6fa1461019d5780631235f8a3146101b75780631336e8d4146101db575b600080fd5b6101a56102a6565b60408051918252519081900360200190f35b6101bf6102ac565b604080516001600160a01b039092168252519081900360200190f35b6101a56102bb565b6101eb6102c7565b005b6101a561079e565b6101eb6107a4565b6101a5611dbb565b6101a5611dc7565b6101a5611deb565b6101a5611df6565b6101a5611e1a565b6101bf611e26565b6101bf611e4a565b6101bf611e59565b6101bf611e68565b6101a5611e8c565b6101bf611e92565b6101eb611f05565b610265612a72565b6040518082600381111561027557fe5b815260200191505060405180910390f35b6101bf612a7b565b6101bf612a9f565b6101bf612ac3565b6101bf612ae7565b60065481565b6002546001600160a01b031681565b67025bf6196bd1000081565b6102cf612af6565b600260085460ff1660038111156102e257fe5b1461034e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e6f7420726561647920666f7220746869726420737461676500000000000000604482015290519081900360640190fd5b7f0000000000000000000000000000000000000000000000000000000000000000600654014210156103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806135826027913960400191505060405180910390fd5b60006103d5612ac3565b905060006103e1611e92565b9050806001600160a01b0316632f2ff15d836001600160a01b031663851c1bb363db1ca26060e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b15801561045c57600080fd5b505afa158015610470573d6000803e3d6000fd5b505050506040513d602081101561048657600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b1580156104e457600080fd5b505af11580156104f8573d6000803e3d6000fd5b5050505061050f600067016345785d8a0000612b0f565b610522600167016345785d8a0000612b0f565b61053560026707c5850872380000612b0f565b610548600367025bf6196bd10000612b0f565b61055a600466f8b0a10e470000612b0f565b806001600160a01b031663d547741f836001600160a01b031663851c1bb363db1ca26060e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b1580156105d357600080fd5b505afa1580156105e7573d6000803e3d6000fd5b505050506040513d60208110156105fd57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561065b57600080fd5b505af115801561066f573d6000803e3d6000fd5b50505050806001600160a01b031663d547741f826001600160a01b031663a217fddf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106bb57600080fd5b505afa1580156106cf573d6000803e3d6000fd5b505050506040513d60208110156106e557600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561074357600080fd5b505af1158015610757573d6000803e3d6000fd5b505042600755505060088054600391907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001835b0217905550505061079c612da3565b565b60055481565b6107ac612af6565b7f000000000000000000000000000000000000000000000000000000000000000042101561083b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4e6f7420726561647920666f722061637469766174696f6e0000000000000000604482015290519081900360640190fd5b600060085460ff16600381111561084e57fe5b146108ba57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4669727374207374657020616c726561647920706572666f726d656400000000604482015290519081900360640190fd5b60006108c4611e92565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166391d148547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a217fddf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561094e57600080fd5b505afa158015610962573d6000803e3d6000fd5b505050506040513d602081101561097857600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526004810192909252306024830152516044808301926020929190829003018186803b1580156109d557600080fd5b505afa1580156109e9573d6000803e3d6000fd5b505050506040513d60208110156109ff57600080fd5b5051610a6c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4e6f742042414c2061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b604080517f9be2a884000000000000000000000000000000000000000000000000000000008152600060048201819052306024830152604482015290516001600160a01b03831691639be2a884916064808301926020929190829003018186803b158015610ad957600080fd5b505afa158015610aed573d6000803e3d6000fd5b505050506040513d6020811015610b0357600080fd5b5051610b7057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f7420417574686f72697a65722061646d696e000000000000000000000000604482015290519081900360640190fd5b6000610b7a612ac3565b9050806001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663dfe050316040518163ffffffff1660e01b815260040160206040518083038186803b158015610bdf57600080fd5b505afa158015610bf3573d6000803e3d6000fd5b505050506040513d6020811015610c0957600080fd5b5051604080517ff851a44000000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169163f851a44091600480820192602092909190829003018186803b158015610c6657600080fd5b505afa158015610c7a573d6000803e3d6000fd5b505050506040513d6020811015610c9057600080fd5b50516001600160a01b031614610cf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806135a9602b913960400191505060405180910390fd5b806001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b158015610d5457600080fd5b505afa158015610d68573d6000803e3d6000fd5b505050506040513d6020811015610d7e57600080fd5b50516001600160a01b031614610ddf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806135d4602e913960400191505060405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639fba03a16040518163ffffffff1660e01b815260040160206040518083038186803b158015610e3857600080fd5b505afa158015610e4c573d6000803e3d6000fd5b505050506040513d6020811015610e6257600080fd5b5051600f0b15610ed357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f476175676520747970657320616c726561647920736574000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632f2ff15d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a217fddf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5b57600080fd5b505afa158015610f6f573d6000803e3d6000fd5b505050506040513d6020811015610f8557600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602483015251604480830192600092919082900301818387803b15801561100c57600080fd5b505af1158015611020573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f0f15f4c000000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d93507f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b1580156110cd57600080fd5b505afa1580156110e1573d6000803e3d6000fd5b505050506040513d60208110156110f757600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561115557600080fd5b505af1158015611169573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156111c857600080fd5b505af11580156111dc573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f40c10f1900000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d93507f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b15801561128957600080fd5b505afa15801561129d573d6000803e3d6000fd5b505050506040513d60208110156112b357600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602483015251604480830192600092919082900301818387803b15801561133a57600080fd5b505af115801561134e573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f92d0d23200000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d935085169163851c1bb3916024808301926020929190829003018186803b1580156113db57600080fd5b505afa1580156113ef573d6000803e3d6000fd5b505050506040513d602081101561140557600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561146357600080fd5b505af1158015611477573d6000803e3d6000fd5b505050506114b96040518060400160405280601a81526020017f4c6971756964697479204d696e696e6720436f6d6d6974746565000000000000815250612daa565b6114f76040518060400160405280600581526020017f766542414c000000000000000000000000000000000000000000000000000000815250612daa565b6115356040518060400160405280600881526020017f457468657265756d000000000000000000000000000000000000000000000000815250612daa565b6115736040518060400160405280600781526020017f506f6c79676f6e00000000000000000000000000000000000000000000000000815250612daa565b6115b16040518060400160405280600881526020017f417262697472756d000000000000000000000000000000000000000000000000815250612daa565b816001600160a01b031663d547741f826001600160a01b031663851c1bb36392d0d23260e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b15801561162a57600080fd5b505afa15801561163e573d6000803e3d6000fd5b505050506040513d602081101561165457600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b1580156116b257600080fd5b505af11580156116c6573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f3a04f90000000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d935085169163851c1bb3916024808301926020929190829003018186803b15801561175357600080fd5b505afa158015611767573d6000803e3d6000fd5b505050506040513d602081101561177d57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602483015251604480830192600092919082900301818387803b15801561180457600080fd5b505af1158015611818573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f3a04f90000000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d935085169163851c1bb3916024808301926020929190829003018186803b1580156118a557600080fd5b505afa1580156118b9573d6000803e3d6000fd5b505050506040513d60208110156118cf57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561192d57600080fd5b505af1158015611941573d6000803e3d6000fd5b505050506119746000604051806060016040528060258152602001613532602591396001546001600160a01b0316613091565b6119a360016040518060600160405280602b8152602001613557602b91396002546001600160a01b0316613091565b6119d260036040518060600160405280602d8152602001613602602d91396003546001600160a01b0316613091565b611a0160046040518060600160405280602e815260200161362f602e91396004546001600160a01b0316613091565b816001600160a01b031663d547741f826001600160a01b031663851c1bb3633a04f90060e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b158015611a7a57600080fd5b505afa158015611a8e573d6000803e3d6000fd5b505050506040513d6020811015611aa457600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b158015611b0257600080fd5b505af1158015611b16573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527fe8de0d4d00000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d935085169163851c1bb3916024808301926020929190829003018186803b158015611ba357600080fd5b505afa158015611bb7573d6000803e3d6000fd5b505050506040513d6020811015611bcd57600080fd5b5051600154604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815260048101939093526001600160a01b03909116602483015251604480830192600092919082900301818387803b158015611c3857600080fd5b505af1158015611c4c573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f058a3a2400000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d935085169163851c1bb3916024808301926020929190829003018186803b158015611cd957600080fd5b505afa158015611ced573d6000803e3d6000fd5b505050506040513d6020811015611d0357600080fd5b5051600154604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815260048101939093526001600160a01b03909116602483015251604480830192600092919082900301818387803b158015611d6e57600080fd5b505af1158015611d82573d6000803e3d6000fd5b505042600555505060088054600191907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016828061078d565b6707c585087238000081565b7f000000000000000000000000000000000000000000000000000000000000000090565b66f8b0a10e47000081565b7f000000000000000000000000000000000000000000000000000000000000000090565b67016345785d8a000081565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b031681565b6004546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000090565b60075481565b6000611e9c611e68565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b158015611ed457600080fd5b505afa158015611ee8573d6000803e3d6000fd5b505050506040513d6020811015611efe57600080fd5b5051905090565b611f0d612af6565b600160085460ff166003811115611f2057fe5b14611f8c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f7420726561647920666f72207365636f6e64207374616765000000000000604482015290519081900360640190fd5b6000611f96611e92565b9050611fa0613512565b5060408051610400810182527306df3b2bbb68adc8b0e302443692037ed9f91b42815273072f14b85add63488ddad88f855fda4a99d6ac9b602080830191909152730b09dea16768f0799065c475be02919503cb2a358284015273186084ff790c65088ba694df11758fae4943ee9e6060830152731e19cf2d73a72ef1332c882f20534b6519be027660808301527327c9f71cc31464b906e0006d4fcbc8900f48f15f60a08301527332296969ef14eb0c6d29669c550d4a044913023060c083015273350196326aeaa9b98f1903fb5e8fc2686f85318c60e0830152733e5fa9518ea95c3e533eb377c001702a9aacaa32610100830152734bd6d86debdb9f5413e631ad386c4427dc9d01b26101208301527351735bdfbfe3fc13dea8dc6502e2e95898942961610140830152735d66fff62c17d841935b60df5f07f6cf79bd0f47610160830152735f7fa48d765053f8dd85e052843e12d23e3d7bc561018083015273702605f43471183158938c1a3e5f5a359d7b31ba6101a0830152737b50775383d3d6f0215a8f290f2c9e2eebbeceb26101c0830152737edde0cb05ed19e03a9a47cd5e53fc57fde1c80c6101e0830152738f4205e1604133d1875a3e771ae7e4f2b08656396102008301527390291319f1d4ea3ad4db0dd8fe9e12baf749e8456102208301527396646936b91d6b9d7d0c47c496afbf3d6ec7b6f86102408301527396ba9025311e2f47b840a1f68ed57a3df1ea874761026083015273a02e4b3d18d4e6b8d18ac421fbc3dfff8933c40a61028083015273a6f548df93de924d73be7d25dc02554c6bd66db56102a083015273baeec99c90e3420ec6c1e7a769d2a856d2898e4d6102c083015273bf96189eee9357a95c7719f4f5047f76bde804e56102e083015273e2469f47ab58cf9cf59f9822e3c5de4950a41c4961030083015273e99481dc77691d8e2456e5f3f61c1810adfc150361032083015273ec60a5fef79a92c741cb74fdd6bfc340c0279b0161034083015273edf085f65b4f6c155e13155502ef925c9a75600361036083015273efaa1604e82e1b3af8430b90192c1b9e8197e37761038083015273f4c0dd9b82da36c07605df83c8a416f11724d88b6103a083015273f5aaf7ee8c39b651cebf5f1f50c10631e78e0ef96103c083015273feadd389a5c427952d8fdb8057d6c8ba1156cc566103e083015282517f851c1bb30000000000000000000000000000000000000000000000000000000081527f6440e973000000000000000000000000000000000000000000000000000000006004820152925191926001600160a01b0385811693632f2ff15d937f00000000000000000000000000000000000000000000000000000000000000009092169263851c1bb3926024808301939192829003018186803b1580156123ac57600080fd5b505afa1580156123c0573d6000803e3d6000fd5b505050506040513d60208110156123d657600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561243457600080fd5b505af1158015612448573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636440e9737f000000000000000000000000000000000000000000000000000000000000000060026040518363ffffffff1660e01b815260040180836001600160a01b031681526020018260048111156124cc57fe5b815260200192505050600060405180830381600087803b1580156124ef57600080fd5b505af1158015612503573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f6440e97300000000000000000000000000000000000000000000000000000000600482015290516001600160a01b03808716945063d547741f93507f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b1580156125b057600080fd5b505afa1580156125c4573d6000803e3d6000fd5b505050506040513d60208110156125da57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561263857600080fd5b505af115801561264c573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f5e45a27300000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d93507f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b1580156126f957600080fd5b505afa15801561270d573d6000803e3d6000fd5b505050506040513d602081101561272357600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561278157600080fd5b505af1158015612795573d6000803e3d6000fd5b506020925060009150505b818110156129025760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639ed933188584602081106127e557fe5b60200201516040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050602060405180830381600087803b15801561282957600080fd5b505af115801561283d573d6000803e3d6000fd5b505050506040513d602081101561285357600080fd5b5051604080517f5e45a2730000000000000000000000000000000000000000000000000000000081526001600160a01b03808416600483015291519293507f000000000000000000000000000000000000000000000000000000000000000090911691635e45a2739160248082019260009290919082900301818387803b1580156128dd57600080fd5b505af11580156128f1573d6000803e3d6000fd5b5050600190930192506127a0915050565b50826001600160a01b031663d547741f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663851c1bb3635e45a27360e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b15801561299c57600080fd5b505afa1580156129b0573d6000803e3d6000fd5b505050506040513d60208110156129c657600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b158015612a2457600080fd5b505af1158015612a38573d6000803e3d6000fd5b505042600655505060088054600292507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018361078d565b60085460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6003546001600160a01b031681565b612b086002600054141561019061337a565b6002600055565b612b17612ac3565b6001600160a01b0316634036176a7f00000000000000000000000000000000000000000000000000000000000000007fdb1ca26000000000000000000000000000000000000000000000000000000000856004811115612b7357fe5b856040516024018083600f0b815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b815260040180836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c46578181015183820152602001612c2e565b50505050905090810190601f168015612c735780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612c9357600080fd5b505af1158015612ca7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526020811015612cee57600080fd5b8101908080516040519392919084640100000000821115612d0e57600080fd5b908301906020820185811115612d2357600080fd5b8251640100000000811182820188101715612d3d57600080fd5b82525081516020918201929091019080838360005b83811015612d6a578181015183820152602001612d52565b50505050905090810190601f168015612d975780820380516001836020036101000a031916815260200191505b50604052505050505050565b6001600055565b612db2612ac3565b6001600160a01b0316634036176a7f00000000000000000000000000000000000000000000000000000000000000006392d0d23260e01b8460006040516024018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612e32578181015183820152602001612e1a565b50505050905090810190601f168015612e5f5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000988916178152815160e08b901b90981688526001600160a01b0389166004890190815260248901928352835160448a01528351939890975091955060649091019350915080838360005b83811015612f35578181015183820152602001612f1d565b50505050905090810190601f168015612f625780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612f8257600080fd5b505af1158015612f96573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526020811015612fdd57600080fd5b8101908080516040519392919084640100000000821115612ffd57600080fd5b90830190602082018581111561301257600080fd5b825164010000000081118282018810171561302c57600080fd5b82525081516020918201929091019080838360005b83811015613059578181015183820152602001613041565b50505050905090810190601f1680156130865780820380516001836020036101000a031916815260200191505b506040525050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b6a46b3b846040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561310f5781810151838201526020016130f7565b50505050905090810190601f16801561313c5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561315b57600080fd5b505af115801561316f573d6000803e3d6000fd5b505050506040513d602081101561318557600080fd5b5051604080517f9ed933180000000000000000000000000000000000000000000000000000000081526001600160a01b03808416600483015291519293506000927f000000000000000000000000000000000000000000000000000000000000000090921691639ed933189160248082019260209290919082900301818787803b15801561321257600080fd5b505af1158015613226573d6000803e3d6000fd5b505050506040513d602081101561323c57600080fd5b5051905061324a818661338c565b613252611e92565b6001600160a01b0316632f2ff15d836001600160a01b031663851c1bb363c107532960e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b1580156132ca57600080fd5b505afa1580156132de573d6000803e3d6000fd5b505050506040513d60208110156132f457600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b038716602483015251604480830192600092919082900301818387803b15801561335b57600080fd5b505af115801561336f573d6000803e3d6000fd5b505050505050505050565b8161338857613388816134a5565b5050565b613394612ac3565b6001600160a01b0316634036176a7f0000000000000000000000000000000000000000000000000000000000000000633a04f90060e01b858560405160240180836001600160a01b031681526020018260048111156133ef57fe5b81526040805180830381526020928301825291820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000978816178152815160e08a901b90971687526001600160a01b038816600488019081526024880192835283516044890152835193979096509194506064909101925090808383600083811015612c46578181015183820152602001612c2e565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b604051806104000160405280602090602082028036833750919291505056fe4c6971756964697479204d696e696e6720436f6d6d69747465652042414c20486f6c64657254656d706f7261727920766542414c204c6971756964697479204d696e696e672042414c20486f6c64657244656c61792066726f6d207365636f6e64207374616765206e6f742079657420656c6170736564566f74696e67457363726f77206e6f74206f776e656420627920417574686f72697a657241646170746f724761756765436f6e74726f6c6c6572206e6f74206f776e656420627920417574686f72697a657241646170746f7254656d706f7261727920506f6c79676f6e204c6971756964697479204d696e696e672042414c20486f6c64657254656d706f7261727920417262697472756d204c6971756964697479204d696e696e672042414c20486f6c646572a26469706673582212201070d88e6c6808262d21528a2ea07b11ecd6a9d2391e521f1d75d6f60f70925764736f6c63430007010033",
              "opcodes": "PUSH2 0x200 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0xC38C5F97B34E175FFD35407FC91A937300E33860 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 AND PUSH20 0xD2EB7BD802A7CA68D9ACD209BEC4E664A9ABDD7B SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP4 AND DUP3 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3AD1 CODESIZE SUB DUP1 PUSH3 0x3AD1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH2 0x100 DUP2 LT ISZERO PUSH3 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xE0 SWAP1 SWAP10 ADD MLOAD PUSH1 0x1 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP7 MLOAD PUSH4 0xE6DEC36F PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 MLOAD SWAP10 SWAP11 SWAP8 SWAP10 SWAP6 SWAP9 SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP4 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP3 PUSH4 0xE6DEC36F SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x132 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP3 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x11B2515F PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x8D928AF8 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL DUP2 AND PUSH1 0xA0 MSTORE SWAP1 DUP10 SWAP1 SHL AND PUSH1 0xC0 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC0039699 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0xC0039699 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x241 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL DUP2 AND PUSH1 0xE0 MSTORE SWAP1 DUP11 SWAP1 SHL AND PUSH2 0x100 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x2C6F4D6F PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 PUSH4 0x58DE9ADE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL DUP2 AND PUSH2 0x120 MSTORE SWAP8 DUP2 SHL DUP9 AND PUSH2 0x140 MSTORE SWAP6 DUP7 SHL DUP8 AND PUSH2 0x160 MSTORE POP SWAP3 DUP5 SHL DUP6 AND PUSH2 0x180 MSTORE SWAP3 SHL SWAP1 SWAP3 AND PUSH2 0x1A0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1E0 MSTORE POP POP PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH1 0x60 SHR PUSH2 0x120 MLOAD PUSH1 0x60 SHR PUSH2 0x140 MLOAD PUSH1 0x60 SHR PUSH2 0x160 MLOAD PUSH1 0x60 SHR PUSH2 0x180 MLOAD PUSH1 0x60 SHR PUSH2 0x1A0 MLOAD PUSH1 0x60 SHR PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x3692 PUSH3 0x43F PUSH1 0x0 CODECOPY DUP1 PUSH2 0x350 MSTORE DUP1 PUSH2 0x1DF8 MSTORE POP DUP1 PUSH2 0x7AE MSTORE DUP1 PUSH2 0x1DC9 MSTORE POP DUP1 PUSH2 0x3095 MSTORE POP DUP1 PUSH2 0x31C8 MSTORE POP DUP1 PUSH2 0x247D MSTORE DUP1 PUSH2 0x27AC MSTORE POP DUP1 PUSH2 0x17BE MSTORE DUP1 PUSH2 0x2367 MSTORE DUP1 PUSH2 0x244E MSTORE DUP1 PUSH2 0x256A MSTORE DUP1 PUSH2 0x26B3 MSTORE DUP1 PUSH2 0x2893 MSTORE DUP1 PUSH2 0x2914 MSTORE POP DUP1 PUSH2 0xB88 MSTORE DUP1 PUSH2 0xCFD MSTORE DUP1 PUSH2 0xDE1 MSTORE DUP1 PUSH2 0x1E28 MSTORE DUP1 PUSH2 0x2B27 MSTORE DUP1 PUSH2 0x2DC2 MSTORE DUP1 PUSH2 0x33A4 MSTORE POP DUP1 PUSH2 0x12F4 MSTORE DUP1 PUSH2 0x2A7D MSTORE POP DUP1 PUSH2 0x8C8 MSTORE DUP1 PUSH2 0x8F7 MSTORE DUP1 PUSH2 0xED5 MSTORE DUP1 PUSH2 0xF04 MSTORE POP DUP1 PUSH2 0x2AC5 MSTORE POP DUP1 PUSH2 0x1E6A MSTORE POP DUP1 PUSH2 0xFC6 MSTORE DUP1 PUSH2 0x1087 MSTORE DUP1 PUSH2 0x116F MSTORE DUP1 PUSH2 0x1243 MSTORE DUP1 PUSH2 0x2AA1 MSTORE POP PUSH2 0x3692 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x198 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C4023 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xB77984E9 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE6DEC36F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE6DEC36F EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xE758D36B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xF5C458AB EQ PUSH2 0x29E JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0xB77984E9 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xDC8C9EC6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xDCE8B0CD EQ PUSH2 0x286 JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x9912B3D4 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x9912B3D4 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xB1E70E80 EQ PUSH2 0x255 JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x761C4023 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x844C7750 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x23D JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x336D4DFC GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x42979ADC GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x42979ADC EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x463D9E93 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x58DE9ADE EQ PUSH2 0x225 JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x336D4DFC EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x3B54E680 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x410C2D8E EQ PUSH2 0x20D JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x1CDD07A4 GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x1CDD07A4 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x1E390389 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x2BD46566 EQ PUSH2 0x1F5 JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x249E6FA EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x1235F8A3 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x1336E8D4 EQ PUSH2 0x1DB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x2C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH2 0x79E JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1DBB JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1DEB JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1E1A JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1E26 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1E59 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1E8C JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x275 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x2A7B JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2A9F JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AC3 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH8 0x25BF6196BD10000 DUP2 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2E2 JUMPI INVALID JUMPDEST EQ PUSH2 0x34E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420726561647920666F7220746869726420737461676500000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x6 SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3582 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D5 PUSH2 0x2AC3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E1 PUSH2 0x1E92 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2F2FF15D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0xDB1CA260 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x470 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x50F PUSH1 0x0 PUSH8 0x16345785D8A0000 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0x522 PUSH1 0x1 PUSH8 0x16345785D8A0000 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0x535 PUSH1 0x2 PUSH8 0x7C5850872380000 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0x548 PUSH1 0x3 PUSH8 0x25BF6196BD10000 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0x55A PUSH1 0x4 PUSH7 0xF8B0A10E470000 PUSH2 0x2B0F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD547741F DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0xDB1CA260 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD547741F DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA217FDDF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x757 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x7 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x79C PUSH2 0x2DA3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7AC PUSH2 0x2AF6 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x83B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420726561647920666F722061637469766174696F6E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x84E JUMPI INVALID JUMPDEST EQ PUSH2 0x8BA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669727374207374657020616C726561647920706572666F726D656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8C4 PUSH2 0x1E92 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x91D14854 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA217FDDF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x962 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xA6C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742042414C2061646D696E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x9BE2A88400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x9BE2A884 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB70 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420417574686F72697A65722061646D696E000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB7A PUSH2 0x2AC3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE05031 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF851A440 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35A9 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35D4 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9FBA03A1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xF SIGNEXTEND ISZERO PUSH2 0xED3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476175676520747970657320616C726561647920736574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2F2FF15D PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA217FDDF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x100C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1020 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xF15F4C000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1169 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF15F4C0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x129D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x133A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x134E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x92D0D23200000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP DUP6 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1477 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x14B9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6971756964697479204D696E696E6720436F6D6D6974746565000000000000 DUP2 MSTORE POP PUSH2 0x2DAA JUMP JUMPDEST PUSH2 0x14F7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x766542414C000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2DAA JUMP JUMPDEST PUSH2 0x1535 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x457468657265756D000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2DAA JUMP JUMPDEST PUSH2 0x1573 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6C79676F6E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2DAA JUMP JUMPDEST PUSH2 0x15B1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417262697472756D000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2DAA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD547741F DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0x92D0D232 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x163E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x3A04F90000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP DUP6 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1767 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x177D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1818 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x3A04F90000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP DUP6 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x192D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1941 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1974 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3532 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3091 JUMP JUMPDEST PUSH2 0x19A3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3557 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3091 JUMP JUMPDEST PUSH2 0x19D2 PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3602 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3091 JUMP JUMPDEST PUSH2 0x1A01 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x362F PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3091 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD547741F DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0x3A04F900 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xE8DE0D4D00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP DUP6 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x58A3A2400000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP DUP6 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x5 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP1 PUSH2 0x78D JUMP JUMPDEST PUSH8 0x7C5850872380000 DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH7 0xF8B0A10E470000 DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9C PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F0D PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F20 JUMPI INVALID JUMPDEST EQ PUSH2 0x1F8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420726561647920666F72207365636F6E64207374616765000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F96 PUSH2 0x1E92 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FA0 PUSH2 0x3512 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x400 DUP2 ADD DUP3 MSTORE PUSH20 0x6DF3B2BBB68ADC8B0E302443692037ED9F91B42 DUP2 MSTORE PUSH20 0x72F14B85ADD63488DDAD88F855FDA4A99D6AC9B PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xB09DEA16768F0799065C475BE02919503CB2A35 DUP3 DUP5 ADD MSTORE PUSH20 0x186084FF790C65088BA694DF11758FAE4943EE9E PUSH1 0x60 DUP4 ADD MSTORE PUSH20 0x1E19CF2D73A72EF1332C882F20534B6519BE0276 PUSH1 0x80 DUP4 ADD MSTORE PUSH20 0x27C9F71CC31464B906E0006D4FCBC8900F48F15F PUSH1 0xA0 DUP4 ADD MSTORE PUSH20 0x32296969EF14EB0C6D29669C550D4A0449130230 PUSH1 0xC0 DUP4 ADD MSTORE PUSH20 0x350196326AEAA9B98F1903FB5E8FC2686F85318C PUSH1 0xE0 DUP4 ADD MSTORE PUSH20 0x3E5FA9518EA95C3E533EB377C001702A9AACAA32 PUSH2 0x100 DUP4 ADD MSTORE PUSH20 0x4BD6D86DEBDB9F5413E631AD386C4427DC9D01B2 PUSH2 0x120 DUP4 ADD MSTORE PUSH20 0x51735BDFBFE3FC13DEA8DC6502E2E95898942961 PUSH2 0x140 DUP4 ADD MSTORE PUSH20 0x5D66FFF62C17D841935B60DF5F07F6CF79BD0F47 PUSH2 0x160 DUP4 ADD MSTORE PUSH20 0x5F7FA48D765053F8DD85E052843E12D23E3D7BC5 PUSH2 0x180 DUP4 ADD MSTORE PUSH20 0x702605F43471183158938C1A3E5F5A359D7B31BA PUSH2 0x1A0 DUP4 ADD MSTORE PUSH20 0x7B50775383D3D6F0215A8F290F2C9E2EEBBECEB2 PUSH2 0x1C0 DUP4 ADD MSTORE PUSH20 0x7EDDE0CB05ED19E03A9A47CD5E53FC57FDE1C80C PUSH2 0x1E0 DUP4 ADD MSTORE PUSH20 0x8F4205E1604133D1875A3E771AE7E4F2B0865639 PUSH2 0x200 DUP4 ADD MSTORE PUSH20 0x90291319F1D4EA3AD4DB0DD8FE9E12BAF749E845 PUSH2 0x220 DUP4 ADD MSTORE PUSH20 0x96646936B91D6B9D7D0C47C496AFBF3D6EC7B6F8 PUSH2 0x240 DUP4 ADD MSTORE PUSH20 0x96BA9025311E2F47B840A1F68ED57A3DF1EA8747 PUSH2 0x260 DUP4 ADD MSTORE PUSH20 0xA02E4B3D18D4E6B8D18AC421FBC3DFFF8933C40A PUSH2 0x280 DUP4 ADD MSTORE PUSH20 0xA6F548DF93DE924D73BE7D25DC02554C6BD66DB5 PUSH2 0x2A0 DUP4 ADD MSTORE PUSH20 0xBAEEC99C90E3420EC6C1E7A769D2A856D2898E4D PUSH2 0x2C0 DUP4 ADD MSTORE PUSH20 0xBF96189EEE9357A95C7719F4F5047F76BDE804E5 PUSH2 0x2E0 DUP4 ADD MSTORE PUSH20 0xE2469F47AB58CF9CF59F9822E3C5DE4950A41C49 PUSH2 0x300 DUP4 ADD MSTORE PUSH20 0xE99481DC77691D8E2456E5F3F61C1810ADFC1503 PUSH2 0x320 DUP4 ADD MSTORE PUSH20 0xEC60A5FEF79A92C741CB74FDD6BFC340C0279B01 PUSH2 0x340 DUP4 ADD MSTORE PUSH20 0xEDF085F65B4F6C155E13155502EF925C9A756003 PUSH2 0x360 DUP4 ADD MSTORE PUSH20 0xEFAA1604E82E1B3AF8430B90192C1B9E8197E377 PUSH2 0x380 DUP4 ADD MSTORE PUSH20 0xF4C0DD9B82DA36C07605DF83C8A416F11724D88B PUSH2 0x3A0 DUP4 ADD MSTORE PUSH20 0xF5AAF7EE8C39B651CEBF5F1F50C10631E78E0EF9 PUSH2 0x3C0 DUP4 ADD MSTORE PUSH20 0xFEADD389A5C427952D8FDB8057D6C8BA1156CC56 PUSH2 0x3E0 DUP4 ADD MSTORE DUP3 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x6440E97300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP3 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP4 PUSH4 0x2F2FF15D SWAP4 PUSH32 0x0 SWAP1 SWAP3 AND SWAP3 PUSH4 0x851C1BB3 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2448 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6440E973 PUSH32 0x0 PUSH1 0x2 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x24CC JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2503 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x6440E97300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0xD547741F SWAP4 POP PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x264C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x5E45A27300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x270D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2795 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 SWAP3 POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2902 JUMPI PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9ED93318 DUP6 DUP5 PUSH1 0x20 DUP2 LT PUSH2 0x27E5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x283D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x5E45A27300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP2 PUSH4 0x5E45A273 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x27A0 SWAP2 POP POP JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD547741F PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0x5E45A273 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x299C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x6 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x2 SWAP3 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 DUP4 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B08 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x190 PUSH2 0x337A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x2B17 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4036176A PUSH32 0x0 PUSH32 0xDB1CA26000000000000000000000000000000000000000000000000000000000 DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2B73 JUMPI INVALID JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C46 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2C2E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C73 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x2D0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2D23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D6A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D52 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D97 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x2DB2 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4036176A PUSH32 0x0 PUSH4 0x92D0D232 PUSH1 0xE0 SHL DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E32 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E1A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E5F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP9 DUP10 AND OR DUP2 MSTORE DUP2 MLOAD PUSH1 0xE0 DUP12 SWAP1 SHL SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x4 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x24 DUP10 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP11 ADD MSTORE DUP4 MLOAD SWAP4 SWAP9 SWAP1 SWAP8 POP SWAP2 SWAP6 POP PUSH1 0x64 SWAP1 SWAP2 ADD SWAP4 POP SWAP2 POP DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F35 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F1D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2F62 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x2FFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x302C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3059 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3041 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3086 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB6A46B3B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x310F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x30F7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x313C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x315B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x316F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x9ED9331800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0x9ED93318 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x323C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x324A DUP2 DUP7 PUSH2 0x338C JUMP JUMPDEST PUSH2 0x3252 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2F2FF15D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0xC1075329 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x335B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x336F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x3388 JUMPI PUSH2 0x3388 DUP2 PUSH2 0x34A5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3394 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4036176A PUSH32 0x0 PUSH4 0x3A04F900 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x33EF JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD DUP3 MSTORE SWAP2 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP8 DUP9 AND OR DUP2 MSTORE DUP2 MLOAD PUSH1 0xE0 DUP11 SWAP1 SHL SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x24 DUP9 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP10 ADD MSTORE DUP4 MLOAD SWAP4 SWAP8 SWAP1 SWAP7 POP SWAP2 SWAP5 POP PUSH1 0x64 SWAP1 SWAP2 ADD SWAP3 POP SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 DUP2 LT ISZERO PUSH2 0x2C46 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2C2E JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x400 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP INVALID 0x4C PUSH10 0x71756964697479204D69 PUSH15 0x696E6720436F6D6D69747465652042 COINBASE 0x4C KECCAK256 0x48 PUSH16 0x6C64657254656D706F72617279207665 TIMESTAMP COINBASE 0x4C KECCAK256 0x4C PUSH10 0x71756964697479204D69 PUSH15 0x696E672042414C20486F6C64657244 PUSH6 0x6C6179206672 PUSH16 0x6D207365636F6E64207374616765206E PUSH16 0x742079657420656C6170736564566F74 PUSH10 0x6E67457363726F77206E PUSH16 0x74206F776E656420627920417574686F PUSH19 0x697A657241646170746F724761756765436F6E PUSH21 0x726F6C6C6572206E6F74206F776E65642062792041 PUSH22 0x74686F72697A657241646170746F7254656D706F7261 PUSH19 0x7920506F6C79676F6E204C6971756964697479 KECCAK256 0x4D PUSH10 0x6E696E672042414C2048 PUSH16 0x6C64657254656D706F72617279204172 PUSH3 0x697472 PUSH22 0x6D204C6971756964697479204D696E696E672042414C KECCAK256 0x48 PUSH16 0x6C646572A26469706673582212201070 0xD8 DUP15 PUSH13 0x6808262D21528A2EA07B11ECD6 0xA9 0xD2 CODECOPY 0x1E MSTORE 0x1F SAR PUSH22 0xD6F60F70925764736F6C634300070100330000000000 ",
              "sourceMap": "2221:17360:26:-:0;;;2869:79;;;-1:-1:-1;;;;;;2869:79:26;;;2906:42;2869:79;;;;3117;;;;;3154:42;3117:79;;;;;;3202:81;;;;;;;;;3289:82;;;;;;;;;4065:1185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4065:1185:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2019:1:18;2124:7;:22;;;4452:23:26;:49;;-1:-1:-1;;4452:49:26;;;4553:38;;-1:-1:-1;;;4553:38:26;;;;4065:1185;;;;;;;;;;;;;;;;2124:7:18;;-1:-1:-1;;;;;4553:36:26;;;;;:38;;;;;;;;;;:36;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4553:38:26;-1:-1:-1;;;;;;4602:40:26;;;;;;;4661:29;;;-1:-1:-1;;;4661:29:26;;;;4553:38;;-1:-1:-1;;;;;;4602:40:26;;;4661:27;;:29;;;;;4553:38;;4661:29;;;;;;;;4602:40;4661:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4661:29:26;-1:-1:-1;;;;;;4652:38:26;;;;;;;;4700;;;;;;;4765:37;;;-1:-1:-1;;;4765:37:26;;;;-1:-1:-1;;;;;4765:35:26;;;;;:37;;;;;4661:29;;4765:37;;;;;;;:35;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4765:37:26;-1:-1:-1;;;;;;4748:54:26;;;;;;;;4812:32;;;;;;;4890:35;;;-1:-1:-1;;;4890:35:26;;;;-1:-1:-1;;;;;4812:32:26;;;4890:33;;:35;;;;;4765:37;;4890:35;;;;;;;4812:32;4890:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4890:35:26;-1:-1:-1;;;;;;4854:72:26;;;;;;;;4936:24;;;;;;;4970:44;;;;;;;-1:-1:-1;5024:58:26;;;;;;;5092:46;;;;;;;5149:50;;5209:34;;-1:-1:-1;;2221:17360:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {
                "1976": [
                  {
                    "length": 32,
                    "start": 4038
                  },
                  {
                    "length": 32,
                    "start": 4231
                  },
                  {
                    "length": 32,
                    "start": 4463
                  },
                  {
                    "length": 32,
                    "start": 4675
                  },
                  {
                    "length": 32,
                    "start": 10913
                  }
                ],
                "1978": [
                  {
                    "length": 32,
                    "start": 7786
                  }
                ],
                "1980": [
                  {
                    "length": 32,
                    "start": 10949
                  }
                ],
                "1982": [
                  {
                    "length": 32,
                    "start": 2248
                  },
                  {
                    "length": 32,
                    "start": 2295
                  },
                  {
                    "length": 32,
                    "start": 3797
                  },
                  {
                    "length": 32,
                    "start": 3844
                  }
                ],
                "1984": [
                  {
                    "length": 32,
                    "start": 4852
                  },
                  {
                    "length": 32,
                    "start": 10877
                  }
                ],
                "1986": [
                  {
                    "length": 32,
                    "start": 2952
                  },
                  {
                    "length": 32,
                    "start": 3325
                  },
                  {
                    "length": 32,
                    "start": 3553
                  },
                  {
                    "length": 32,
                    "start": 7720
                  },
                  {
                    "length": 32,
                    "start": 11047
                  },
                  {
                    "length": 32,
                    "start": 11714
                  },
                  {
                    "length": 32,
                    "start": 13220
                  }
                ],
                "1988": [
                  {
                    "length": 32,
                    "start": 6078
                  },
                  {
                    "length": 32,
                    "start": 9063
                  },
                  {
                    "length": 32,
                    "start": 9294
                  },
                  {
                    "length": 32,
                    "start": 9578
                  },
                  {
                    "length": 32,
                    "start": 9907
                  },
                  {
                    "length": 32,
                    "start": 10387
                  },
                  {
                    "length": 32,
                    "start": 10516
                  }
                ],
                "1990": [
                  {
                    "length": 32,
                    "start": 9341
                  },
                  {
                    "length": 32,
                    "start": 10156
                  }
                ],
                "1992": [
                  {
                    "length": 32,
                    "start": 12744
                  }
                ],
                "1994": [
                  {
                    "length": 32,
                    "start": 12437
                  }
                ],
                "2021": [
                  {
                    "length": 32,
                    "start": 1966
                  },
                  {
                    "length": 32,
                    "start": 7625
                  }
                ],
                "2023": [
                  {
                    "length": 32,
                    "start": 848
                  },
                  {
                    "length": 32,
                    "start": 7672
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106101985760003560e01c8063761c4023116100e3578063b77984e91161008c578063e6dec36f11610066578063e6dec36f1461028e578063e758d36b14610296578063f5c458ab1461029e57610198565b8063b77984e91461025d578063dc8c9ec61461021d578063dce8b0cd1461028657610198565b80639912b3d4116100bd5780639912b3d414610245578063aaabadc51461024d578063b1e70e801461025557610198565b8063761c40231461022d578063844c7750146102355780638d928af81461023d57610198565b8063336d4dfc1161014557806342979adc1161011f57806342979adc14610215578063463d9e931461021d57806358de9ade1461022557610198565b8063336d4dfc146101fd5780633b54e68014610205578063410c2d8e1461020d57610198565b80631cdd07a4116101765780631cdd07a4146101e35780631e390389146101ed5780632bd46566146101f557610198565b80630249e6fa1461019d5780631235f8a3146101b75780631336e8d4146101db575b600080fd5b6101a56102a6565b60408051918252519081900360200190f35b6101bf6102ac565b604080516001600160a01b039092168252519081900360200190f35b6101a56102bb565b6101eb6102c7565b005b6101a561079e565b6101eb6107a4565b6101a5611dbb565b6101a5611dc7565b6101a5611deb565b6101a5611df6565b6101a5611e1a565b6101bf611e26565b6101bf611e4a565b6101bf611e59565b6101bf611e68565b6101a5611e8c565b6101bf611e92565b6101eb611f05565b610265612a72565b6040518082600381111561027557fe5b815260200191505060405180910390f35b6101bf612a7b565b6101bf612a9f565b6101bf612ac3565b6101bf612ae7565b60065481565b6002546001600160a01b031681565b67025bf6196bd1000081565b6102cf612af6565b600260085460ff1660038111156102e257fe5b1461034e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e6f7420726561647920666f7220746869726420737461676500000000000000604482015290519081900360640190fd5b7f0000000000000000000000000000000000000000000000000000000000000000600654014210156103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806135826027913960400191505060405180910390fd5b60006103d5612ac3565b905060006103e1611e92565b9050806001600160a01b0316632f2ff15d836001600160a01b031663851c1bb363db1ca26060e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b15801561045c57600080fd5b505afa158015610470573d6000803e3d6000fd5b505050506040513d602081101561048657600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b1580156104e457600080fd5b505af11580156104f8573d6000803e3d6000fd5b5050505061050f600067016345785d8a0000612b0f565b610522600167016345785d8a0000612b0f565b61053560026707c5850872380000612b0f565b610548600367025bf6196bd10000612b0f565b61055a600466f8b0a10e470000612b0f565b806001600160a01b031663d547741f836001600160a01b031663851c1bb363db1ca26060e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b1580156105d357600080fd5b505afa1580156105e7573d6000803e3d6000fd5b505050506040513d60208110156105fd57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561065b57600080fd5b505af115801561066f573d6000803e3d6000fd5b50505050806001600160a01b031663d547741f826001600160a01b031663a217fddf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106bb57600080fd5b505afa1580156106cf573d6000803e3d6000fd5b505050506040513d60208110156106e557600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561074357600080fd5b505af1158015610757573d6000803e3d6000fd5b505042600755505060088054600391907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001835b0217905550505061079c612da3565b565b60055481565b6107ac612af6565b7f000000000000000000000000000000000000000000000000000000000000000042101561083b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4e6f7420726561647920666f722061637469766174696f6e0000000000000000604482015290519081900360640190fd5b600060085460ff16600381111561084e57fe5b146108ba57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4669727374207374657020616c726561647920706572666f726d656400000000604482015290519081900360640190fd5b60006108c4611e92565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166391d148547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a217fddf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561094e57600080fd5b505afa158015610962573d6000803e3d6000fd5b505050506040513d602081101561097857600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526004810192909252306024830152516044808301926020929190829003018186803b1580156109d557600080fd5b505afa1580156109e9573d6000803e3d6000fd5b505050506040513d60208110156109ff57600080fd5b5051610a6c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4e6f742042414c2061646d696e00000000000000000000000000000000000000604482015290519081900360640190fd5b604080517f9be2a884000000000000000000000000000000000000000000000000000000008152600060048201819052306024830152604482015290516001600160a01b03831691639be2a884916064808301926020929190829003018186803b158015610ad957600080fd5b505afa158015610aed573d6000803e3d6000fd5b505050506040513d6020811015610b0357600080fd5b5051610b7057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f7420417574686f72697a65722061646d696e000000000000000000000000604482015290519081900360640190fd5b6000610b7a612ac3565b9050806001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663dfe050316040518163ffffffff1660e01b815260040160206040518083038186803b158015610bdf57600080fd5b505afa158015610bf3573d6000803e3d6000fd5b505050506040513d6020811015610c0957600080fd5b5051604080517ff851a44000000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169163f851a44091600480820192602092909190829003018186803b158015610c6657600080fd5b505afa158015610c7a573d6000803e3d6000fd5b505050506040513d6020811015610c9057600080fd5b50516001600160a01b031614610cf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806135a9602b913960400191505060405180910390fd5b806001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b158015610d5457600080fd5b505afa158015610d68573d6000803e3d6000fd5b505050506040513d6020811015610d7e57600080fd5b50516001600160a01b031614610ddf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806135d4602e913960400191505060405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639fba03a16040518163ffffffff1660e01b815260040160206040518083038186803b158015610e3857600080fd5b505afa158015610e4c573d6000803e3d6000fd5b505050506040513d6020811015610e6257600080fd5b5051600f0b15610ed357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f476175676520747970657320616c726561647920736574000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632f2ff15d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a217fddf6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5b57600080fd5b505afa158015610f6f573d6000803e3d6000fd5b505050506040513d6020811015610f8557600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602483015251604480830192600092919082900301818387803b15801561100c57600080fd5b505af1158015611020573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f0f15f4c000000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d93507f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b1580156110cd57600080fd5b505afa1580156110e1573d6000803e3d6000fd5b505050506040513d60208110156110f757600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561115557600080fd5b505af1158015611169573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156111c857600080fd5b505af11580156111dc573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f40c10f1900000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d93507f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b15801561128957600080fd5b505afa15801561129d573d6000803e3d6000fd5b505050506040513d60208110156112b357600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602483015251604480830192600092919082900301818387803b15801561133a57600080fd5b505af115801561134e573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f92d0d23200000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d935085169163851c1bb3916024808301926020929190829003018186803b1580156113db57600080fd5b505afa1580156113ef573d6000803e3d6000fd5b505050506040513d602081101561140557600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561146357600080fd5b505af1158015611477573d6000803e3d6000fd5b505050506114b96040518060400160405280601a81526020017f4c6971756964697479204d696e696e6720436f6d6d6974746565000000000000815250612daa565b6114f76040518060400160405280600581526020017f766542414c000000000000000000000000000000000000000000000000000000815250612daa565b6115356040518060400160405280600881526020017f457468657265756d000000000000000000000000000000000000000000000000815250612daa565b6115736040518060400160405280600781526020017f506f6c79676f6e00000000000000000000000000000000000000000000000000815250612daa565b6115b16040518060400160405280600881526020017f417262697472756d000000000000000000000000000000000000000000000000815250612daa565b816001600160a01b031663d547741f826001600160a01b031663851c1bb36392d0d23260e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b15801561162a57600080fd5b505afa15801561163e573d6000803e3d6000fd5b505050506040513d602081101561165457600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b1580156116b257600080fd5b505af11580156116c6573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f3a04f90000000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d935085169163851c1bb3916024808301926020929190829003018186803b15801561175357600080fd5b505afa158015611767573d6000803e3d6000fd5b505050506040513d602081101561177d57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602483015251604480830192600092919082900301818387803b15801561180457600080fd5b505af1158015611818573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f3a04f90000000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d935085169163851c1bb3916024808301926020929190829003018186803b1580156118a557600080fd5b505afa1580156118b9573d6000803e3d6000fd5b505050506040513d60208110156118cf57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561192d57600080fd5b505af1158015611941573d6000803e3d6000fd5b505050506119746000604051806060016040528060258152602001613532602591396001546001600160a01b0316613091565b6119a360016040518060600160405280602b8152602001613557602b91396002546001600160a01b0316613091565b6119d260036040518060600160405280602d8152602001613602602d91396003546001600160a01b0316613091565b611a0160046040518060600160405280602e815260200161362f602e91396004546001600160a01b0316613091565b816001600160a01b031663d547741f826001600160a01b031663851c1bb3633a04f90060e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b158015611a7a57600080fd5b505afa158015611a8e573d6000803e3d6000fd5b505050506040513d6020811015611aa457600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b158015611b0257600080fd5b505af1158015611b16573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527fe8de0d4d00000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d935085169163851c1bb3916024808301926020929190829003018186803b158015611ba357600080fd5b505afa158015611bb7573d6000803e3d6000fd5b505050506040513d6020811015611bcd57600080fd5b5051600154604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815260048101939093526001600160a01b03909116602483015251604480830192600092919082900301818387803b158015611c3857600080fd5b505af1158015611c4c573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f058a3a2400000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d935085169163851c1bb3916024808301926020929190829003018186803b158015611cd957600080fd5b505afa158015611ced573d6000803e3d6000fd5b505050506040513d6020811015611d0357600080fd5b5051600154604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815260048101939093526001600160a01b03909116602483015251604480830192600092919082900301818387803b158015611d6e57600080fd5b505af1158015611d82573d6000803e3d6000fd5b505042600555505060088054600191907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016828061078d565b6707c585087238000081565b7f000000000000000000000000000000000000000000000000000000000000000090565b66f8b0a10e47000081565b7f000000000000000000000000000000000000000000000000000000000000000090565b67016345785d8a000081565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001546001600160a01b031681565b6004546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000090565b60075481565b6000611e9c611e68565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b158015611ed457600080fd5b505afa158015611ee8573d6000803e3d6000fd5b505050506040513d6020811015611efe57600080fd5b5051905090565b611f0d612af6565b600160085460ff166003811115611f2057fe5b14611f8c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f7420726561647920666f72207365636f6e64207374616765000000000000604482015290519081900360640190fd5b6000611f96611e92565b9050611fa0613512565b5060408051610400810182527306df3b2bbb68adc8b0e302443692037ed9f91b42815273072f14b85add63488ddad88f855fda4a99d6ac9b602080830191909152730b09dea16768f0799065c475be02919503cb2a358284015273186084ff790c65088ba694df11758fae4943ee9e6060830152731e19cf2d73a72ef1332c882f20534b6519be027660808301527327c9f71cc31464b906e0006d4fcbc8900f48f15f60a08301527332296969ef14eb0c6d29669c550d4a044913023060c083015273350196326aeaa9b98f1903fb5e8fc2686f85318c60e0830152733e5fa9518ea95c3e533eb377c001702a9aacaa32610100830152734bd6d86debdb9f5413e631ad386c4427dc9d01b26101208301527351735bdfbfe3fc13dea8dc6502e2e95898942961610140830152735d66fff62c17d841935b60df5f07f6cf79bd0f47610160830152735f7fa48d765053f8dd85e052843e12d23e3d7bc561018083015273702605f43471183158938c1a3e5f5a359d7b31ba6101a0830152737b50775383d3d6f0215a8f290f2c9e2eebbeceb26101c0830152737edde0cb05ed19e03a9a47cd5e53fc57fde1c80c6101e0830152738f4205e1604133d1875a3e771ae7e4f2b08656396102008301527390291319f1d4ea3ad4db0dd8fe9e12baf749e8456102208301527396646936b91d6b9d7d0c47c496afbf3d6ec7b6f86102408301527396ba9025311e2f47b840a1f68ed57a3df1ea874761026083015273a02e4b3d18d4e6b8d18ac421fbc3dfff8933c40a61028083015273a6f548df93de924d73be7d25dc02554c6bd66db56102a083015273baeec99c90e3420ec6c1e7a769d2a856d2898e4d6102c083015273bf96189eee9357a95c7719f4f5047f76bde804e56102e083015273e2469f47ab58cf9cf59f9822e3c5de4950a41c4961030083015273e99481dc77691d8e2456e5f3f61c1810adfc150361032083015273ec60a5fef79a92c741cb74fdd6bfc340c0279b0161034083015273edf085f65b4f6c155e13155502ef925c9a75600361036083015273efaa1604e82e1b3af8430b90192c1b9e8197e37761038083015273f4c0dd9b82da36c07605df83c8a416f11724d88b6103a083015273f5aaf7ee8c39b651cebf5f1f50c10631e78e0ef96103c083015273feadd389a5c427952d8fdb8057d6c8ba1156cc566103e083015282517f851c1bb30000000000000000000000000000000000000000000000000000000081527f6440e973000000000000000000000000000000000000000000000000000000006004820152925191926001600160a01b0385811693632f2ff15d937f00000000000000000000000000000000000000000000000000000000000000009092169263851c1bb3926024808301939192829003018186803b1580156123ac57600080fd5b505afa1580156123c0573d6000803e3d6000fd5b505050506040513d60208110156123d657600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561243457600080fd5b505af1158015612448573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636440e9737f000000000000000000000000000000000000000000000000000000000000000060026040518363ffffffff1660e01b815260040180836001600160a01b031681526020018260048111156124cc57fe5b815260200192505050600060405180830381600087803b1580156124ef57600080fd5b505af1158015612503573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f6440e97300000000000000000000000000000000000000000000000000000000600482015290516001600160a01b03808716945063d547741f93507f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b1580156125b057600080fd5b505afa1580156125c4573d6000803e3d6000fd5b505050506040513d60208110156125da57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561263857600080fd5b505af115801561264c573d6000803e3d6000fd5b5050604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f5e45a27300000000000000000000000000000000000000000000000000000000600482015290516001600160a01b038087169450632f2ff15d93507f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b1580156126f957600080fd5b505afa15801561270d573d6000803e3d6000fd5b505050506040513d602081101561272357600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b15801561278157600080fd5b505af1158015612795573d6000803e3d6000fd5b506020925060009150505b818110156129025760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639ed933188584602081106127e557fe5b60200201516040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050602060405180830381600087803b15801561282957600080fd5b505af115801561283d573d6000803e3d6000fd5b505050506040513d602081101561285357600080fd5b5051604080517f5e45a2730000000000000000000000000000000000000000000000000000000081526001600160a01b03808416600483015291519293507f000000000000000000000000000000000000000000000000000000000000000090911691635e45a2739160248082019260009290919082900301818387803b1580156128dd57600080fd5b505af11580156128f1573d6000803e3d6000fd5b5050600190930192506127a0915050565b50826001600160a01b031663d547741f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663851c1bb3635e45a27360e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b15801561299c57600080fd5b505afa1580156129b0573d6000803e3d6000fd5b505050506040513d60208110156129c657600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925230602483015251604480830192600092919082900301818387803b158015612a2457600080fd5b505af1158015612a38573d6000803e3d6000fd5b505042600655505060088054600292507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018361078d565b60085460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6003546001600160a01b031681565b612b086002600054141561019061337a565b6002600055565b612b17612ac3565b6001600160a01b0316634036176a7f00000000000000000000000000000000000000000000000000000000000000007fdb1ca26000000000000000000000000000000000000000000000000000000000856004811115612b7357fe5b856040516024018083600f0b815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b815260040180836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c46578181015183820152602001612c2e565b50505050905090810190601f168015612c735780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612c9357600080fd5b505af1158015612ca7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526020811015612cee57600080fd5b8101908080516040519392919084640100000000821115612d0e57600080fd5b908301906020820185811115612d2357600080fd5b8251640100000000811182820188101715612d3d57600080fd5b82525081516020918201929091019080838360005b83811015612d6a578181015183820152602001612d52565b50505050905090810190601f168015612d975780820380516001836020036101000a031916815260200191505b50604052505050505050565b6001600055565b612db2612ac3565b6001600160a01b0316634036176a7f00000000000000000000000000000000000000000000000000000000000000006392d0d23260e01b8460006040516024018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612e32578181015183820152602001612e1a565b50505050905090810190601f168015612e5f5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000988916178152815160e08b901b90981688526001600160a01b0389166004890190815260248901928352835160448a01528351939890975091955060649091019350915080838360005b83811015612f35578181015183820152602001612f1d565b50505050905090810190601f168015612f625780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612f8257600080fd5b505af1158015612f96573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526020811015612fdd57600080fd5b8101908080516040519392919084640100000000821115612ffd57600080fd5b90830190602082018581111561301257600080fd5b825164010000000081118282018810171561302c57600080fd5b82525081516020918201929091019080838360005b83811015613059578181015183820152602001613041565b50505050905090810190601f1680156130865780820380516001836020036101000a031916815260200191505b506040525050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b6a46b3b846040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561310f5781810151838201526020016130f7565b50505050905090810190601f16801561313c5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561315b57600080fd5b505af115801561316f573d6000803e3d6000fd5b505050506040513d602081101561318557600080fd5b5051604080517f9ed933180000000000000000000000000000000000000000000000000000000081526001600160a01b03808416600483015291519293506000927f000000000000000000000000000000000000000000000000000000000000000090921691639ed933189160248082019260209290919082900301818787803b15801561321257600080fd5b505af1158015613226573d6000803e3d6000fd5b505050506040513d602081101561323c57600080fd5b5051905061324a818661338c565b613252611e92565b6001600160a01b0316632f2ff15d836001600160a01b031663851c1bb363c107532960e01b6040518263ffffffff1660e01b815260040180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060206040518083038186803b1580156132ca57600080fd5b505afa1580156132de573d6000803e3d6000fd5b505050506040513d60208110156132f457600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b038716602483015251604480830192600092919082900301818387803b15801561335b57600080fd5b505af115801561336f573d6000803e3d6000fd5b505050505050505050565b8161338857613388816134a5565b5050565b613394612ac3565b6001600160a01b0316634036176a7f0000000000000000000000000000000000000000000000000000000000000000633a04f90060e01b858560405160240180836001600160a01b031681526020018260048111156133ef57fe5b81526040805180830381526020928301825291820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000978816178152815160e08a901b90971687526001600160a01b038816600488019081526024880192835283516044890152835193979096509194506064909101925090808383600083811015612c46578181015183820152602001612c2e565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b604051806104000160405280602090602082028036833750919291505056fe4c6971756964697479204d696e696e6720436f6d6d69747465652042414c20486f6c64657254656d706f7261727920766542414c204c6971756964697479204d696e696e672042414c20486f6c64657244656c61792066726f6d207365636f6e64207374616765206e6f742079657420656c6170736564566f74696e67457363726f77206e6f74206f776e656420627920417574686f72697a657241646170746f724761756765436f6e74726f6c6c6572206e6f74206f776e656420627920417574686f72697a657241646170746f7254656d706f7261727920506f6c79676f6e204c6971756964697479204d696e696e672042414c20486f6c64657254656d706f7261727920417262697472756d204c6971756964697479204d696e696e672042414c20486f6c646572a26469706673582212201070d88e6c6808262d21528a2ea07b11ecd6a9d2391e521f1d75d6f60f70925764736f6c63430007010033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x198 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C4023 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xB77984E9 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE6DEC36F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE6DEC36F EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xE758D36B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xF5C458AB EQ PUSH2 0x29E JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0xB77984E9 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xDC8C9EC6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xDCE8B0CD EQ PUSH2 0x286 JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x9912B3D4 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x9912B3D4 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xB1E70E80 EQ PUSH2 0x255 JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x761C4023 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x844C7750 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x23D JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x336D4DFC GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x42979ADC GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x42979ADC EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x463D9E93 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x58DE9ADE EQ PUSH2 0x225 JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x336D4DFC EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x3B54E680 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x410C2D8E EQ PUSH2 0x20D JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x1CDD07A4 GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x1CDD07A4 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x1E390389 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x2BD46566 EQ PUSH2 0x1F5 JUMPI PUSH2 0x198 JUMP JUMPDEST DUP1 PUSH4 0x249E6FA EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x1235F8A3 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x1336E8D4 EQ PUSH2 0x1DB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x2C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH2 0x79E JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1DBB JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1DC7 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1DEB JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1E1A JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1E26 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1E59 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1E8C JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x2A72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x275 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x2A7B JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2A9F JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AC3 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH8 0x25BF6196BD10000 DUP2 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2E2 JUMPI INVALID JUMPDEST EQ PUSH2 0x34E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420726561647920666F7220746869726420737461676500000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x6 SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3582 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D5 PUSH2 0x2AC3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E1 PUSH2 0x1E92 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2F2FF15D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0xDB1CA260 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x470 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x50F PUSH1 0x0 PUSH8 0x16345785D8A0000 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0x522 PUSH1 0x1 PUSH8 0x16345785D8A0000 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0x535 PUSH1 0x2 PUSH8 0x7C5850872380000 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0x548 PUSH1 0x3 PUSH8 0x25BF6196BD10000 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0x55A PUSH1 0x4 PUSH7 0xF8B0A10E470000 PUSH2 0x2B0F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD547741F DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0xDB1CA260 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD547741F DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA217FDDF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x757 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x7 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x79C PUSH2 0x2DA3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7AC PUSH2 0x2AF6 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x83B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420726561647920666F722061637469766174696F6E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x84E JUMPI INVALID JUMPDEST EQ PUSH2 0x8BA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669727374207374657020616C726561647920706572666F726D656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8C4 PUSH2 0x1E92 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x91D14854 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA217FDDF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x962 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xA6C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742042414C2061646D696E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x9BE2A88400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x9BE2A884 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB70 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420417574686F72697A65722061646D696E000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB7A PUSH2 0x2AC3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE05031 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF851A440 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35A9 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x35D4 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9FBA03A1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xF SIGNEXTEND ISZERO PUSH2 0xED3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476175676520747970657320616C726561647920736574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2F2FF15D PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA217FDDF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x100C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1020 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xF15F4C000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1169 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF15F4C0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x129D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x133A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x134E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x92D0D23200000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP DUP6 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1477 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x14B9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6971756964697479204D696E696E6720436F6D6D6974746565000000000000 DUP2 MSTORE POP PUSH2 0x2DAA JUMP JUMPDEST PUSH2 0x14F7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x766542414C000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2DAA JUMP JUMPDEST PUSH2 0x1535 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x457468657265756D000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2DAA JUMP JUMPDEST PUSH2 0x1573 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6C79676F6E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2DAA JUMP JUMPDEST PUSH2 0x15B1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417262697472756D000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2DAA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD547741F DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0x92D0D232 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x163E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x3A04F90000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP DUP6 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1767 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x177D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1818 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x3A04F90000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP DUP6 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x192D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1941 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1974 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3532 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3091 JUMP JUMPDEST PUSH2 0x19A3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3557 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3091 JUMP JUMPDEST PUSH2 0x19D2 PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3602 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3091 JUMP JUMPDEST PUSH2 0x1A01 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x362F PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3091 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD547741F DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0x3A04F900 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xE8DE0D4D00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP DUP6 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x58A3A2400000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP DUP6 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x5 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP1 PUSH2 0x78D JUMP JUMPDEST PUSH8 0x7C5850872380000 DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH7 0xF8B0A10E470000 DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9C PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F0D PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F20 JUMPI INVALID JUMPDEST EQ PUSH2 0x1F8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420726561647920666F72207365636F6E64207374616765000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F96 PUSH2 0x1E92 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FA0 PUSH2 0x3512 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x400 DUP2 ADD DUP3 MSTORE PUSH20 0x6DF3B2BBB68ADC8B0E302443692037ED9F91B42 DUP2 MSTORE PUSH20 0x72F14B85ADD63488DDAD88F855FDA4A99D6AC9B PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xB09DEA16768F0799065C475BE02919503CB2A35 DUP3 DUP5 ADD MSTORE PUSH20 0x186084FF790C65088BA694DF11758FAE4943EE9E PUSH1 0x60 DUP4 ADD MSTORE PUSH20 0x1E19CF2D73A72EF1332C882F20534B6519BE0276 PUSH1 0x80 DUP4 ADD MSTORE PUSH20 0x27C9F71CC31464B906E0006D4FCBC8900F48F15F PUSH1 0xA0 DUP4 ADD MSTORE PUSH20 0x32296969EF14EB0C6D29669C550D4A0449130230 PUSH1 0xC0 DUP4 ADD MSTORE PUSH20 0x350196326AEAA9B98F1903FB5E8FC2686F85318C PUSH1 0xE0 DUP4 ADD MSTORE PUSH20 0x3E5FA9518EA95C3E533EB377C001702A9AACAA32 PUSH2 0x100 DUP4 ADD MSTORE PUSH20 0x4BD6D86DEBDB9F5413E631AD386C4427DC9D01B2 PUSH2 0x120 DUP4 ADD MSTORE PUSH20 0x51735BDFBFE3FC13DEA8DC6502E2E95898942961 PUSH2 0x140 DUP4 ADD MSTORE PUSH20 0x5D66FFF62C17D841935B60DF5F07F6CF79BD0F47 PUSH2 0x160 DUP4 ADD MSTORE PUSH20 0x5F7FA48D765053F8DD85E052843E12D23E3D7BC5 PUSH2 0x180 DUP4 ADD MSTORE PUSH20 0x702605F43471183158938C1A3E5F5A359D7B31BA PUSH2 0x1A0 DUP4 ADD MSTORE PUSH20 0x7B50775383D3D6F0215A8F290F2C9E2EEBBECEB2 PUSH2 0x1C0 DUP4 ADD MSTORE PUSH20 0x7EDDE0CB05ED19E03A9A47CD5E53FC57FDE1C80C PUSH2 0x1E0 DUP4 ADD MSTORE PUSH20 0x8F4205E1604133D1875A3E771AE7E4F2B0865639 PUSH2 0x200 DUP4 ADD MSTORE PUSH20 0x90291319F1D4EA3AD4DB0DD8FE9E12BAF749E845 PUSH2 0x220 DUP4 ADD MSTORE PUSH20 0x96646936B91D6B9D7D0C47C496AFBF3D6EC7B6F8 PUSH2 0x240 DUP4 ADD MSTORE PUSH20 0x96BA9025311E2F47B840A1F68ED57A3DF1EA8747 PUSH2 0x260 DUP4 ADD MSTORE PUSH20 0xA02E4B3D18D4E6B8D18AC421FBC3DFFF8933C40A PUSH2 0x280 DUP4 ADD MSTORE PUSH20 0xA6F548DF93DE924D73BE7D25DC02554C6BD66DB5 PUSH2 0x2A0 DUP4 ADD MSTORE PUSH20 0xBAEEC99C90E3420EC6C1E7A769D2A856D2898E4D PUSH2 0x2C0 DUP4 ADD MSTORE PUSH20 0xBF96189EEE9357A95C7719F4F5047F76BDE804E5 PUSH2 0x2E0 DUP4 ADD MSTORE PUSH20 0xE2469F47AB58CF9CF59F9822E3C5DE4950A41C49 PUSH2 0x300 DUP4 ADD MSTORE PUSH20 0xE99481DC77691D8E2456E5F3F61C1810ADFC1503 PUSH2 0x320 DUP4 ADD MSTORE PUSH20 0xEC60A5FEF79A92C741CB74FDD6BFC340C0279B01 PUSH2 0x340 DUP4 ADD MSTORE PUSH20 0xEDF085F65B4F6C155E13155502EF925C9A756003 PUSH2 0x360 DUP4 ADD MSTORE PUSH20 0xEFAA1604E82E1B3AF8430B90192C1B9E8197E377 PUSH2 0x380 DUP4 ADD MSTORE PUSH20 0xF4C0DD9B82DA36C07605DF83C8A416F11724D88B PUSH2 0x3A0 DUP4 ADD MSTORE PUSH20 0xF5AAF7EE8C39B651CEBF5F1F50C10631E78E0EF9 PUSH2 0x3C0 DUP4 ADD MSTORE PUSH20 0xFEADD389A5C427952D8FDB8057D6C8BA1156CC56 PUSH2 0x3E0 DUP4 ADD MSTORE DUP3 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x6440E97300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP3 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP4 PUSH4 0x2F2FF15D SWAP4 PUSH32 0x0 SWAP1 SWAP3 AND SWAP3 PUSH4 0x851C1BB3 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2448 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6440E973 PUSH32 0x0 PUSH1 0x2 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x24CC JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2503 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x6440E97300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0xD547741F SWAP4 POP PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x264C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x5E45A27300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP5 POP PUSH4 0x2F2FF15D SWAP4 POP PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x270D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2795 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 SWAP3 POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2902 JUMPI PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9ED93318 DUP6 DUP5 PUSH1 0x20 DUP2 LT PUSH2 0x27E5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x283D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x5E45A27300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP2 PUSH4 0x5E45A273 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x27A0 SWAP2 POP POP JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD547741F PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0x5E45A273 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x299C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x6 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x2 SWAP3 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 DUP4 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B08 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x190 PUSH2 0x337A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x2B17 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4036176A PUSH32 0x0 PUSH32 0xDB1CA26000000000000000000000000000000000000000000000000000000000 DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2B73 JUMPI INVALID JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C46 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2C2E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C73 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x2D0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2D23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D6A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D52 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D97 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x2DB2 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4036176A PUSH32 0x0 PUSH4 0x92D0D232 PUSH1 0xE0 SHL DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E32 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E1A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E5F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP9 DUP10 AND OR DUP2 MSTORE DUP2 MLOAD PUSH1 0xE0 DUP12 SWAP1 SHL SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x4 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x24 DUP10 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP11 ADD MSTORE DUP4 MLOAD SWAP4 SWAP9 SWAP1 SWAP8 POP SWAP2 SWAP6 POP PUSH1 0x64 SWAP1 SWAP2 ADD SWAP4 POP SWAP2 POP DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F35 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F1D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2F62 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x2FFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x302C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3059 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3041 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3086 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB6A46B3B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x310F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x30F7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x313C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x315B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x316F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x9ED9331800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0x9ED93318 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x323C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x324A DUP2 DUP7 PUSH2 0x338C JUMP JUMPDEST PUSH2 0x3252 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2F2FF15D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x851C1BB3 PUSH4 0xC1075329 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x335B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x336F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x3388 JUMPI PUSH2 0x3388 DUP2 PUSH2 0x34A5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3394 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4036176A PUSH32 0x0 PUSH4 0x3A04F900 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x33EF JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD DUP3 MSTORE SWAP2 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP8 DUP9 AND OR DUP2 MSTORE DUP2 MLOAD PUSH1 0xE0 DUP11 SWAP1 SHL SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x24 DUP9 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP10 ADD MSTORE DUP4 MLOAD SWAP4 SWAP8 SWAP1 SWAP7 POP SWAP2 SWAP5 POP PUSH1 0x64 SWAP1 SWAP2 ADD SWAP3 POP SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 DUP2 LT ISZERO PUSH2 0x2C46 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2C2E JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x400 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP INVALID 0x4C PUSH10 0x71756964697479204D69 PUSH15 0x696E6720436F6D6D69747465652042 COINBASE 0x4C KECCAK256 0x48 PUSH16 0x6C64657254656D706F72617279207665 TIMESTAMP COINBASE 0x4C KECCAK256 0x4C PUSH10 0x71756964697479204D69 PUSH15 0x696E672042414C20486F6C64657244 PUSH6 0x6C6179206672 PUSH16 0x6D207365636F6E64207374616765206E PUSH16 0x742079657420656C6170736564566F74 PUSH10 0x6E67457363726F77206E PUSH16 0x74206F776E656420627920417574686F PUSH19 0x697A657241646170746F724761756765436F6E PUSH21 0x726F6C6C6572206E6F74206F776E65642062792041 PUSH22 0x74686F72697A657241646170746F7254656D706F7261 PUSH19 0x7920506F6C79676F6E204C6971756964697479 KECCAK256 0x4D PUSH10 0x6E696E672042414C2048 PUSH16 0x6C64657254656D706F72617279204172 PUSH3 0x697472 PUSH22 0x6D204C6971756964697479204D696E696E672042414C KECCAK256 0x48 PUSH16 0x6C646572A26469706673582212201070 0xD8 DUP15 PUSH13 0x6808262D21528A2EA07B11ECD6 0xA9 0xD2 CODECOPY 0x1E MSTORE 0x1F SAR PUSH22 0xD6F60F70925764736F6C634300070100330000000000 ",
              "sourceMap": "2221:17360:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3516:40;;;:::i;:::-;;;;;;;;;;;;;;;;3117:79;;;:::i;:::-;;;;-1:-1:-1;;;;;3117:79:26;;;;;;;;;;;;;;3947:46;;;:::i;16281:2003::-;;;:::i;:::-;;3471:39;;;:::i;6546:6215::-;;;:::i;3887:47::-;;;:::i;6314:118::-;;;:::i;4006:46::-;;;:::i;6438:102::-;;;:::i;3830:44::-;;;:::i;6067:111::-;;;:::i;2869:79::-;;;:::i;3289:82::-;;;:::i;5315:79::-;;;:::i;3562:39::-;;;:::i;5480:145::-;;;:::i;12767:3508::-;;;:::i;6184:124::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;5878:108;;;:::i;5752:120::-;;;:::i;5631:115::-;;;:::i;3202:81::-;;;:::i;3516:40::-;;;;:::o;3117:79::-;;;-1:-1:-1;;;;;3117:79:26;;:::o;3947:46::-;3988:5;3947:46;:::o;16281:2003::-;2562:20:18;:18;:20::i;:::-;16418:33:26::1;16391:23;::::0;::::1;;:60;::::0;::::1;;;;;;;16383:98;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;16560:16;16532:25;;:44;16512:15;:65;;16491:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16940:36;16979:22;:20;:22::i;:::-;16940:61;;17211:29;17243:15;:13;:15::i;:::-;17211:47;;17268:10;-1:-1:-1::0;;;;;17268:20:26::1;;17302:17;-1:-1:-1::0;;;;;17302:29:26::1;;17332:44;;;17302:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;17302:75:26;17268:146:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;17399:4:::1;17268:146:::0;;;;;;;;;;-1:-1:-1;;17268:146:26;;;;;;;-1:-1:-1;17268:146:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;17425:88;17445:46;3812:5;17425:19;:88::i;:::-;17523:62;17543:27;3869:5;17523:19;:62::i;:::-;17595:68;17615:30;3929:5;17595:19;:68::i;:::-;17673:66;17693:29;3988:5;17673:19;:66::i;:::-;17749:68;17769:30;4048:4;17749:19;:68::i;:::-;17828:10;-1:-1:-1::0;;;;;17828:21:26::1;;17863:17;-1:-1:-1::0;;;;;17863:29:26::1;;17893:44;;;17863:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;17863:75:26;17828:147:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;17960:4:::1;17828:147:::0;;;;;;;;;;-1:-1:-1;;17828:147:26;;;;;;;-1:-1:-1;17828:147:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;18087:10;-1:-1:-1::0;;;;;18087:21:26::1;;18109:10;-1:-1:-1::0;;;;;18109:29:26::1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;18109:31:26;18087:69:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;18150:4:::1;18087:69:::0;;;;;;;;;;-1:-1:-1;;18087:69:26;;;;;;;-1:-1:-1;18087:69:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;18194:15:26::1;18167:24;:42:::0;-1:-1:-1;;18219:23:26::1;:58:::0;;18245:32:::1;::::0;18219:23;:58;::::1;::::0;18245:32;18219:58:::1;;;;;;2592:1:18;;2603:19:::0;:17;:19::i;:::-;16281:2003:26:o;3471:39::-;;;;:::o;6546:6215::-;2562:20:18;:18;:20::i;:::-;6666:24:26::1;6647:15;:43;;6639:80;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;6764:23;6737;::::0;::::1;;:50;::::0;::::1;;;;;;;6729:91;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;6930:29;6962:15;:13;:15::i;:::-;6930:47;;6995:14;-1:-1:-1::0;;;;;6995:22:26::1;;7018:14;-1:-1:-1::0;;;;;7018:33:26::1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7018:35:26;6995:74:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;7063:4:::1;6995:74:::0;;;;;;;;;;7018:35:::1;::::0;6995:74;;;;;;;;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;6995:74:26;6987:100:::1;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;7105:60;::::0;;;;;7135:1:::1;7105:60;::::0;::::1;::::0;;;7147:4:::1;7105:60:::0;;;;;;;;;;-1:-1:-1;;;;;7105:21:26;::::1;::::0;::::1;::::0;:60;;;;;::::1;::::0;;;;;;;;:21;:60;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7105:60:26;7097:93:::1;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;7282:36;7321:22;:20;:22::i;:::-;7282:61;;7418:17;-1:-1:-1::0;;;;;7374:61:26::1;:16;-1:-1:-1::0;;;;;7374:30:26::1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7374:32:26;:40:::1;::::0;;;;;;;-1:-1:-1;;;;;7374:38:26;;::::1;::::0;::::1;::::0;:40:::1;::::0;;::::1;::::0;:32:::1;::::0;:40;;;;;;;;:38;:40;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7374:40:26;-1:-1:-1;;;;;7374:61:26::1;;7353:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7550:17;-1:-1:-1::0;;;;;7522:45:26::1;:16;-1:-1:-1::0;;;;;7522:22:26::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7522:24:26;-1:-1:-1;;;;;7522:45:26::1;;7514:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7662:16;-1:-1:-1::0;;;;;7662:30:26::1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7662:32:26;:37:::1;;::::0;7654:73:::1;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8007:14;-1:-1:-1::0;;;;;8007:24:26::1;;8032:14;-1:-1:-1::0;;;;;8032:33:26::1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8032:35:26;8007:91:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;8077:19:26::1;8007:91;::::0;;;;;;;;;;-1:-1:-1;;8007:91:26;;;;;;;-1:-1:-1;8007:91:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8129:70:26::1;::::0;;;;;8161:37;8129:70:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;8108:20:26;;::::1;::::0;-1:-1:-1;8108:20:26::1;::::0;-1:-1:-1;8129:19:26::1;:31;::::0;::::1;::::0;:70;;;;;::::1;::::0;;;;;;;;:31;:70;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8129:70:26;8108:107:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;8209:4:::1;8108:107:::0;;;;;;;;;;-1:-1:-1;;8108:107:26;;;;;;;-1:-1:-1;8108:107:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8225:19;-1:-1:-1::0;;;;;8225:28:26::1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8580:66:26::1;::::0;;;;;8612:33;8580:66:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;8546:20:26;;::::1;::::0;-1:-1:-1;8546:20:26::1;::::0;-1:-1:-1;8580:19:26::1;:31;::::0;::::1;::::0;:66;;;;;::::1;::::0;;;;;;;;:31;:66;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8580:66:26;8546:148:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;8668:15:26::1;8546:148;::::0;;;;;;;;;;-1:-1:-1;;8546:148:26;;;;;;;-1:-1:-1;8546:148:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9487:65:26::1;::::0;;;;;9517:34;9487:65:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;9466:20:26;;::::1;::::0;-1:-1:-1;9466:20:26::1;::::0;-1:-1:-1;9487:29:26;::::1;::::0;::::1;::::0;:65;;;;;::::1;::::0;;;;;;;;:29;:65;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9487:65:26;9466:102:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;9562:4:::1;9466:102:::0;;;;;;;;;;-1:-1:-1;;9466:102:26;;;;;;;-1:-1:-1;9466:102:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9583:43;;;;;;;;;;;;;;;;;::::0;:13:::1;:43::i;:::-;9640:22;;;;;;;;;;;;;;;;;::::0;:13:::1;:22::i;:::-;9676:25;;;;;;;;;;;;;;;;;::::0;:13:::1;:25::i;:::-;9715:24;;;;;;;;;;;;;;;;;::::0;:13:::1;:24::i;:::-;9753:25;;;;;;;;;;;;;;;;;::::0;:13:::1;:25::i;:::-;9793:10;-1:-1:-1::0;;;;;9793:21:26::1;;9815:17;-1:-1:-1::0;;;;;9815:29:26::1;;9845:34;;;9815:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9815:65:26;9793:103:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;9890:4:::1;9793:103:::0;;;;;;;;;;-1:-1:-1;;9793:103:26;;;;;;;-1:-1:-1;9793:103:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10394:66:26::1;::::0;;;;;10424:35;10394:66:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;10373:20:26;;::::1;::::0;-1:-1:-1;10373:20:26::1;::::0;-1:-1:-1;10394:29:26;::::1;::::0;::::1;::::0;:66;;;;;::::1;::::0;;;;;;;;:29;:66;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;10394:66:26;10373:110:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;10470:11:26::1;10373:110;::::0;;;;;;;;;;-1:-1:-1;;10373:110:26;;;;;;;-1:-1:-1;10373:110:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11020:66:26::1;::::0;;;;;11050:35;11020:66:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;10999:20:26;;::::1;::::0;-1:-1:-1;10999:20:26::1;::::0;-1:-1:-1;11020:29:26;::::1;::::0;::::1;::::0;:66;;;;;::::1;::::0;;;;;;;;:29;:66;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;11020:66:26;10999:103:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;11096:4:::1;10999:103:::0;;;;;;;;;;-1:-1:-1;;10999:103:26;;;;;;;-1:-1:-1;10999:103:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11142:199;11187:46;11142:199;;;;;;;;;;;;;;;;;11308:19;::::0;-1:-1:-1;;;;;11308:19:26::1;11142:27;:199::i;:::-;11381:186;11426:27;11381:186;;;;;;;;;;;;;;;;;11534:19;::::0;-1:-1:-1;;;;;11534:19:26::1;11381:27;:186::i;:::-;11607:192;11652:29;11607:192;;;;;;;;;;;;;;;;;11764:21;::::0;-1:-1:-1;;;;;11764:21:26::1;11607:27;:192::i;:::-;11838:195;11883:30;11838:195;;;;;;;;;;;;;;;;;11997:22;::::0;-1:-1:-1;;;;;11997:22:26::1;11838:27;:195::i;:::-;12048:10;-1:-1:-1::0;;;;;12048:21:26::1;;12070:17;-1:-1:-1::0;;;;;12070:29:26::1;;12100:35;;;12070:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;12070:66:26;12048:104:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;12146:4:::1;12048:104:::0;;;;;;;;;;-1:-1:-1;;12048:104:26;;;;;;;-1:-1:-1;12048:104:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12344:73:26::1;::::0;;;;;12374:42;12344:73:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;12310:20:26;;::::1;::::0;-1:-1:-1;12310:20:26::1;::::0;-1:-1:-1;12344:29:26;::::1;::::0;::::1;::::0;:73;;;;;::::1;::::0;;;;;;;;:29;:73;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;12344:73:26;12431:19:::1;::::0;12310:150:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;12431:19:26;;::::1;12310:150:::0;;;;;;;;;;12431:19:::1;::::0;12310:150;;;;;;;12431:19;12310:150;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12505:85:26::1;::::0;;;;;12535:54;12505:85:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;12471:20:26;;::::1;::::0;-1:-1:-1;12471:20:26::1;::::0;-1:-1:-1;12505:29:26;::::1;::::0;::::1;::::0;:85;;;;;::::1;::::0;;;;;;;;:29;:85;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;12505:85:26;12604:19:::1;::::0;12471:162:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;12604:19:26;;::::1;12471:162:::0;;;;;;;;;;12604:19:::1;::::0;12471:162;;;;;;;12604:19;12471:162;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12671:15:26::1;12644:24;:42:::0;-1:-1:-1;;12696:23:26::1;:58:::0;;12722:32:::1;::::0;12696:23;:58;::::1;12722:32:::0;;12696:58:::1;::::0;3887:47;3929:5;3887:47;:::o;6314:118::-;6401:24;6314:118;:::o;4006:46::-;4048:4;4006:46;:::o;6438:102::-;6517:16;6438:102;:::o;3830:44::-;3869:5;3830:44;:::o;6067:111::-;6155:16;6067:111;:::o;2869:79::-;;;-1:-1:-1;;;;;2869:79:26;;:::o;3289:82::-;;;-1:-1:-1;;;;;3289:82:26;;:::o;5315:79::-;5381:6;5315:79;:::o;3562:39::-;;;;:::o;5480:145::-;5526:18;5590:10;:8;:10::i;:::-;-1:-1:-1;;;;;5590:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5590:26:26;;-1:-1:-1;5480:145:26;:::o;12767:3508::-;2562:20:18;:18;:20::i;:::-;12864:32:26::1;12837:23;::::0;::::1;;:59;::::0;::::1;;;;;;;12829:98;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;12938:29;12970:15;:13;:15::i;:::-;12938:47;;13180:39;;:::i;:::-;-1:-1:-1::0;13180:1844:26::1;::::0;;::::1;::::0;::::1;::::0;;13236:42:::1;13180:1844:::0;;13292:42:::1;13180:1844;::::0;;::::1;::::0;;;;13348:42:::1;13180:1844:::0;;;;13404:42:::1;13180:1844:::0;;;;13460:42:::1;13180:1844:::0;;;;13516:42:::1;13180:1844:::0;;;;13572:42:::1;13180:1844:::0;;;;13628:42:::1;13180:1844:::0;;;;13684:42:::1;13180:1844:::0;;;;13740:42:::1;13180:1844:::0;;;;13796:42:::1;13180:1844:::0;;;;13852:42:::1;13180:1844:::0;;;;13908:42:::1;13180:1844:::0;;;;13964:42:::1;13180:1844:::0;;;;14020:42:::1;13180:1844:::0;;;;14076:42:::1;13180:1844:::0;;;;14132:42:::1;13180:1844:::0;;;;14188:42:::1;13180:1844:::0;;;;14244:42:::1;13180:1844:::0;;;;14300:42:::1;13180:1844:::0;;;;14356:42:::1;13180:1844:::0;;;;14412:42:::1;13180:1844:::0;;;;14468:42:::1;13180:1844:::0;;;;14524:42:::1;13180:1844:::0;;;;14580:42:::1;13180:1844:::0;;;;14636:42:::1;13180:1844:::0;;;;14692:42:::1;13180:1844:::0;;;;14748:42:::1;13180:1844:::0;;;;14804:42:::1;13180:1844:::0;;;;14860:42:::1;13180:1844:::0;;;;14916:42:::1;13180:1844:::0;;;;14972:42:::1;13180:1844:::0;;;;15212:61;;;;;15236:36;15212:61:::1;::::0;::::1;::::0;;;13180:1844;;-1:-1:-1;;;;;15191:20:26;;::::1;::::0;::::1;::::0;15212:11:::1;:23:::0;;::::1;::::0;::::1;::::0;:61;;;;;13180:1844;;15212:61;;;;;:23;:61;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;15212:61:26;15191:98:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;15283:4:::1;15191:98:::0;;;;;;;;;;-1:-1:-1;;15191:98:26;;;;;;;-1:-1:-1;15191:98:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15304:11;-1:-1:-1::0;;;;;15304:27:26::1;;15332:21;15355:30;15304:82;;;;;;;;;;;;;-1:-1:-1::0;;;;;15304:82:26::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;15423:61:26::1;::::0;;;;;15447:36;15423:61:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;15401:21:26;;::::1;::::0;-1:-1:-1;15401:21:26::1;::::0;-1:-1:-1;15423:11:26::1;:23;::::0;::::1;::::0;:61;;;;;::::1;::::0;;;;;;;;:23;:61;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;15423:61:26;15401:99:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;15494:4:::1;15401:99:::0;;;;;;;;;;-1:-1:-1;;15401:99:26;;;;;;;-1:-1:-1;15401:99:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;15626:62:26::1;::::0;;;;;15650:37;15626:62:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;15605:20:26;;::::1;::::0;-1:-1:-1;15605:20:26::1;::::0;-1:-1:-1;15626:11:26::1;:23;::::0;::::1;::::0;:62;;;;;::::1;::::0;;;;;;;;:23;:62;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;15626:62:26;15605:99:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;15698:4:::1;15605:99:::0;;;;;;;;;;-1:-1:-1;;15605:99:26;;;;;;;-1:-1:-1;15605:99:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;15741:19:26::1;::::0;-1:-1:-1;15719:19:26::1;::::0;-1:-1:-1;;15774:247:26::1;15798:11;15794:1;:15;15774:247;;;15834:21;15874;-1:-1:-1::0;;;;;15874:28:26::1;;15903:12;15916:1;15903:15;;;;;;;;;;;15874:45;;;;;;;;;;;;;-1:-1:-1::0;;;;;15874:45:26::1;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;15874:45:26;15938:68:::1;::::0;;;;;-1:-1:-1;;;;;15938:68:26;;::::1;;::::0;::::1;::::0;;;15874:45;;-1:-1:-1;15938:11:26::1;:28:::0;;::::1;::::0;::::1;::::0;:68;;;;;-1:-1:-1;;15938:68:26;;;;;;;;-1:-1:-1;15938:28:26;:68;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;15811:3:26::1;::::0;;::::1;::::0;-1:-1:-1;15774:247:26::1;::::0;-1:-1:-1;;15774:247:26::1;;;16035:10;-1:-1:-1::0;;;;;16035:21:26::1;;16057:11;-1:-1:-1::0;;;;;16057:23:26::1;;16081:37;;;16057:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;16057:62:26;16035:100:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;16129:4:::1;16035:100:::0;;;;;;;;;;-1:-1:-1;;16035:100:26;;;;;;;-1:-1:-1;16035:100:26;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;16184:15:26::1;16156:25;:43:::0;-1:-1:-1;;16209:23:26::1;:59:::0;;16235:33:::1;::::0;-1:-1:-1;16209:59:26;::::1;::::0;16235:33;16209:59:::1;::::0;6184:124;6278:23;;;;6184:124;:::o;5878:108::-;5964:15;5878:108;:::o;5752:120::-;5846:19;5752:120;:::o;5631:115::-;5721:18;5631:115;:::o;3202:81::-;;;-1:-1:-1;;;;;3202:81:26;;:::o;2635:271:18:-;2758:48;2062:1;2767:7;;:19;;8528:3:12;2758:8:18;:48::i;:::-;2062:1;2881:7;:18;2635:271::o;18812:291:26:-;18905:22;:20;:22::i;:::-;-1:-1:-1;;;;;18905:36:26;;18963:16;19017:44;19070:6;19063:14;;;;;;;;19079:6;18994:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18905:191;;;;;;;;;;;;;-1:-1:-1;;;;;18905:191:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18905:191:26;;;;;;;;;;-1:-1:-1;18905:191:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18812:291;;:::o;2912:208:18:-;2019:1;3091:7;:22;2912:208::o;18572:234:26:-;18633:22;:20;:22::i;:::-;-1:-1:-1;;;;;18633:36:26;;18691:16;18745:34;;;18781:4;18787:1;18722:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18722:67:26;;;;;;;;;;;;;;;;;;;;;;;;;;;18633:166;;;;;;;;;;;-1:-1:-1;;;;;18633:166:26;;;;;;;;;;;;;;;;;;;;;;18722:67;;18633:166;;-1:-1:-1;18633:166:26;;-1:-1:-1;18633:166:26;;;;;-1:-1:-1;18722:67:26;-1:-1:-1;18633:166:26;;18722:67;-1:-1:-1;18633:166:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18633:166:26;;;;;;;;;;-1:-1:-1;18633:166:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18572:234;:::o;19109:470::-;19266:22;19291;-1:-1:-1;;;;;19291:29:26;;19321:4;19291:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19291:35:26;19376:52;;;;;;-1:-1:-1;;;;;19376:52:26;;;;;;;;;19291:35;;-1:-1:-1;;;19376:28:26;:35;;;;;;:52;;;;;19291:35;;19376:52;;;;;;;;-1:-1:-1;19376:35:26;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19376:52:26;;-1:-1:-1;19439:27:26;19376:52;19456:9;19439;:27::i;:::-;19476:15;:13;:15::i;:::-;-1:-1:-1;;;;;19476:25:26;;19502:6;-1:-1:-1;;;;;19502:18:26;;19521:38;;;19502:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19502:58:26;19476:96;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19476:96:26;;;;;;;;;;;;-1:-1:-1;;19476:96:26;;;;;;;-1:-1:-1;19476:96:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19109:470;;;;;:::o;866:101:12:-;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;18290:276:26:-;18383:22;:20;:22::i;:::-;-1:-1:-1;;;;;18383:36:26;;18441:16;18495:35;;;18532:5;18539:9;18472:77;;;;;;-1:-1:-1;;;;;18472:77:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18383:176;;;;;;;;;;;-1:-1:-1;;;;;18383:176:26;;;;;;;;;;;;;;;;;;;;;;18472:77;;18383:176;;-1:-1:-1;18383:176:26;;-1:-1:-1;18383:176:26;;;;;-1:-1:-1;18472:77:26;18383:176;;18472:77;;18383:176;;;;;;;;;;;;;;;;;;1074:3172:12;3593:66;3588:3;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2999:73;2210:2;2243:18;;;2288;;;2215:4;2284:29;;;3040:1;3036:14;2195:18;;;;3025:26;;;;2336:18;;;;2383;;;2379:29;;;3057:2;3053:17;3021:50;;;;2999:73;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "ARBITRUM_WEIGHT()": "410c2d8e",
              "ETHEREUM_WEIGHT()": "336d4dfc",
              "LM_COMMITTEE_WEIGHT()": "dc8c9ec6",
              "POLYGON_WEIGHT()": "1336e8d4",
              "VEBAL_WEIGHT()": "463d9e93",
              "arbitrumGaugeRecipient()": "844c7750",
              "firstStageActivationTime()": "1e390389",
              "getActivationScheduledTime()": "3b54e680",
              "getAuthorizer()": "aaabadc5",
              "getAuthorizerAdaptor()": "e758d36b",
              "getBalancerMinter()": "dce8b0cd",
              "getBalancerTokenAdmin()": "e6dec36f",
              "getCurrentDeploymentStage()": "b77984e9",
              "getGaugeController()": "58de9ade",
              "getThirdStageDelay()": "42979adc",
              "getVault()": "8d928af8",
              "lmCommitteeMultisig()": "761c4023",
              "performFirstStage()": "2bd46566",
              "performSecondStage()": "b1e70e80",
              "performThirdStage()": "1cdd07a4",
              "polygonGaugeRecipient()": "f5c458ab",
              "secondStageActivationTime()": "0249e6fa",
              "thirdStageActivationTime()": "9912b3d4",
              "veBALGaugeRecipient()": "1235f8a3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBalancerMinter\",\"name\":\"balancerMinter\",\"type\":\"address\"},{\"internalType\":\"contract IAuthorizerAdaptor\",\"name\":\"authorizerAdaptor\",\"type\":\"address\"},{\"internalType\":\"contract IGaugeAdder\",\"name\":\"gaugeAdder\",\"type\":\"address\"},{\"internalType\":\"contract ILiquidityGaugeFactory\",\"name\":\"ethereumGaugeFactory\",\"type\":\"address\"},{\"internalType\":\"contract ILiquidityGaugeFactory\",\"name\":\"singleRecipientGaugeFactory\",\"type\":\"address\"},{\"internalType\":\"contract IBALTokenHolderFactory\",\"name\":\"balTokenHolderFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"activationScheduledTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thirdStageDelay\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ARBITRUM_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ETHEREUM_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LM_COMMITTEE_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POLYGON_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VEBAL_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbitrumGaugeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"firstStageActivationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivationScheduledTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract ICurrentAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizerAdaptor\",\"outputs\":[{\"internalType\":\"contract IAuthorizerAdaptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalancerMinter\",\"outputs\":[{\"internalType\":\"contract IBalancerMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalancerTokenAdmin\",\"outputs\":[{\"internalType\":\"contract IBalancerTokenAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDeploymentStage\",\"outputs\":[{\"internalType\":\"enum veBALDeploymentCoordinator.DeploymentStage\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGaugeController\",\"outputs\":[{\"internalType\":\"contract IGaugeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThirdStageDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lmCommitteeMultisig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performFirstStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performSecondStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performThirdStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"polygonGaugeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondStageActivationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thirdStageActivationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"veBALGaugeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAuthorizer()\":{\"notice\":\"Returns the Balancer Vault's current authorizer.\"},\"getGaugeController()\":{\"notice\":\"Returns the address of the Gauge Controller\"},\"getVault()\":{\"notice\":\"Returns the Balancer Vault.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/20220322-veBAL-activation/veBALDeploymentCoordinator.sol\":\"veBALDeploymentCoordinator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x999b90d074bc14e7f1b5800053a63734855e9d30fcff6017dde0679636dde008\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://63768db76eb190dce7527f1c9bf0ea7c59402ad76e529ab3d7376d60e1823c4f\",\"dweb:/ipfs/QmbnmnSkPh1ukq43k6kHUSqafRznvY5ejoNZcHQT1TJfsh\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol\":{\"keccak256\":\"0x286a4b1cb4a632954e58c68baac671fb0dcbd139c5a353b0419088b0de40477c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b57ab7eadc573d8d23b3668b90412e65182beea79726c1a1b8cb57f76abc74a\",\"dweb:/ipfs/QmfNe6Uu4S4xMDzMktJnGz92MT6zVENi3Rye2AazUcrLL4\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol\":{\"keccak256\":\"0x70d5951087ad40350876adde9e9d377ccb3f4084c13dbdd144a0a2b362abdd2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f01d5d7a4cd855d532cd5fc739f9da334fe2e4c1a822f35cd3dd70ddf4c4144\",\"dweb:/ipfs/QmZSdw3TJL5FhZrvZqVWJQPcioLqXP9rMHwhYnm6wUpu3U\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol\":{\"keccak256\":\"0x6a6b3d171d65a0cab4d1ae3138171decd1faf234d483a223edf2eb2d300d6561\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://351ad36c433b722057145dcd9c85dc5e2f2df9ec8ea8f17a247d73851c6a5779\",\"dweb:/ipfs/QmfVR9uhTe6KDudsRLFCbBsE1w3aMgnbYBm5eke44bfLFq\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol\":{\"keccak256\":\"0x9f0a6cae20422fc68ffb45dc0bd9f72f443ff704162ab001d7c7d8b0c857f7f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe4db95c1fdc3ce371e763d45066bd554ded70a34758ce0ba56b0f2857cceaaa\",\"dweb:/ipfs/QmPjAApGbRQgsvMaxFYK25KNgzHb9fWew5UV5CkoQfjB2b\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol\":{\"keccak256\":\"0x5e6f331c303495f1dc03cb763902abb1c7b74a4b635c20c35beb6a2e4013ec94\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c258ccd4df96bf251b338e2267c2ff3f25901e0fb71ed47e51ce92c3bbcbea2b\",\"dweb:/ipfs/Qme9CkvWEktE8LjsfYPSNHvpQe782HHTdv2encSof7DFRc\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":{\"keccak256\":\"0xe73d2e5fcc18b9f53cb6795d83a160c34d1219ce5883a7a276cd8d07d5598a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd6f4d728b50fb1ede61a5aed2c86651a810f739180fe10c8ab6f3e11726015\",\"dweb:/ipfs/QmZSQgJUG7wa7NgoH9ZsaFBX188FFSBg3Z4uyj1dbAtGTZ\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol\":{\"keccak256\":\"0x496c5997689ccb7666e020cfabcf3d46b099818f958a7b78ca5f385fc2117f36\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e751bdd6c7b13f5cc68606ef9321291470d7c064ac15b74fdcce75a5b519a039\",\"dweb:/ipfs/QmQ7NpZQQKovhNjeeZ2aYt5mzoxbEgYFJC633PP9BdtHb7\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol\":{\"keccak256\":\"0xa535e9577698627ccb3f4470426c2e4702d236c79305d864d577cf7d1daf748a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a3afe9a2630408a9037b19d088232d3ebacc6d29ed7ef31412557dc4485bb862\",\"dweb:/ipfs/QmbbFmZYJUMraPx3sKzpY4foFpRPTa1MnyHnKLgvxgzdFn\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x3d362ad70a19a0307bc9af2b053c4de85a4e0aacf1eb6b1fb5083873b8a62045\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b141dcb49084bd633c4b95765c57e760deadf484a599e7f8fcbb74a46febe3f\",\"dweb:/ipfs/QmQz9P1bWh8mNQUxz5jdqNqwS226osyCPbQA8DznFspf4f\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\":{\"keccak256\":\"0x283835a4082eb3f0676d86a6549b0d225eaf4ba61aa2fce4008c51f9c1e65e09\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://400f999919366c64b30fbf836d240f9705aac314c3bce76c7b11e779d3b37a47\",\"dweb:/ipfs/QmbtppG2jgqSUEjT197nJ97osNDWnaiiRSv4xWMPgUpJ5X\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfe6da463cd5a6df10b49020a69b0978a4ef65d029e747c515062ec4a3359c464\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203824853ae4896a6216d53aa537a6941c9992d528c9aa4dd385114dac0f169c\",\"dweb:/ipfs/Qmdb6pN9EVQVHFkxfdMoWUKmRMx7BtVzqcXUqGJh8Xotgy\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol\":{\"keccak256\":\"0x8e156f0c3c6fc2ff7b3bde24c11449b8076900c894252bc26e5022f50b03b89c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://60d4b9e132c6ed5cb5e0800b019c93a9d2c635849d17ab6d3c81c62b50d22633\",\"dweb:/ipfs/QmTG9ZofezQrLxiytV2F7apCV2tDw3VkvefnhX3eJ12JJr\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol\":{\"keccak256\":\"0xdb55aadaa2bbcf0c31a73a681b115be07f48cd21824acf3d7df1282e7ede54ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://37a4530bbadbfc953872129f65b7b07b1d3e21d2e790d0701cde279709351a6d\",\"dweb:/ipfs/QmWgHBQzqxr1SfiLjS8tAnsmn6D5oEfcZUTQsQgPP5U1eK\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]},\"contracts/20220322-veBAL-activation/veBALDeploymentCoordinator.sol\":{\"keccak256\":\"0x395ba4d411697056960d28933341e2f4203184294f5570ee00c65f82b520fc3f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e688b3475d84958398c0a2672c5d4858142aa924856a26f7512bf31c751d94d9\",\"dweb:/ipfs/QmYprTjnXyGHrAyEj6KGyHbRrPtedWtwnhRkFzy2wvd5o8\"]}},\"version\":1}"
        }
      },
      "contracts/20220415-veBAL-L2/veBALL2GaugeSetupCoordinator.sol": {
        "ICurrentAuthorizer": {
          "abi": [
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "actionId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "where",
                  "type": "address"
                }
              ],
              "name": "canPerform",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "canPerform(bytes32,address,address)": "9be2a884",
              "grantRole(bytes32,address)": "2f2ff15d",
              "revokeRole(bytes32,address)": "d547741f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The currently deployed Authorizer has a different interface relative to the Authorizer in the monorepo for granting/revoking roles(referred to as permissions in the new Authorizer) and so we require a one-off interface\",\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/20220415-veBAL-L2/veBALL2GaugeSetupCoordinator.sol\":\"ICurrentAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x999b90d074bc14e7f1b5800053a63734855e9d30fcff6017dde0679636dde008\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://63768db76eb190dce7527f1c9bf0ea7c59402ad76e529ab3d7376d60e1823c4f\",\"dweb:/ipfs/QmbnmnSkPh1ukq43k6kHUSqafRznvY5ejoNZcHQT1TJfsh\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol\":{\"keccak256\":\"0x286a4b1cb4a632954e58c68baac671fb0dcbd139c5a353b0419088b0de40477c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b57ab7eadc573d8d23b3668b90412e65182beea79726c1a1b8cb57f76abc74a\",\"dweb:/ipfs/QmfNe6Uu4S4xMDzMktJnGz92MT6zVENi3Rye2AazUcrLL4\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol\":{\"keccak256\":\"0x70d5951087ad40350876adde9e9d377ccb3f4084c13dbdd144a0a2b362abdd2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f01d5d7a4cd855d532cd5fc739f9da334fe2e4c1a822f35cd3dd70ddf4c4144\",\"dweb:/ipfs/QmZSdw3TJL5FhZrvZqVWJQPcioLqXP9rMHwhYnm6wUpu3U\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol\":{\"keccak256\":\"0x6a6b3d171d65a0cab4d1ae3138171decd1faf234d483a223edf2eb2d300d6561\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://351ad36c433b722057145dcd9c85dc5e2f2df9ec8ea8f17a247d73851c6a5779\",\"dweb:/ipfs/QmfVR9uhTe6KDudsRLFCbBsE1w3aMgnbYBm5eke44bfLFq\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol\":{\"keccak256\":\"0x9f0a6cae20422fc68ffb45dc0bd9f72f443ff704162ab001d7c7d8b0c857f7f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe4db95c1fdc3ce371e763d45066bd554ded70a34758ce0ba56b0f2857cceaaa\",\"dweb:/ipfs/QmPjAApGbRQgsvMaxFYK25KNgzHb9fWew5UV5CkoQfjB2b\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol\":{\"keccak256\":\"0x5e6f331c303495f1dc03cb763902abb1c7b74a4b635c20c35beb6a2e4013ec94\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c258ccd4df96bf251b338e2267c2ff3f25901e0fb71ed47e51ce92c3bbcbea2b\",\"dweb:/ipfs/Qme9CkvWEktE8LjsfYPSNHvpQe782HHTdv2encSof7DFRc\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":{\"keccak256\":\"0xe73d2e5fcc18b9f53cb6795d83a160c34d1219ce5883a7a276cd8d07d5598a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd6f4d728b50fb1ede61a5aed2c86651a810f739180fe10c8ab6f3e11726015\",\"dweb:/ipfs/QmZSQgJUG7wa7NgoH9ZsaFBX188FFSBg3Z4uyj1dbAtGTZ\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol\":{\"keccak256\":\"0x496c5997689ccb7666e020cfabcf3d46b099818f958a7b78ca5f385fc2117f36\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e751bdd6c7b13f5cc68606ef9321291470d7c064ac15b74fdcce75a5b519a039\",\"dweb:/ipfs/QmQ7NpZQQKovhNjeeZ2aYt5mzoxbEgYFJC633PP9BdtHb7\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol\":{\"keccak256\":\"0x0fbfdb1443cb651d81d7b2a7bf5d4211f96a3cf2698d83af9653f701e9b10f26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c65076fedf4ab56455d4d94fde8547b6610b71ca16a7cf9ead88ef68ca2262a7\",\"dweb:/ipfs/QmPCo9osP53Ay871mk4sWxuAki7oq4odCtjpY3wpS743cn\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol\":{\"keccak256\":\"0x1e377f8d163d624e24dea8f3c8e38e18e56e8b87e7654dc14efffd53e022e774\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://935d78b37a8e78fc0e06fe818be751a956269ace1597a5b6666c432196f828b3\",\"dweb:/ipfs/Qmee93PLdq43UZczR1nkSXfzimz9smUuiEPSz2GK2YScbR\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol\":{\"keccak256\":\"0xa535e9577698627ccb3f4470426c2e4702d236c79305d864d577cf7d1daf748a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a3afe9a2630408a9037b19d088232d3ebacc6d29ed7ef31412557dc4485bb862\",\"dweb:/ipfs/QmbbFmZYJUMraPx3sKzpY4foFpRPTa1MnyHnKLgvxgzdFn\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x3d362ad70a19a0307bc9af2b053c4de85a4e0aacf1eb6b1fb5083873b8a62045\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b141dcb49084bd633c4b95765c57e760deadf484a599e7f8fcbb74a46febe3f\",\"dweb:/ipfs/QmQz9P1bWh8mNQUxz5jdqNqwS226osyCPbQA8DznFspf4f\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\":{\"keccak256\":\"0x283835a4082eb3f0676d86a6549b0d225eaf4ba61aa2fce4008c51f9c1e65e09\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://400f999919366c64b30fbf836d240f9705aac314c3bce76c7b11e779d3b37a47\",\"dweb:/ipfs/QmbtppG2jgqSUEjT197nJ97osNDWnaiiRSv4xWMPgUpJ5X\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfe6da463cd5a6df10b49020a69b0978a4ef65d029e747c515062ec4a3359c464\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203824853ae4896a6216d53aa537a6941c9992d528c9aa4dd385114dac0f169c\",\"dweb:/ipfs/Qmdb6pN9EVQVHFkxfdMoWUKmRMx7BtVzqcXUqGJh8Xotgy\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol\":{\"keccak256\":\"0x8e156f0c3c6fc2ff7b3bde24c11449b8076900c894252bc26e5022f50b03b89c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://60d4b9e132c6ed5cb5e0800b019c93a9d2c635849d17ab6d3c81c62b50d22633\",\"dweb:/ipfs/QmTG9ZofezQrLxiytV2F7apCV2tDw3VkvefnhX3eJ12JJr\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol\":{\"keccak256\":\"0xdb55aadaa2bbcf0c31a73a681b115be07f48cd21824acf3d7df1282e7ede54ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://37a4530bbadbfc953872129f65b7b07b1d3e21d2e790d0701cde279709351a6d\",\"dweb:/ipfs/QmWgHBQzqxr1SfiLjS8tAnsmn6D5oEfcZUTQsQgPP5U1eK\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]},\"contracts/20220415-veBAL-L2/veBALL2GaugeSetupCoordinator.sol\":{\"keccak256\":\"0x3248b8185f3cc46e9431916b22f860c599c8997829f4898db4f2bdc8189107d3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d02e4ff9699a0fbfb1a0a65a3c46d0adb1ca75c355bc850f30f6cd3290f331e8\",\"dweb:/ipfs/QmcYqvhhhVpdTYJyW93hKEzfhLhDG8yiNPrtY9AXWuTezG\"]}},\"version\":1}"
        },
        "veBALL2GaugeSetupCoordinator": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IAuthorizerAdaptor",
                  "name": "authorizerAdaptor",
                  "type": "address"
                },
                {
                  "internalType": "contract IVotingEscrow",
                  "name": "votingEscrow",
                  "type": "address"
                },
                {
                  "internalType": "contract IGaugeAdder",
                  "name": "gaugeAdder",
                  "type": "address"
                },
                {
                  "internalType": "contract ILiquidityGaugeFactory",
                  "name": "ethereumGaugeFactory",
                  "type": "address"
                },
                {
                  "internalType": "contract ISingleRecipientGaugeFactory",
                  "name": "polygonGaugeFactory",
                  "type": "address"
                },
                {
                  "internalType": "contract ISingleRecipientGaugeFactory",
                  "name": "arbitrumGaugeFactory",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "GAUGE_CHECKPOINTER_MULTISIG",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "firstStageActivationTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAuthorizer",
              "outputs": [
                {
                  "internalType": "contract ICurrentAuthorizer",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAuthorizerAdaptor",
              "outputs": [
                {
                  "internalType": "contract IAuthorizerAdaptor",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentDeploymentStage",
              "outputs": [
                {
                  "internalType": "enum veBALL2GaugeSetupCoordinator.DeploymentStage",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVault",
              "outputs": [
                {
                  "internalType": "contract IVault",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "performFirstStage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "performSecondStage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "secondStageActivationTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH2 0x1A0 PUSH1 0x40 MSTORE PUSH32 0x2F35DA6A02017154367BC4D47BB6C7D06C7533B000000000000000000000000 PUSH2 0x180 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2388 CODESIZE SUB DUP1 PUSH3 0x2388 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xC0 DUP2 LT ISZERO PUSH3 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP8 ADD MLOAD PUSH1 0x1 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP5 MLOAD PUSH4 0x11B2515F PUSH1 0xE3 SHL DUP2 MSTORE SWAP5 MLOAD SWAP8 SWAP9 SWAP6 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP3 PUSH4 0x8D928AF8 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP3 DUP2 SHL DUP3 AND PUSH1 0x80 MSTORE DUP10 DUP2 SHL DUP3 AND PUSH1 0xA0 MSTORE DUP9 SWAP1 SHL AND PUSH1 0xC0 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x2C6F4D6F PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0x58DE9ADE SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x17F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL DUP2 AND PUSH1 0xE0 MSTORE SWAP6 DUP2 SHL DUP7 AND PUSH2 0x100 MSTORE SWAP4 DUP5 SHL DUP6 AND PUSH2 0x120 MSTORE POP SWAP1 DUP3 SHL DUP4 AND PUSH2 0x140 MSTORE SWAP1 SHL AND PUSH2 0x160 MSTORE POP POP PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH1 0x60 SHR PUSH2 0x120 MLOAD PUSH1 0x60 SHR PUSH2 0x140 MLOAD PUSH1 0x60 SHR PUSH2 0x160 MLOAD PUSH1 0x60 SHR PUSH2 0x180 MLOAD PUSH1 0x60 SHR PUSH2 0x20FE PUSH3 0x28A PUSH1 0x0 CODECOPY DUP1 PUSH2 0x359 MSTORE DUP1 PUSH2 0x809 MSTORE POP DUP1 PUSH2 0xFCB MSTORE DUP1 PUSH2 0x1190 MSTORE POP DUP1 PUSH2 0x17B0 MSTORE DUP1 PUSH2 0x1975 MSTORE POP POP DUP1 PUSH2 0x951 MSTORE DUP1 PUSH2 0xA64 MSTORE DUP1 PUSH2 0xDAD MSTORE DUP1 PUSH2 0xE8B MSTORE DUP1 PUSH2 0xF8F MSTORE DUP1 PUSH2 0x11C9 MSTORE DUP1 PUSH2 0x1592 MSTORE DUP1 PUSH2 0x1670 MSTORE DUP1 PUSH2 0x1774 MSTORE DUP1 PUSH2 0x19A4 MSTORE POP POP POP DUP1 PUSH2 0x6A1 MSTORE DUP1 PUSH2 0x752 MSTORE DUP1 PUSH2 0x1B0A MSTORE POP DUP1 PUSH2 0x37D MSTORE POP PUSH2 0x20FE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D928AF8 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xB1E70E80 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB1E70E80 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xB77984E9 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0xE758D36B EQ PUSH2 0x146 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x10D JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x249E6FA EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x1E390389 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x2BD46566 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x7E55AC37 EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0x154 JUMP JUMPDEST PUSH2 0xD2 PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x37B JUMP JUMPDEST PUSH2 0xDC PUSH2 0x39F JUMP JUMPDEST PUSH2 0xD2 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x125 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x135 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x69F JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x175 JUMPI INVALID JUMPDEST EQ PUSH2 0x1E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669727374207374657020616C726561647920706572666F726D656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EB PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x9BE2A88400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0x9BE2A884 SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x300 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420417574686F72697A65722061646D696E000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x308 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x310 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x318 PUSH2 0xBB2 JUMP JUMPDEST TIMESTAMP PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH2 0x355 PUSH2 0x1309 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9 PUSH2 0x37B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x427 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x43A JUMPI INVALID JUMPDEST EQ PUSH2 0x4A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420726561647920666F72207365636F6E64207374616765000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B0 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x9BE2A88400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0x9BE2A884 SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x542 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x5C5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420417574686F72697A65722061646D696E000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5CD PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x5D5 PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xD547741F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP3 PUSH4 0xD547741F SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x2 SWAP1 DUP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 DUP4 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x6D5 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x190 PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E6 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xC2C4C5C100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP5 AND SWAP2 PUSH4 0x2F2FF15D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x873 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x883 PUSH2 0x204E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xA57453737849A4029325DFAB3F6034656644E104 DUP2 MSTORE PUSH20 0xA6468ECA7633246DCB24E5599681767D27D1F978 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x158772F59FE0D3B75805FC11139B46CBC89F70E5 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH2 0x8E5 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x5E45A27300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 PUSH4 0x2F2FF15D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 SWAP3 POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB1F JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E45A273 DUP7 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xAAA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 POP PUSH2 0xA5A SWAP1 POP JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xD547741F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH4 0xD547741F SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBBA PUSH2 0x206C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH20 0xD84D832F47C22CF5413AE4FE2BD9D220FE6E3DC6 DUP2 MSTORE PUSH20 0x7B50775383D3D6F0215A8F290F2C9E2EEBBECEB2 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x7C1028BCDE7CA03ECF6DAAA9CBFA06E931913EAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xA57EABC36A47DAE5F11051C8339385CF95E77235 PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0x37A6FC079CAD790E556BAEDDA879358E076EF1B3 PUSH1 0x80 DUP3 ADD MSTORE PUSH20 0xB556A02642A0F7BE8C79932EFBC915F6E0485147 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x4B1137789FF06406A72BACE67CD15CF6786844CC PUSH1 0xC0 DUP3 ADD MSTORE PUSH20 0xBD65449BABF09BE544D68FC7CCF0CEBE298FB214 PUSH1 0xE0 DUP3 ADD MSTORE PUSH20 0x2246211E715B6567A8F7138180EF61A79678EF46 PUSH2 0x100 DUP3 ADD MSTORE PUSH20 0xF2BBFA122D41FFCF7056441578D108E3C40A7E99 PUSH2 0x120 DUP3 ADD MSTORE PUSH20 0xF081862BF62C24E3C708BDBEDA24ABE6B55E42F7 PUSH2 0x140 DUP3 ADD MSTORE PUSH20 0x28CC04DCD85C4B40C6DAD463C628E98728AE9496 PUSH2 0x160 DUP3 ADD MSTORE PUSH20 0xDC467DB6ABDA75E62F4809F3A4934AE3ACA1C380 PUSH2 0x180 DUP3 ADD MSTORE PUSH20 0xD5CD8328D93BF4BEF9824FD288F32C8F0DA1C551 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xD41 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x6440E97300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xBF2972D500000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH4 0x2F2FF15D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6440E973 PUSH32 0x0 PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1027 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x104A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x105E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xD547741F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP4 POP PUSH4 0xD547741F SWAP3 POP PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP4 POP PUSH4 0x2F2FF15D SWAP3 POP PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1176 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xE SWAP3 POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1275 JUMPI PUSH1 0x0 PUSH2 0x11C5 PUSH32 0x0 DUP9 DUP5 PUSH1 0xE DUP2 LT PUSH2 0x11BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1C4E JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBF2972D5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x1181 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xD547741F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP2 PUSH4 0xD547741F SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x208B JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x260 DUP2 ADD DUP3 MSTORE PUSH20 0xFC855F77CE75BB6A5D650D0C4CC92E460C03E25 DUP2 MSTORE PUSH20 0x4B878E9727B9E91FDAE37CDD85949F4367220187 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x66750473CE1DECBA4EF2576A47FD5FF7BF07C4E2 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0x2AC595007563DF473449005883F1F2BA3036EBEF PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0x3B4D173601F8B36024CD49F7C5859D263385AF34 PUSH1 0x80 DUP3 ADD MSTORE PUSH20 0xDE2F58C43CB222725A96236272C7749E4ABF1A25 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x73CF9C065BFB9ABF76D94787324CFC4F751AC097 PUSH1 0xC0 DUP3 ADD MSTORE PUSH20 0x2845E95D2A4EFCD14CF5D77B9BA732788B96267F PUSH1 0xE0 DUP3 ADD MSTORE PUSH20 0xB061F502D84F00D1B26568888A8F741CBE352C23 PUSH2 0x100 DUP3 ADD MSTORE PUSH20 0xD65F35E750D5FFB63A3B6C7B4E5D4AFE4CA5550D PUSH2 0x120 DUP3 ADD MSTORE PUSH20 0x25A526ADB6925A9F40141567C06430D368232FEE PUSH2 0x140 DUP3 ADD MSTORE PUSH20 0xFD7E9171B4DC9D89E157C2CC9A424CD9C40A034 PUSH2 0x160 DUP3 ADD MSTORE PUSH20 0xBC9F244CF5A774785E726A9157AFE3725D93249B PUSH2 0x180 DUP3 ADD MSTORE PUSH20 0x2CCC518B7B6177C2D44771D6B249F85A5A0CC1D4 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH20 0x64AFDB69C22971B2ED289020F78A47E070CFADBA PUSH2 0x1C0 DUP3 ADD MSTORE PUSH20 0x6F4D27730D5253148D82283E3AD93EAE9264DAA3 PUSH2 0x1E0 DUP3 ADD MSTORE PUSH20 0x6812162860FAC498FB6F03339D39D23B5A264152 PUSH2 0x200 DUP3 ADD MSTORE PUSH20 0x5EA9C37A3ECF0C82900FBBFD064FE29A427C41AB PUSH2 0x220 DUP3 ADD MSTORE PUSH20 0xA95E0B91A3F522DDE42D5B6A4E430E0BFAD0F2F5 PUSH2 0x240 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1526 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x6440E97300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xF87FCFA200000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH4 0x2F2FF15D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x176E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6440E973 PUSH32 0x0 PUSH1 0x3 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x180C JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1843 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xD547741F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP4 POP PUSH4 0xD547741F SWAP3 POP PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP4 POP PUSH4 0x2F2FF15D SWAP3 POP PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x195B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x13 SWAP3 POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1275 JUMPI PUSH1 0x0 PUSH2 0x19A0 PUSH32 0x0 DUP9 DUP5 PUSH1 0x13 DUP2 LT PUSH2 0x11BB JUMPI INVALID JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF87FCFA2 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x1966 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A58 PUSH2 0x20AA JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH20 0x9FB8312CEDFB9B35364FF06311B429A2F4CDF422 DUP2 MSTORE PUSH20 0x3F829A8303455CB36B7BCF3D1BDC18D5F6946AEA PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A9E PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xAB8F094500000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 PUSH4 0x2F2FF15D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SWAP3 POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB1F JUMPI PUSH2 0x1C34 DUP6 DUP3 PUSH1 0x2 DUP2 LT PUSH2 0x1C2A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C13 JUMP JUMPDEST DUP2 PUSH2 0x1C4A JUMPI PUSH2 0x1C4A DUP2 PUSH2 0x1FE1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7D5D0D10 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1D98 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9ED93318 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DA6 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0x24 DUP1 DUP4 ADD DUP5 MSTORE PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAB8F094500000000000000000000000000000000000000000000000000000000 OR DUP2 MSTORE DUP5 MLOAD PUSH32 0x4036176A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP5 DUP3 ADD SWAP5 DUP6 MSTORE SWAP3 DUP2 ADD SWAP6 DUP7 MSTORE DUP5 MLOAD PUSH1 0x44 DUP3 ADD MSTORE DUP5 MLOAD SWAP7 SWAP1 SWAP3 AND SWAP6 PUSH4 0x4036176A SWAP6 DUP9 SWAP6 SWAP5 SWAP4 SWAP1 SWAP3 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP2 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E85 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E6D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1EB2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1F4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1F62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x1F7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FA9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F91 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1FD6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED AND EXTCODEHASH 0x27 0xC2 0xAA 0x4D 0xB2 0x4D PUSH25 0x308D3FBE1A54148FF461F33BA264BA9F905AD166AA9E64736F PUSH13 0x63430007010033000000000000 ",
              "sourceMap": "2406:13059:27:-:0;;;2938:97;;;3263:786;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3263:786:27;;;;;;;;;;;;;;;;;;;;;;;;;2019:1:18;2124:7;:22;;;3575:23:27;:49;;-1:-1:-1;;3575:49:27;;;3650:28;;-1:-1:-1;;;3650:28:27;;;;3263:786;;;;;;;;;;;2124:7:18;;-1:-1:-1;;;;;3650:26:27;;;;;:28;;;;;3263:786;3650:28;;;;;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3650:28:27;-1:-1:-1;;;;;;3688:14:27;;;;;;;;3712:38;;;;;;;3760:28;;;;;;3817:31;;;-1:-1:-1;;;3817:31:27;;;;3650:28;;-1:-1:-1;;;;;;3817:29:27;;;;;:31;;;;;3650:28;;3817:31;;;;;;;;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3817:31:27;-1:-1:-1;;;;;;3798:50:27;;;;;;;;3858:24;;;;;;;3892:44;;;;;;;-1:-1:-1;3946:42:27;;;;;;;3998:44;;;;;-1:-1:-1;;2406:13059:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {
                "2974": [
                  {
                    "length": 32,
                    "start": 893
                  }
                ],
                "2976": [
                  {
                    "length": 32,
                    "start": 1697
                  },
                  {
                    "length": 32,
                    "start": 1874
                  },
                  {
                    "length": 32,
                    "start": 6922
                  }
                ],
                "2982": [
                  {
                    "length": 32,
                    "start": 2385
                  },
                  {
                    "length": 32,
                    "start": 2660
                  },
                  {
                    "length": 32,
                    "start": 3501
                  },
                  {
                    "length": 32,
                    "start": 3723
                  },
                  {
                    "length": 32,
                    "start": 3983
                  },
                  {
                    "length": 32,
                    "start": 4553
                  },
                  {
                    "length": 32,
                    "start": 5522
                  },
                  {
                    "length": 32,
                    "start": 5744
                  },
                  {
                    "length": 32,
                    "start": 6004
                  },
                  {
                    "length": 32,
                    "start": 6564
                  }
                ],
                "2986": [
                  {
                    "length": 32,
                    "start": 6064
                  },
                  {
                    "length": 32,
                    "start": 6517
                  }
                ],
                "2988": [
                  {
                    "length": 32,
                    "start": 4043
                  },
                  {
                    "length": 32,
                    "start": 4496
                  }
                ],
                "2991": [
                  {
                    "length": 32,
                    "start": 857
                  },
                  {
                    "length": 32,
                    "start": 2057
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100a35760003560e01c80638d928af811610076578063b1e70e801161005b578063b1e70e8014610115578063b77984e91461011d578063e758d36b14610146576100a3565b80638d928af814610105578063aaabadc51461010d576100a3565b80630249e6fa146100a85780631e390389146100c25780632bd46566146100ca5780637e55ac37146100d4575b600080fd5b6100b061014e565b60408051918252519081900360200190f35b6100b0610154565b6100d261015a565b005b6100dc610357565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100dc61037b565b6100dc61039f565b6100d261041f565b610125610696565b6040518082600281111561013557fe5b815260200191505060405180910390f35b6100dc61069f565b60025481565b60015481565b6101626106c3565b600060035460ff16600281111561017557fe5b146101e157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4669727374207374657020616c726561647920706572666f726d656400000000604482015290519081900360640190fd5b60006101eb61039f565b604080517f9be2a8840000000000000000000000000000000000000000000000000000000081526000600482018190523060248301526044820152905191925073ffffffffffffffffffffffffffffffffffffffff831691639be2a88491606480820192602092909190829003018186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b505050506040513d602081101561029357600080fd5b505161030057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f7420417574686f72697a65722061646d696e000000000000000000000000604482015290519081900360640190fd5b6103086106dc565b61031061087b565b610318610bb2565b426001908155600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682805b021790555050610355611309565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006103a961037b565b73ffffffffffffffffffffffffffffffffffffffff1663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ee57600080fd5b505afa158015610402573d6000803e3d6000fd5b505050506040513d602081101561041857600080fd5b5051905090565b6104276106c3565b600160035460ff16600281111561043a57fe5b146104a657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4e6f7420726561647920666f72207365636f6e64207374616765000000000000604482015290519081900360640190fd5b60006104b061039f565b604080517f9be2a8840000000000000000000000000000000000000000000000000000000081526000600482018190523060248301526044820152905191925073ffffffffffffffffffffffffffffffffffffffff831691639be2a88491606480820192602092909190829003018186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d602081101561055857600080fd5b50516105c557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f7420417574686f72697a65722061646d696e000000000000000000000000604482015290519081900360640190fd5b6105cd611310565b6105d5611a50565b604080517fd547741f000000000000000000000000000000000000000000000000000000008152600060048201819052306024830152915173ffffffffffffffffffffffffffffffffffffffff84169263d547741f926044808201939182900301818387803b15801561064757600080fd5b505af115801561065b573d6000803e3d6000fd5b50504260029081556003805491935091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183610347565b60035460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000090565b6106d560026000541415610190611c3c565b6002600055565b60006106e661039f565b604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527fc2c4c5c1000000000000000000000000000000000000000000000000000000006004820152905191925060009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b15801561079857600080fd5b505afa1580156107ac573d6000803e3d6000fd5b505050506040513d60208110156107c257600080fd5b5051604080517f2f2ff15d0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166024830152915192935090841691632f2ff15d9160448082019260009290919082900301818387803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050505050565b61088361204e565b506040805160608101825273a57453737849a4029325dfab3f6034656644e104815273a6468eca7633246dcb24e5599681767d27d1f978602082015273158772f59fe0d3b75805fc11139b46cbc89f70e59181019190915260006108e561039f565b604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f5e45a273000000000000000000000000000000000000000000000000000000006004820152905191925060009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b15801561099757600080fd5b505afa1580156109ab573d6000803e3d6000fd5b505050506040513d60208110156109c157600080fd5b5051604080517f2f2ff15d00000000000000000000000000000000000000000000000000000000815260048101839052306024820152905191925073ffffffffffffffffffffffffffffffffffffffff841691632f2ff15d9160448082019260009290919082900301818387803b158015610a3b57600080fd5b505af1158015610a4f573d6000803e3d6000fd5b506003925060009150505b81811015610b1f577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635e45a273868360038110610aaa57fe5b60200201516040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610afb57600080fd5b505af1158015610b0f573d6000803e3d6000fd5b505060019092019150610a5a9050565b50604080517fd547741f00000000000000000000000000000000000000000000000000000000815260048101849052306024820152905173ffffffffffffffffffffffffffffffffffffffff85169163d547741f91604480830192600092919082900301818387803b158015610b9457600080fd5b505af1158015610ba8573d6000803e3d6000fd5b5050505050505050565b610bba61206c565b50604080516101c08101825273d84d832f47c22cf5413ae4fe2bd9d220fe6e3dc68152737b50775383d3d6f0215a8f290f2c9e2eebbeceb26020820152737c1028bcde7ca03ecf6daaa9cbfa06e931913ead9181019190915273a57eabc36a47dae5f11051c8339385cf95e7723560608201527337a6fc079cad790e556baedda879358e076ef1b3608082015273b556a02642a0f7be8c79932efbc915f6e048514760a0820152734b1137789ff06406a72bace67cd15cf6786844cc60c082015273bd65449babf09be544d68fc7ccf0cebe298fb21460e0820152732246211e715b6567a8f7138180ef61a79678ef4661010082015273f2bbfa122d41ffcf7056441578d108e3c40a7e9961012082015273f081862bf62c24e3c708bdbeda24abe6b55e42f76101408201527328cc04dcd85c4b40c6dad463c628e98728ae949661016082015273dc467db6abda75e62f4809f3a4934ae3aca1c38061018082015273d5cd8328d93bf4bef9824fd288f32c8f0da1c5516101a08201526000610d4161039f565b604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f6440e973000000000000000000000000000000000000000000000000000000006004820152905191925060009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b158015610df357600080fd5b505afa158015610e07573d6000803e3d6000fd5b505050506040513d6020811015610e1d57600080fd5b5051604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527fbf2972d5000000000000000000000000000000000000000000000000000000006004820152905191925060009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b158015610ed157600080fd5b505afa158015610ee5573d6000803e3d6000fd5b505050506040513d6020811015610efb57600080fd5b5051604080517f2f2ff15d00000000000000000000000000000000000000000000000000000000815260048101859052306024820152905191925073ffffffffffffffffffffffffffffffffffffffff851691632f2ff15d9160448082019260009290919082900301818387803b158015610f7557600080fd5b505af1158015610f89573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636440e9737f000000000000000000000000000000000000000000000000000000000000000060046040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182600481111561102757fe5b815260200192505050600060405180830381600087803b15801561104a57600080fd5b505af115801561105e573d6000803e3d6000fd5b5050604080517fd547741f00000000000000000000000000000000000000000000000000000000815260048101869052306024820152905173ffffffffffffffffffffffffffffffffffffffff8716935063d547741f9250604480830192600092919082900301818387803b1580156110d657600080fd5b505af11580156110ea573d6000803e3d6000fd5b5050604080517f2f2ff15d00000000000000000000000000000000000000000000000000000000815260048101859052306024820152905173ffffffffffffffffffffffffffffffffffffffff87169350632f2ff15d9250604480830192600092919082900301818387803b15801561116257600080fd5b505af1158015611176573d6000803e3d6000fd5b50600e925060009150505b818110156112755760006111c57f00000000000000000000000000000000000000000000000000000000000000008884600e81106111bb57fe5b6020020151611c4e565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bf2972d5826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561125057600080fd5b505af1158015611264573d6000803e3d6000fd5b505060019093019250611181915050565b50604080517fd547741f00000000000000000000000000000000000000000000000000000000815260048101849052306024820152905173ffffffffffffffffffffffffffffffffffffffff86169163d547741f91604480830192600092919082900301818387803b1580156112ea57600080fd5b505af11580156112fe573d6000803e3d6000fd5b505050505050505050565b6001600055565b61131861208b565b506040805161026081018252730fc855f77ce75bb6a5d650d0c4cc92e460c03e258152734b878e9727b9e91fdae37cdd85949f436722018760208201527366750473ce1decba4ef2576a47fd5ff7bf07c4e291810191909152732ac595007563df473449005883f1f2ba3036ebef6060820152733b4d173601f8b36024cd49f7c5859d263385af34608082015273de2f58c43cb222725a96236272c7749e4abf1a2560a08201527373cf9c065bfb9abf76d94787324cfc4f751ac09760c0820152732845e95d2a4efcd14cf5d77b9ba732788b96267f60e082015273b061f502d84f00d1b26568888a8f741cbe352c2361010082015273d65f35e750d5ffb63a3b6c7b4e5d4afe4ca5550d6101208201527325a526adb6925a9f40141567c06430d368232fee610140820152730fd7e9171b4dc9d89e157c2cc9a424cd9c40a03461016082015273bc9f244cf5a774785e726a9157afe3725d93249b610180820152732ccc518b7b6177c2d44771d6b249f85a5a0cc1d46101a08201527364afdb69c22971b2ed289020f78a47e070cfadba6101c0820152736f4d27730d5253148d82283e3ad93eae9264daa36101e0820152736812162860fac498fb6f03339d39d23b5a264152610200820152735ea9c37a3ecf0c82900fbbfd064fe29a427c41ab61022082015273a95e0b91a3f522dde42d5b6a4e430e0bfad0f2f5610240820152600061152661039f565b604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527f6440e973000000000000000000000000000000000000000000000000000000006004820152905191925060009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b1580156115d857600080fd5b505afa1580156115ec573d6000803e3d6000fd5b505050506040513d602081101561160257600080fd5b5051604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527ff87fcfa2000000000000000000000000000000000000000000000000000000006004820152905191925060009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b1580156116b657600080fd5b505afa1580156116ca573d6000803e3d6000fd5b505050506040513d60208110156116e057600080fd5b5051604080517f2f2ff15d00000000000000000000000000000000000000000000000000000000815260048101859052306024820152905191925073ffffffffffffffffffffffffffffffffffffffff851691632f2ff15d9160448082019260009290919082900301818387803b15801561175a57600080fd5b505af115801561176e573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636440e9737f000000000000000000000000000000000000000000000000000000000000000060036040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182600481111561180c57fe5b815260200192505050600060405180830381600087803b15801561182f57600080fd5b505af1158015611843573d6000803e3d6000fd5b5050604080517fd547741f00000000000000000000000000000000000000000000000000000000815260048101869052306024820152905173ffffffffffffffffffffffffffffffffffffffff8716935063d547741f9250604480830192600092919082900301818387803b1580156118bb57600080fd5b505af11580156118cf573d6000803e3d6000fd5b5050604080517f2f2ff15d00000000000000000000000000000000000000000000000000000000815260048101859052306024820152905173ffffffffffffffffffffffffffffffffffffffff87169350632f2ff15d9250604480830192600092919082900301818387803b15801561194757600080fd5b505af115801561195b573d6000803e3d6000fd5b506013925060009150505b818110156112755760006119a07f00000000000000000000000000000000000000000000000000000000000000008884601381106111bb57fe5b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f87fcfa2826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611a2b57600080fd5b505af1158015611a3f573d6000803e3d6000fd5b505060019093019250611966915050565b611a586120aa565b5060408051808201909152739fb8312cedfb9b35364ff06311b429a2f4cdf4228152733f829a8303455cb36b7bcf3d1bdc18d5f6946aea60208201526000611a9e61039f565b604080517f851c1bb30000000000000000000000000000000000000000000000000000000081527fab8f0945000000000000000000000000000000000000000000000000000000006004820152905191925060009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163851c1bb3916024808301926020929190829003018186803b158015611b5057600080fd5b505afa158015611b64573d6000803e3d6000fd5b505050506040513d6020811015611b7a57600080fd5b5051604080517f2f2ff15d00000000000000000000000000000000000000000000000000000000815260048101839052306024820152905191925073ffffffffffffffffffffffffffffffffffffffff841691632f2ff15d9160448082019260009290919082900301818387803b158015611bf457600080fd5b505af1158015611c08573d6000803e3d6000fd5b506002925060009150505b81811015610b1f57611c34858260028110611c2a57fe5b6020020151611d9e565b600101611c13565b81611c4a57611c4a81611fe1565b5050565b60008273ffffffffffffffffffffffffffffffffffffffff16637d5d0d10836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611cb757600080fd5b505afa158015611ccb573d6000803e3d6000fd5b505050506040513d6020811015611ce157600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff8116611d98578273ffffffffffffffffffffffffffffffffffffffff16639ed93318836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611d6957600080fd5b505af1158015611d7d573d6000803e3d6000fd5b505050506040513d6020811015611d9357600080fd5b505190505b92915050565b611da661069f565b604080516004808252602480830184526020830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fab8f09450000000000000000000000000000000000000000000000000000000017815284517f4036176a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881169482019485529281019586528451604482015284519690921695634036176a9588959493909260649091019180838360005b83811015611e85578181015183820152602001611e6d565b50505050905090810190601f168015611eb25780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015611ed257600080fd5b505af1158015611ee6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526020811015611f2d57600080fd5b8101908080516040519392919084640100000000821115611f4d57600080fd5b908301906020820185811115611f6257600080fd5b8251640100000000811182820188101715611f7c57600080fd5b82525081516020918201929091019080838360005b83811015611fa9578181015183820152602001611f91565b50505050905090810190601f168015611fd65780820380516001836020036101000a031916815260200191505b506040525050505050565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60405180606001604052806003906020820280368337509192915050565b604051806101c00160405280600e906020820280368337509192915050565b6040518061026001604052806013906020820280368337509192915050565b6040518060400160405280600290602082028036833750919291505056fea2646970667358221220ed163f27c2aa4db24d78308d3fbe1a54148ff461f33ba264ba9f905ad166aa9e64736f6c63430007010033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D928AF8 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xB1E70E80 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB1E70E80 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xB77984E9 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0xE758D36B EQ PUSH2 0x146 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x10D JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x249E6FA EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x1E390389 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x2BD46566 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x7E55AC37 EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0x154 JUMP JUMPDEST PUSH2 0xD2 PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x37B JUMP JUMPDEST PUSH2 0xDC PUSH2 0x39F JUMP JUMPDEST PUSH2 0xD2 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x125 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x135 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x69F JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x175 JUMPI INVALID JUMPDEST EQ PUSH2 0x1E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669727374207374657020616C726561647920706572666F726D656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EB PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x9BE2A88400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0x9BE2A884 SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x300 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420417574686F72697A65722061646D696E000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x308 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x310 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x318 PUSH2 0xBB2 JUMP JUMPDEST TIMESTAMP PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH2 0x355 PUSH2 0x1309 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9 PUSH2 0x37B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x427 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x43A JUMPI INVALID JUMPDEST EQ PUSH2 0x4A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420726561647920666F72207365636F6E64207374616765000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B0 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x9BE2A88400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0x9BE2A884 SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x542 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x5C5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420417574686F72697A65722061646D696E000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5CD PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x5D5 PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xD547741F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP3 PUSH4 0xD547741F SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x2 SWAP1 DUP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 DUP4 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x6D5 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x190 PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E6 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xC2C4C5C100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP5 AND SWAP2 PUSH4 0x2F2FF15D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x873 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x883 PUSH2 0x204E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xA57453737849A4029325DFAB3F6034656644E104 DUP2 MSTORE PUSH20 0xA6468ECA7633246DCB24E5599681767D27D1F978 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x158772F59FE0D3B75805FC11139B46CBC89F70E5 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH2 0x8E5 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x5E45A27300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 PUSH4 0x2F2FF15D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 SWAP3 POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB1F JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E45A273 DUP7 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xAAA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 POP PUSH2 0xA5A SWAP1 POP JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xD547741F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH4 0xD547741F SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBBA PUSH2 0x206C JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH20 0xD84D832F47C22CF5413AE4FE2BD9D220FE6E3DC6 DUP2 MSTORE PUSH20 0x7B50775383D3D6F0215A8F290F2C9E2EEBBECEB2 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x7C1028BCDE7CA03ECF6DAAA9CBFA06E931913EAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xA57EABC36A47DAE5F11051C8339385CF95E77235 PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0x37A6FC079CAD790E556BAEDDA879358E076EF1B3 PUSH1 0x80 DUP3 ADD MSTORE PUSH20 0xB556A02642A0F7BE8C79932EFBC915F6E0485147 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x4B1137789FF06406A72BACE67CD15CF6786844CC PUSH1 0xC0 DUP3 ADD MSTORE PUSH20 0xBD65449BABF09BE544D68FC7CCF0CEBE298FB214 PUSH1 0xE0 DUP3 ADD MSTORE PUSH20 0x2246211E715B6567A8F7138180EF61A79678EF46 PUSH2 0x100 DUP3 ADD MSTORE PUSH20 0xF2BBFA122D41FFCF7056441578D108E3C40A7E99 PUSH2 0x120 DUP3 ADD MSTORE PUSH20 0xF081862BF62C24E3C708BDBEDA24ABE6B55E42F7 PUSH2 0x140 DUP3 ADD MSTORE PUSH20 0x28CC04DCD85C4B40C6DAD463C628E98728AE9496 PUSH2 0x160 DUP3 ADD MSTORE PUSH20 0xDC467DB6ABDA75E62F4809F3A4934AE3ACA1C380 PUSH2 0x180 DUP3 ADD MSTORE PUSH20 0xD5CD8328D93BF4BEF9824FD288F32C8F0DA1C551 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xD41 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x6440E97300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xBF2972D500000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH4 0x2F2FF15D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6440E973 PUSH32 0x0 PUSH1 0x4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1027 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x104A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x105E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xD547741F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP4 POP PUSH4 0xD547741F SWAP3 POP PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP4 POP PUSH4 0x2F2FF15D SWAP3 POP PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1176 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xE SWAP3 POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1275 JUMPI PUSH1 0x0 PUSH2 0x11C5 PUSH32 0x0 DUP9 DUP5 PUSH1 0xE DUP2 LT PUSH2 0x11BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1C4E JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBF2972D5 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x1181 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xD547741F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP2 PUSH4 0xD547741F SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x208B JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x260 DUP2 ADD DUP3 MSTORE PUSH20 0xFC855F77CE75BB6A5D650D0C4CC92E460C03E25 DUP2 MSTORE PUSH20 0x4B878E9727B9E91FDAE37CDD85949F4367220187 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x66750473CE1DECBA4EF2576A47FD5FF7BF07C4E2 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0x2AC595007563DF473449005883F1F2BA3036EBEF PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0x3B4D173601F8B36024CD49F7C5859D263385AF34 PUSH1 0x80 DUP3 ADD MSTORE PUSH20 0xDE2F58C43CB222725A96236272C7749E4ABF1A25 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x73CF9C065BFB9ABF76D94787324CFC4F751AC097 PUSH1 0xC0 DUP3 ADD MSTORE PUSH20 0x2845E95D2A4EFCD14CF5D77B9BA732788B96267F PUSH1 0xE0 DUP3 ADD MSTORE PUSH20 0xB061F502D84F00D1B26568888A8F741CBE352C23 PUSH2 0x100 DUP3 ADD MSTORE PUSH20 0xD65F35E750D5FFB63A3B6C7B4E5D4AFE4CA5550D PUSH2 0x120 DUP3 ADD MSTORE PUSH20 0x25A526ADB6925A9F40141567C06430D368232FEE PUSH2 0x140 DUP3 ADD MSTORE PUSH20 0xFD7E9171B4DC9D89E157C2CC9A424CD9C40A034 PUSH2 0x160 DUP3 ADD MSTORE PUSH20 0xBC9F244CF5A774785E726A9157AFE3725D93249B PUSH2 0x180 DUP3 ADD MSTORE PUSH20 0x2CCC518B7B6177C2D44771D6B249F85A5A0CC1D4 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH20 0x64AFDB69C22971B2ED289020F78A47E070CFADBA PUSH2 0x1C0 DUP3 ADD MSTORE PUSH20 0x6F4D27730D5253148D82283E3AD93EAE9264DAA3 PUSH2 0x1E0 DUP3 ADD MSTORE PUSH20 0x6812162860FAC498FB6F03339D39D23B5A264152 PUSH2 0x200 DUP3 ADD MSTORE PUSH20 0x5EA9C37A3ECF0C82900FBBFD064FE29A427C41AB PUSH2 0x220 DUP3 ADD MSTORE PUSH20 0xA95E0B91A3F522DDE42D5B6A4E430E0BFAD0F2F5 PUSH2 0x240 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1526 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x6440E97300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xF87FCFA200000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH4 0x2F2FF15D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x176E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6440E973 PUSH32 0x0 PUSH1 0x3 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x180C JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1843 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xD547741F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP4 POP PUSH4 0xD547741F SWAP3 POP PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP4 POP PUSH4 0x2F2FF15D SWAP3 POP PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x195B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x13 SWAP3 POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1275 JUMPI PUSH1 0x0 PUSH2 0x19A0 PUSH32 0x0 DUP9 DUP5 PUSH1 0x13 DUP2 LT PUSH2 0x11BB JUMPI INVALID JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF87FCFA2 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x1966 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A58 PUSH2 0x20AA JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH20 0x9FB8312CEDFB9B35364FF06311B429A2F4CDF422 DUP2 MSTORE PUSH20 0x3F829A8303455CB36B7BCF3D1BDC18D5F6946AEA PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A9E PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x851C1BB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xAB8F094500000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP2 PUSH4 0x851C1BB3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x2F2FF15D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 PUSH4 0x2F2FF15D SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SWAP3 POP PUSH1 0x0 SWAP2 POP POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB1F JUMPI PUSH2 0x1C34 DUP6 DUP3 PUSH1 0x2 DUP2 LT PUSH2 0x1C2A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C13 JUMP JUMPDEST DUP2 PUSH2 0x1C4A JUMPI PUSH2 0x1C4A DUP2 PUSH2 0x1FE1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7D5D0D10 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1D98 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9ED93318 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DA6 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0x24 DUP1 DUP4 ADD DUP5 MSTORE PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAB8F094500000000000000000000000000000000000000000000000000000000 OR DUP2 MSTORE DUP5 MLOAD PUSH32 0x4036176A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP5 DUP3 ADD SWAP5 DUP6 MSTORE SWAP3 DUP2 ADD SWAP6 DUP7 MSTORE DUP5 MLOAD PUSH1 0x44 DUP3 ADD MSTORE DUP5 MLOAD SWAP7 SWAP1 SWAP3 AND SWAP6 PUSH4 0x4036176A SWAP6 DUP9 SWAP6 SWAP5 SWAP4 SWAP1 SWAP3 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP2 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E85 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E6D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1EB2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1F4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1F62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x1F7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FA9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F91 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1FD6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED AND EXTCODEHASH 0x27 0xC2 0xAA 0x4D 0xB2 0x4D PUSH25 0x308D3FBE1A54148FF461F33BA264BA9F905AD166AA9E64736F PUSH13 0x63430007010033000000000000 ",
              "sourceMap": "2406:13059:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3162:40;;;:::i;:::-;;;;;;;;;;;;;;;;3117:39;;;:::i;4681:994::-;;;:::i;:::-;;2938:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4114:79;;;:::i;4279:145::-;;;:::i;5681:886::-;;;:::i;4551:124::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4430:115;;;:::i;3162:40::-;;;;:::o;3117:39::-;;;;:::o;4681:994::-;2562:20:18;:18;:20::i;:::-;4809:23:27::1;4782;::::0;::::1;;:50;::::0;::::1;;;;;;;4774:91;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4952:29;4984:15;:13;:15::i;:::-;5017:60;::::0;;;;;5047:1:::1;5017:60;::::0;::::1;::::0;;;5059:4:::1;5017:60:::0;;;;;;;;;;4952:47;;-1:-1:-1;5017:21:27::1;::::0;::::1;::::0;::::1;::::0;:60;;;;;::::1;::::0;;;;;;;;;:21;:60;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;5017:60:27;5009:93:::1;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5190:31;:29;:31::i;:::-;5290:23;:21;:23::i;:::-;5404;:21;:23::i;:::-;5585:15;5558:24;:42:::0;;;5610:23:::1;:58:::0;;;::::1;5558:24:::0;;5610:58:::1;;;;;;2592:1:18;2603:19:::0;:17;:19::i;:::-;4681:994:27:o;2938:97::-;;;:::o;4114:79::-;4180:6;4114:79;:::o;4279:145::-;4325:18;4389:10;:8;:10::i;:::-;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4389:26:27;;-1:-1:-1;4279:145:27;:::o;5681:886::-;2562:20:18;:18;:20::i;:::-;5810:32:27::1;5783:23;::::0;::::1;;:59;::::0;::::1;;;;;;;5775:98;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5960:29;5992:15;:13;:15::i;:::-;6025:60;::::0;;;;;6055:1:::1;6025:60;::::0;::::1;::::0;;;6067:4:::1;6025:60:::0;;;;;;;;;;5960:47;;-1:-1:-1;6025:21:27::1;::::0;::::1;::::0;::::1;::::0;:60;;;;;::::1;::::0;;;;;;;;;:21;:60;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;6025:60:27;6017:93:::1;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;6200:22;:20;:22::i;:::-;6297:21;:19;:21::i;:::-;6389:48;::::0;;;;;6419:1:::1;6389:48;::::0;::::1;::::0;;;6431:4:::1;6389:48:::0;;;;;;:21:::1;::::0;::::1;::::0;::::1;::::0;:48;;;;;;;;;;;6419:1;6389:21;:48;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6476:15:27::1;6448:25;:43:::0;;;6501:23:::1;:59:::0;;6448:25;;-1:-1:-1;6501:23:27;-1:-1:-1;6501:59:27;::::1;::::0;6448:25;6501:59:::1;::::0;4551:124;4645:23;;;;4551:124;:::o;4430:115::-;4520:18;4430:115;:::o;2635:271:18:-;2758:48;2062:1;2767:7;;:19;;8528:3:12;2758:8:18;:48::i;:::-;2062:1;2881:7;:18;2635:271::o;6573:300:27:-;6632:29;6664:15;:13;:15::i;:::-;6719:67;;;;;;6750:35;6719:67;;;;;;6632:47;;-1:-1:-1;6689:27:27;;6719:30;:18;:30;;;;:67;;;;;;;;;;;;;;:30;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6719:67:27;6796:70;;;;;;;;;;;;:20;6838:27;6796:70;;;;;;;;6719:67;;-1:-1:-1;6796:20:27;;;;;;:70;;;;;-1:-1:-1;;6796:70:27;;;;;;;;-1:-1:-1;6796:20:27;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6573:300;;:::o;6879:986::-;7028:35;;:::i;:::-;-1:-1:-1;7028:339:27;;;;;;;;7080:42;7028:339;;7153:42;7028:339;;;;7224:42;7028:339;;;;;;;-1:-1:-1;7410:15:27;:13;:15::i;:::-;7466:62;;;;;;7490:37;7466:62;;;;;;7378:47;;-1:-1:-1;7435:28:27;;7466:23;:11;:23;;;;:62;;;;;;;;;;;;;;:23;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7466:62:27;7539:57;;;;;;;;;;;;7590:4;7539:57;;;;;;7466:62;;-1:-1:-1;7539:20:27;;;;;;:57;;;;;-1:-1:-1;;7539:57:27;;;;;;;;-1:-1:-1;7539:20:27;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7630:16:27;;-1:-1:-1;7607:20:27;;-1:-1:-1;;7656:134:27;7680:12;7676:1;:16;7656:134;;;7713:11;:28;;;7765:9;7775:1;7765:12;;;;;;;;;;;7713:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7694:3:27;;;;;-1:-1:-1;7656:134:27;;-1:-1:-1;7656:134:27;;-1:-1:-1;7800:58:27;;;;;;;;;;;;7852:4;7800:58;;;;;;:21;;;;;;:58;;;;;-1:-1:-1;;7800:58:27;;;;;;;-1:-1:-1;7800:21:27;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6879:986;;;;:::o;11112:2732::-;11278:44;;:::i;:::-;-1:-1:-1;11278:1549:27;;;;;;;;11403:42;11278:1549;;11505:42;11278:1549;;;;11607:42;11278:1549;;;;;;;11709:42;11278:1549;;;;11811:42;11278:1549;;;;11913:42;11278:1549;;;;12015:42;11278:1549;;;;12117:42;11278:1549;;;;12219:42;11278:1549;;;;12321:42;11278:1549;;;;12423:42;11278:1549;;;;12525:42;11278:1549;;;;12627:42;11278:1549;;;;12729:42;11278:1549;;;;-1:-1:-1;12870:15:27;:13;:15::i;:::-;12926:61;;;;;;12950:36;12926:61;;;;;;12838:47;;-1:-1:-1;12896:27:27;;12926:23;:11;:23;;;;:61;;;;;;;;;;;;;;:23;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12926:61:27;13028:62;;;;;;13052:37;13028:62;;;;;;12926:61;;-1:-1:-1;12997:28:27;;13028:23;:11;:23;;;;:62;;;;;12926:61;;13028:62;;;;;;;:23;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13028:62:27;13206:56;;;;;;;;;;;;13256:4;13206:56;;;;;;13028:62;;-1:-1:-1;13206:20:27;;;;;;:56;;;;;-1:-1:-1;;13206:56:27;;;;;;;;-1:-1:-1;13206:20:27;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13272:11;:27;;;13300:21;13323:30;13272:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13364:57:27;;;;;;;;;;;;13415:4;13364:57;;;;;;:21;;;;-1:-1:-1;13364:21:27;;-1:-1:-1;13364:57:27;;;;;-1:-1:-1;;13364:57:27;;;;;;;-1:-1:-1;13364:21:27;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13432:57:27;;;;;;;;;;;;13483:4;13432:57;;;;;;:20;;;;-1:-1:-1;13432:20:27;;-1:-1:-1;13432:57:27;;;;;-1:-1:-1;;13432:57:27;;;;;;;-1:-1:-1;13432:20:27;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13534:24:27;;-1:-1:-1;13500:31:27;;-1:-1:-1;;13568:201:27;13592:23;13588:1;:27;13568:201;;;13636:13;13652:57;13665:21;13688:17;13706:1;13688:20;;;;;;;;;;;13652:12;:57::i;:::-;13636:73;;13723:11;:28;;;13752:5;13723:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13617:3:27;;;;;-1:-1:-1;13568:201:27;;-1:-1:-1;;13568:201:27;;-1:-1:-1;13779:58:27;;;;;;;;;;;;13831:4;13779:58;;;;;;:21;;;;;;:58;;;;;-1:-1:-1;;13779:58:27;;;;;;;-1:-1:-1;13779:21:27;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11112:2732;;;;;:::o;2912:208:18:-;2019:1;3091:7;:22;2912:208::o;7871:3235:27:-;8039:44;;:::i;:::-;-1:-1:-1;8039:2059:27;;;;;;;;8164:42;8039:2059;;8266:42;8039:2059;;;;8368:42;8039:2059;;;;;;;8470:42;8039:2059;;;;8572:42;8039:2059;;;;8674:42;8039:2059;;;;8776:42;8039:2059;;;;8878:42;8039:2059;;;;8980:42;8039:2059;;;;9082:42;8039:2059;;;;9184:42;8039:2059;;;;9286:42;8039:2059;;;;9388:42;8039:2059;;;;9490:42;8039:2059;;;;9592:42;8039:2059;;;;9694:42;8039:2059;;;;9796:42;8039:2059;;;;9898:42;8039:2059;;;;10000:42;8039:2059;;;;-1:-1:-1;10141:15:27;:13;:15::i;:::-;10197:61;;;;;;10221:36;10197:61;;;;;;10109:47;;-1:-1:-1;10167:27:27;;10197:23;:11;:23;;;;:61;;;;;;;;;;;;;;:23;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10197:61:27;10298;;;;;;10322:36;10298:61;;;;;;10197;;-1:-1:-1;10268:27:27;;10298:23;:11;:23;;;;:61;;;;;10197;;10298;;;;;;;:23;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10298:61:27;10474:56;;;;;;;;;;;;10524:4;10474:56;;;;;;10298:61;;-1:-1:-1;10474:20:27;;;;;;:56;;;;;-1:-1:-1;;10474:56:27;;;;;;;;-1:-1:-1;10474:20:27;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10540:11;:27;;;10568:20;10590:29;10540:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10630:57:27;;;;;;;;;;;;10681:4;10630:57;;;;;;:21;;;;-1:-1:-1;10630:21:27;;-1:-1:-1;10630:57:27;;;;;-1:-1:-1;;10630:57:27;;;;;;;-1:-1:-1;10630:21:27;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10698:56:27;;;;;;;;;;;;10748:4;10698:56;;;;;;:20;;;;-1:-1:-1;10698:20:27;;-1:-1:-1;10698:56:27;;;;;-1:-1:-1;;10698:56:27;;;;;;;-1:-1:-1;10698:20:27;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10799:24:27;;-1:-1:-1;10765:31:27;;-1:-1:-1;;10833:199:27;10857:23;10853:1;:27;10833:199;;;10901:13;10917:56;10930:20;10952:17;10970:1;10952:20;;;;;;10917:56;10901:72;;10987:11;:27;;;11015:5;10987:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10882:3:27;;;;;-1:-1:-1;10833:199:27;;-1:-1:-1;;10833:199:27;13850:745;13899:42;;:::i;:::-;-1:-1:-1;13899:222:27;;;;;;;;;13958:42;13899:222;;14041:42;13899:222;;;;-1:-1:-1;14164:15:27;:13;:15::i;:::-;14214:66;;;;;;14245:34;14214:66;;;;;;14132:47;;-1:-1:-1;14190:21:27;;14214:30;:18;:30;;;;:66;;;;;;;;;;;;;;:30;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14214:66:27;14291:50;;;;;;;;;;;;14335:4;14291:50;;;;;;14214:66;;-1:-1:-1;14291:20:27;;;;;;:50;;;;;-1:-1:-1;;14291:50:27;;;;;;;;-1:-1:-1;14291:20:27;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14385:23:27;;-1:-1:-1;14352:30:27;;-1:-1:-1;;14418:109:27;14442:22;14438:1;:26;14418:109;;;14485:31;14496:16;14513:1;14496:19;;;;;;;;;;;14485:10;:31::i;:::-;14466:3;;14418:109;;866:101:12;935:9;930:34;;946:18;954:9;946:7;:18::i;:::-;866:101;;:::o;14601:396:27:-;14697:13;14802:7;:25;;;14828:9;14802:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14802:36:27;;-1:-1:-1;14853:19:27;;;14849:142;;14955:7;:14;;;14970:9;14955:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14955:25:27;;-1:-1:-1;14849:142:27;14601:396;;;;:::o;15003:163::-;15056:22;:20;:22::i;:::-;15100:58;;;;;;;;;;;;;;;;;;;;15123:34;15100:58;;;15056:103;;;;;:36;:103;;;;;;;;;;;;;;;;;;;;;;;:36;;;;;;;15093:5;;15100:58;15056:103;;;;;;;;;;15100:58;;15056:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15056:103:27;;;;;;;;;;-1:-1:-1;15056:103:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15003:163;:::o;1074:3172:12:-;3593:66;3588:3;3581:79;;;3799:66;3793:4;3786:80;3941:1;3935:4;3928:15;2999:73;2210:2;2243:18;;;2288;;;2215:4;2284:29;;;3040:1;3036:14;2195:18;;;;3025:26;;;;2336:18;;;;2383;;;2379:29;;;3057:2;3053:17;3021:50;;;;2999:73;2994:3;2990:83;4008:4;4001:26;4234:3;;4224:14;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "GAUGE_CHECKPOINTER_MULTISIG()": "7e55ac37",
              "firstStageActivationTime()": "1e390389",
              "getAuthorizer()": "aaabadc5",
              "getAuthorizerAdaptor()": "e758d36b",
              "getCurrentDeploymentStage()": "b77984e9",
              "getVault()": "8d928af8",
              "performFirstStage()": "2bd46566",
              "performSecondStage()": "b1e70e80",
              "secondStageActivationTime()": "0249e6fa"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IAuthorizerAdaptor\",\"name\":\"authorizerAdaptor\",\"type\":\"address\"},{\"internalType\":\"contract IVotingEscrow\",\"name\":\"votingEscrow\",\"type\":\"address\"},{\"internalType\":\"contract IGaugeAdder\",\"name\":\"gaugeAdder\",\"type\":\"address\"},{\"internalType\":\"contract ILiquidityGaugeFactory\",\"name\":\"ethereumGaugeFactory\",\"type\":\"address\"},{\"internalType\":\"contract ISingleRecipientGaugeFactory\",\"name\":\"polygonGaugeFactory\",\"type\":\"address\"},{\"internalType\":\"contract ISingleRecipientGaugeFactory\",\"name\":\"arbitrumGaugeFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"GAUGE_CHECKPOINTER_MULTISIG\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"firstStageActivationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract ICurrentAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizerAdaptor\",\"outputs\":[{\"internalType\":\"contract IAuthorizerAdaptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDeploymentStage\",\"outputs\":[{\"internalType\":\"enum veBALL2GaugeSetupCoordinator.DeploymentStage\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performFirstStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performSecondStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondStageActivationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAuthorizer()\":{\"notice\":\"Returns the Balancer Vault's current authorizer.\"},\"getVault()\":{\"notice\":\"Returns the Balancer Vault.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/20220415-veBAL-L2/veBALL2GaugeSetupCoordinator.sol\":\"veBALL2GaugeSetupCoordinator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x999b90d074bc14e7f1b5800053a63734855e9d30fcff6017dde0679636dde008\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://63768db76eb190dce7527f1c9bf0ea7c59402ad76e529ab3d7376d60e1823c4f\",\"dweb:/ipfs/QmbnmnSkPh1ukq43k6kHUSqafRznvY5ejoNZcHQT1TJfsh\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol\":{\"keccak256\":\"0x286a4b1cb4a632954e58c68baac671fb0dcbd139c5a353b0419088b0de40477c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b57ab7eadc573d8d23b3668b90412e65182beea79726c1a1b8cb57f76abc74a\",\"dweb:/ipfs/QmfNe6Uu4S4xMDzMktJnGz92MT6zVENi3Rye2AazUcrLL4\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol\":{\"keccak256\":\"0x70d5951087ad40350876adde9e9d377ccb3f4084c13dbdd144a0a2b362abdd2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f01d5d7a4cd855d532cd5fc739f9da334fe2e4c1a822f35cd3dd70ddf4c4144\",\"dweb:/ipfs/QmZSdw3TJL5FhZrvZqVWJQPcioLqXP9rMHwhYnm6wUpu3U\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol\":{\"keccak256\":\"0x6a6b3d171d65a0cab4d1ae3138171decd1faf234d483a223edf2eb2d300d6561\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://351ad36c433b722057145dcd9c85dc5e2f2df9ec8ea8f17a247d73851c6a5779\",\"dweb:/ipfs/QmfVR9uhTe6KDudsRLFCbBsE1w3aMgnbYBm5eke44bfLFq\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol\":{\"keccak256\":\"0x9f0a6cae20422fc68ffb45dc0bd9f72f443ff704162ab001d7c7d8b0c857f7f2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe4db95c1fdc3ce371e763d45066bd554ded70a34758ce0ba56b0f2857cceaaa\",\"dweb:/ipfs/QmPjAApGbRQgsvMaxFYK25KNgzHb9fWew5UV5CkoQfjB2b\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol\":{\"keccak256\":\"0x5e6f331c303495f1dc03cb763902abb1c7b74a4b635c20c35beb6a2e4013ec94\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c258ccd4df96bf251b338e2267c2ff3f25901e0fb71ed47e51ce92c3bbcbea2b\",\"dweb:/ipfs/Qme9CkvWEktE8LjsfYPSNHvpQe782HHTdv2encSof7DFRc\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol\":{\"keccak256\":\"0xe73d2e5fcc18b9f53cb6795d83a160c34d1219ce5883a7a276cd8d07d5598a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd6f4d728b50fb1ede61a5aed2c86651a810f739180fe10c8ab6f3e11726015\",\"dweb:/ipfs/QmZSQgJUG7wa7NgoH9ZsaFBX188FFSBg3Z4uyj1dbAtGTZ\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol\":{\"keccak256\":\"0x496c5997689ccb7666e020cfabcf3d46b099818f958a7b78ca5f385fc2117f36\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e751bdd6c7b13f5cc68606ef9321291470d7c064ac15b74fdcce75a5b519a039\",\"dweb:/ipfs/QmQ7NpZQQKovhNjeeZ2aYt5mzoxbEgYFJC633PP9BdtHb7\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol\":{\"keccak256\":\"0x0fbfdb1443cb651d81d7b2a7bf5d4211f96a3cf2698d83af9653f701e9b10f26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c65076fedf4ab56455d4d94fde8547b6610b71ca16a7cf9ead88ef68ca2262a7\",\"dweb:/ipfs/QmPCo9osP53Ay871mk4sWxuAki7oq4odCtjpY3wpS743cn\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol\":{\"keccak256\":\"0x1e377f8d163d624e24dea8f3c8e38e18e56e8b87e7654dc14efffd53e022e774\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://935d78b37a8e78fc0e06fe818be751a956269ace1597a5b6666c432196f828b3\",\"dweb:/ipfs/Qmee93PLdq43UZczR1nkSXfzimz9smUuiEPSz2GK2YScbR\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol\":{\"keccak256\":\"0xa535e9577698627ccb3f4470426c2e4702d236c79305d864d577cf7d1daf748a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a3afe9a2630408a9037b19d088232d3ebacc6d29ed7ef31412557dc4485bb862\",\"dweb:/ipfs/QmbbFmZYJUMraPx3sKzpY4foFpRPTa1MnyHnKLgvxgzdFn\"]},\"@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x3d362ad70a19a0307bc9af2b053c4de85a4e0aacf1eb6b1fb5083873b8a62045\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b141dcb49084bd633c4b95765c57e760deadf484a599e7f8fcbb74a46febe3f\",\"dweb:/ipfs/QmQz9P1bWh8mNQUxz5jdqNqwS226osyCPbQA8DznFspf4f\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\":{\"keccak256\":\"0x283835a4082eb3f0676d86a6549b0d225eaf4ba61aa2fce4008c51f9c1e65e09\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://400f999919366c64b30fbf836d240f9705aac314c3bce76c7b11e779d3b37a47\",\"dweb:/ipfs/QmbtppG2jgqSUEjT197nJ97osNDWnaiiRSv4xWMPgUpJ5X\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfe6da463cd5a6df10b49020a69b0978a4ef65d029e747c515062ec4a3359c464\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203824853ae4896a6216d53aa537a6941c9992d528c9aa4dd385114dac0f169c\",\"dweb:/ipfs/Qmdb6pN9EVQVHFkxfdMoWUKmRMx7BtVzqcXUqGJh8Xotgy\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol\":{\"keccak256\":\"0x8e156f0c3c6fc2ff7b3bde24c11449b8076900c894252bc26e5022f50b03b89c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://60d4b9e132c6ed5cb5e0800b019c93a9d2c635849d17ab6d3c81c62b50d22633\",\"dweb:/ipfs/QmTG9ZofezQrLxiytV2F7apCV2tDw3VkvefnhX3eJ12JJr\"]},\"@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol\":{\"keccak256\":\"0xdb55aadaa2bbcf0c31a73a681b115be07f48cd21824acf3d7df1282e7ede54ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://37a4530bbadbfc953872129f65b7b07b1d3e21d2e790d0701cde279709351a6d\",\"dweb:/ipfs/QmWgHBQzqxr1SfiLjS8tAnsmn6D5oEfcZUTQsQgPP5U1eK\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x46960ce69ba87ff75db4efa9cbe7a1ac4577bd138713090d20da11102c2ee612\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2c1f1137e1f926f28ddea3b93cdc69064c23ff7168b3fad87f82790e19fb517c\",\"dweb:/ipfs/Qmd3GV9SnTnEXbSqLegKtWgAsYGVuXLgRvAeDHTtZNHjMr\"]},\"contracts/20220415-veBAL-L2/veBALL2GaugeSetupCoordinator.sol\":{\"keccak256\":\"0x3248b8185f3cc46e9431916b22f860c599c8997829f4898db4f2bdc8189107d3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d02e4ff9699a0fbfb1a0a65a3c46d0adb1ca75c355bc850f30f6cd3290f331e8\",\"dweb:/ipfs/QmcYqvhhhVpdTYJyW93hKEzfhLhDG8yiNPrtY9AXWuTezG\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol",
          "exportedSymbols": {
            "IAuthorizerAdaptor": [
              28
            ]
          },
          "id": 29,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:0"
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "file": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 29,
              "sourceUnit": 1939,
              "src": "713:65:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
              "id": 3,
              "nodeType": "ImportDirective",
              "scope": 29,
              "sourceUnit": 1132,
              "src": "779:80:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "IAuthentication",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1131,
                    "src": "893:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthentication_$1131",
                      "typeString": "contract IAuthentication"
                    }
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "893:15:0"
                }
              ],
              "contractDependencies": [
                1131
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 28,
              "linearizedBaseContracts": [
                28,
                1131
              ],
              "name": "IAuthorizerAdaptor",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 6,
                    "nodeType": "StructuredDocumentation",
                    "src": "915:53:0",
                    "text": " @notice Returns the Balancer Vault"
                  },
                  "functionSelector": "8d928af8",
                  "id": 11,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVault",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "990:2:0"
                  },
                  "returnParameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "1016:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$1938",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "IVault",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "1016:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1015:8:0"
                  },
                  "scope": 28,
                  "src": "973:51:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 12,
                    "nodeType": "StructuredDocumentation",
                    "src": "1030:49:0",
                    "text": " @notice Returns the Authorizer"
                  },
                  "functionSelector": "aaabadc5",
                  "id": 17,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAuthorizer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1106:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "1132:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                          "typeString": "contract IAuthorizer"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "IAuthorizer",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1389,
                          "src": "1132:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                            "typeString": "contract IAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1131:13:0"
                  },
                  "scope": 28,
                  "src": "1084:61:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 18,
                    "nodeType": "StructuredDocumentation",
                    "src": "1151:331:0",
                    "text": " @notice Performs an arbitrary function call on a target contract, provided the caller is authorized to do so.\n @param target - Address of the contract to be called\n @param data - Calldata to be sent to the target contract\n @return The bytes encoded return value from the performed function call"
                  },
                  "functionSelector": "4036176a",
                  "id": 27,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "performAction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "1510:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1510:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "1526:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1526:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1509:37:0"
                  },
                  "returnParameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "1573:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1573:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1572:14:0"
                  },
                  "scope": 28,
                  "src": "1487:100:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 29,
              "src": "861:728:0"
            }
          ],
          "src": "688:902:0"
        },
        "id": 0
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol",
          "exportedSymbols": {
            "IBalancerMinter": [
              175
            ]
          },
          "id": 176,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 30,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:1"
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol",
              "file": "./IBalancerTokenAdmin.sol",
              "id": 31,
              "nodeType": "ImportDirective",
              "scope": 176,
              "sourceUnit": 313,
              "src": "713:35:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol",
              "file": "./IGaugeController.sol",
              "id": 32,
              "nodeType": "ImportDirective",
              "scope": 176,
              "sourceUnit": 472,
              "src": "749:32:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 175,
              "linearizedBaseContracts": [
                175
              ],
              "name": "IBalancerMinter",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 40,
                  "name": "Minted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "828:25:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "828:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 36,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "855:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "855:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 38,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "minted",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "870:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "870:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "827:58:1"
                  },
                  "src": "815:71:1"
                },
                {
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "892:79:1",
                    "text": " @notice Returns the address of the Balancer Governance Token"
                  },
                  "functionSelector": "c0039699",
                  "id": 46,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalancerToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1001:2:1"
                  },
                  "returnParameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1027:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "1027:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1026:8:1"
                  },
                  "scope": 175,
                  "src": "976:59:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1041:83:1",
                    "text": " @notice Returns the address of the Balancer Token Admin contract"
                  },
                  "functionSelector": "e6dec36f",
                  "id": 52,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalancerTokenAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1159:2:1"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "1185:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                          "typeString": "contract IBalancerTokenAdmin"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "IBalancerTokenAdmin",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 312,
                          "src": "1185:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                            "typeString": "contract IBalancerTokenAdmin"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1184:21:1"
                  },
                  "scope": 175,
                  "src": "1129:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 53,
                    "nodeType": "StructuredDocumentation",
                    "src": "1212:70:1",
                    "text": " @notice Returns the address of the Gauge Controller"
                  },
                  "functionSelector": "58de9ade",
                  "id": 58,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGaugeController",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1314:2:1"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "1340:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGaugeController_$471",
                          "typeString": "contract IGaugeController"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "IGaugeController",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 471,
                          "src": "1340:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGaugeController_$471",
                            "typeString": "contract IGaugeController"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1339:18:1"
                  },
                  "scope": 175,
                  "src": "1287:71:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1364:162:1",
                    "text": " @notice Mint everything which belongs to `msg.sender` and send to them\n @param gauge `LiquidityGauge` address to get mintable amount from"
                  },
                  "functionSelector": "6a627842",
                  "id": 66,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "1545:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1545:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1544:15:1"
                  },
                  "returnParameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "1578:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1578:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1577:9:1"
                  },
                  "scope": 175,
                  "src": "1531:56:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 67,
                    "nodeType": "StructuredDocumentation",
                    "src": "1593:151:1",
                    "text": " @notice Mint everything which belongs to `msg.sender` across multiple gauges\n @param gauges List of `LiquidityGauge` addresses"
                  },
                  "functionSelector": "397ada21",
                  "id": 75,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mintMany",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "gauges",
                        "nodeType": "VariableDeclaration",
                        "scope": 75,
                        "src": "1767:25:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 68,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1767:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 69,
                          "nodeType": "ArrayTypeName",
                          "src": "1767:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1766:27:1"
                  },
                  "returnParameters": {
                    "id": 74,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 75,
                        "src": "1812:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1812:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1811:9:1"
                  },
                  "scope": 175,
                  "src": "1749:72:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 76,
                    "nodeType": "StructuredDocumentation",
                    "src": "1827:256:1",
                    "text": " @notice Mint tokens for `user`\n @dev Only possible when `msg.sender` has been approved by `user` to mint on their behalf\n @param gauge `LiquidityGauge` address to get mintable amount from\n @param user Address to mint to"
                  },
                  "functionSelector": "7504a15d",
                  "id": 85,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mintFor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 78,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 85,
                        "src": "2105:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 77,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2105:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 80,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 85,
                        "src": "2120:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2120:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2104:29:1"
                  },
                  "returnParameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 85,
                        "src": "2152:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2152:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2151:9:1"
                  },
                  "scope": 175,
                  "src": "2088:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 86,
                    "nodeType": "StructuredDocumentation",
                    "src": "2167:262:1",
                    "text": " @notice Mint tokens for `user` across multiple gauges\n @dev Only possible when `msg.sender` has been approved by `user` to mint on their behalf\n @param gauges List of `LiquidityGauge` addresses\n @param user Address to mint to"
                  },
                  "functionSelector": "3b9f7384",
                  "id": 96,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mintManyFor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 89,
                        "mutability": "mutable",
                        "name": "gauges",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "2455:25:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 87,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2455:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 88,
                          "nodeType": "ArrayTypeName",
                          "src": "2455:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "2482:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2482:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2454:41:1"
                  },
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "2514:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2514:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2513:9:1"
                  },
                  "scope": 175,
                  "src": "2434:89:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 97,
                    "nodeType": "StructuredDocumentation",
                    "src": "2529:84:1",
                    "text": " @notice The total number of tokens minted for `user` from `gauge`"
                  },
                  "functionSelector": "8b752bb0",
                  "id": 106,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "minted",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "2634:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2634:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "2648:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2648:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2633:29:1"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "2686:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2686:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2685:9:1"
                  },
                  "scope": 175,
                  "src": "2618:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 107,
                    "nodeType": "StructuredDocumentation",
                    "src": "2701:81:1",
                    "text": " @notice Whether `minter` is approved to mint tokens for `user`"
                  },
                  "functionSelector": "3c543bc6",
                  "id": 116,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMinterApproval",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "minter",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "2814:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2814:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "2830:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2830:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2813:30:1"
                  },
                  "returnParameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "2867:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2867:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2866:6:1"
                  },
                  "scope": 175,
                  "src": "2787:86:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 117,
                    "nodeType": "StructuredDocumentation",
                    "src": "2879:89:1",
                    "text": " @notice Set whether `minter` is approved to mint tokens on your behalf"
                  },
                  "functionSelector": "0de54ba0",
                  "id": 124,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setMinterApproval",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "minter",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "3000:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "approval",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "3016:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:31:1"
                  },
                  "returnParameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3039:0:1"
                  },
                  "scope": 175,
                  "src": "2973:67:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 125,
                    "nodeType": "StructuredDocumentation",
                    "src": "3046:145:1",
                    "text": " @notice Set whether `minter` is approved to mint tokens on behalf of `user`, who has signed a message authorizing\n them."
                  },
                  "functionSelector": "c6542794",
                  "id": 142,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setMinterApprovalWithSignature",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "minter",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "3245:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3245:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "approval",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "3269:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3269:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "3292:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3292:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "3314:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "3340:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3340:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 137,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "3357:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3357:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "3376:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3376:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3235:156:1"
                  },
                  "returnParameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3400:0:1"
                  },
                  "scope": 175,
                  "src": "3196:205:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 143,
                    "nodeType": "StructuredDocumentation",
                    "src": "3621:81:1",
                    "text": " @notice Whether `minter` is approved to mint tokens for `user`"
                  },
                  "functionSelector": "a0990033",
                  "id": 152,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowed_to_mint_for",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 145,
                        "mutability": "mutable",
                        "name": "minter",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "3736:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 144,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3736:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 147,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "3752:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3752:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3735:30:1"
                  },
                  "returnParameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "3789:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3789:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3788:6:1"
                  },
                  "scope": 175,
                  "src": "3707:88:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 153,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:247:1",
                    "text": " @notice Mint everything which belongs to `msg.sender` across multiple gauges\n @dev This function is not recommended as `mintMany()` is more flexible and gas efficient\n @param gauges List of `LiquidityGauge` addresses"
                  },
                  "functionSelector": "a51e1904",
                  "id": 160,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint_many",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "gauges",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "4072:26:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$8_calldata_ptr",
                          "typeString": "address[8]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 154,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4072:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 156,
                          "length": {
                            "hexValue": "38",
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4080:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "4072:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$8_storage_ptr",
                            "typeString": "address[8]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4071:28:1"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4108:0:1"
                  },
                  "scope": 175,
                  "src": "4053:56:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 161,
                    "nodeType": "StructuredDocumentation",
                    "src": "4115:256:1",
                    "text": " @notice Mint tokens for `user`\n @dev Only possible when `msg.sender` has been approved by `user` to mint on their behalf\n @param gauge `LiquidityGauge` address to get mintable amount from\n @param user Address to mint to"
                  },
                  "functionSelector": "27f18ae3",
                  "id": 168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint_for",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "4394:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4394:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 165,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "4409:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4409:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4393:29:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4431:0:1"
                  },
                  "scope": 175,
                  "src": "4376:56:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "4438:88:1",
                    "text": " @notice Toggle whether `minter` is approved to mint tokens for `user`"
                  },
                  "functionSelector": "dd289d60",
                  "id": 174,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toggle_approve_mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "minter",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "4560:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4560:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4559:16:1"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4584:0:1"
                  },
                  "scope": 175,
                  "src": "4531:54:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 176,
              "src": "783:3804:1"
            }
          ],
          "src": "688:3900:1"
        },
        "id": 1
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol",
          "exportedSymbols": {
            "IBalancerToken": [
              252
            ]
          },
          "id": 253,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 177,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:2"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "id": 178,
              "nodeType": "ImportDirective",
              "scope": 253,
              "sourceUnit": 1262,
              "src": "713:76:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 179,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1261,
                    "src": "819:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1261",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 180,
                  "nodeType": "InheritanceSpecifier",
                  "src": "819:6:2"
                }
              ],
              "contractDependencies": [
                1261
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 252,
              "linearizedBaseContracts": [
                252,
                1261
              ],
              "name": "IBalancerToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "40c10f19",
                  "id": 187,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 182,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 187,
                        "src": "846:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "846:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 184,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 187,
                        "src": "858:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "845:28:2"
                  },
                  "returnParameters": {
                    "id": 186,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "882:0:2"
                  },
                  "scope": 252,
                  "src": "832:51:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ca15c873",
                  "id": 194,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleMemberCount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "role",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "917:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "917:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "916:14:2"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "954:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "954:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "953:9:2"
                  },
                  "scope": 252,
                  "src": "889:74:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9010d07c",
                  "id": 203,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleMember",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 196,
                        "mutability": "mutable",
                        "name": "role",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "992:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 195,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "992:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "1006:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1006:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "991:29:2"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "1044:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1044:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1043:9:2"
                  },
                  "scope": 252,
                  "src": "969:84:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "91d14854",
                  "id": 212,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "role",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "1076:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1076:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "1090:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1090:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1075:31:2"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "1130:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1130:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1129:6:2"
                  },
                  "scope": 252,
                  "src": "1059:77:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "248a9ca3",
                  "id": 219,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "role",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "1164:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1164:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1163:14:2"
                  },
                  "returnParameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "1201:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1201:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1200:9:2"
                  },
                  "scope": 252,
                  "src": "1142:68:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2f2ff15d",
                  "id": 226,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "role",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1235:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "1249:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1249:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1234:31:2"
                  },
                  "returnParameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1274:0:2"
                  },
                  "scope": 252,
                  "src": "1216:59:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d547741f",
                  "id": 233,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "role",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "1301:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1301:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "1315:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1315:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1300:31:2"
                  },
                  "returnParameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1340:0:2"
                  },
                  "scope": 252,
                  "src": "1281:60:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a217fddf",
                  "id": 238,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1427:2:2"
                  },
                  "returnParameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "1453:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1453:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1452:9:2"
                  },
                  "scope": 252,
                  "src": "1400:62:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d5391393",
                  "id": 243,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "MINTER_ROLE",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 239,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1541:2:2"
                  },
                  "returnParameters": {
                    "id": 242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 243,
                        "src": "1567:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:9:2"
                  },
                  "scope": 252,
                  "src": "1521:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7028e2cd",
                  "id": 248,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "SNAPSHOT_ROLE",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1657:2:2"
                  },
                  "returnParameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "1683:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1683:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1682:9:2"
                  },
                  "scope": 252,
                  "src": "1635:57:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9711715a",
                  "id": 251,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "snapshot",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1715:2:2"
                  },
                  "returnParameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1726:0:2"
                  },
                  "scope": 252,
                  "src": "1698:29:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 253,
              "src": "791:938:2"
            }
          ],
          "src": "688:1042:2"
        },
        "id": 2
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol",
          "exportedSymbols": {
            "IBalancerTokenAdmin": [
              312
            ]
          },
          "id": 313,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 254,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:3"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
              "id": 255,
              "nodeType": "ImportDirective",
              "scope": 313,
              "sourceUnit": 1132,
              "src": "713:80:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "file": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "id": 256,
              "nodeType": "ImportDirective",
              "scope": 313,
              "sourceUnit": 1939,
              "src": "794:65:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol",
              "file": "./IBalancerToken.sol",
              "id": 257,
              "nodeType": "ImportDirective",
              "scope": 313,
              "sourceUnit": 253,
              "src": "861:30:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 258,
                    "name": "IAuthentication",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1131,
                    "src": "926:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthentication_$1131",
                      "typeString": "contract IAuthentication"
                    }
                  },
                  "id": 259,
                  "nodeType": "InheritanceSpecifier",
                  "src": "926:15:3"
                }
              ],
              "contractDependencies": [
                1131
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 312,
              "linearizedBaseContracts": [
                312,
                1131
              ],
              "name": "IBalancerTokenAdmin",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "4dbac733",
                  "id": 264,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "INITIAL_RATE",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1012:2:3"
                  },
                  "returnParameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "1038:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1038:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1037:9:3"
                  },
                  "scope": 312,
                  "src": "991:56:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b87b5616",
                  "id": 269,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "RATE_REDUCTION_TIME",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1081:2:3"
                  },
                  "returnParameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 269,
                        "src": "1107:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1107:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1106:9:3"
                  },
                  "scope": 312,
                  "src": "1053:63:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "21609bbf",
                  "id": 274,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "RATE_REDUCTION_COEFFICIENT",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1157:2:3"
                  },
                  "returnParameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 274,
                        "src": "1183:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1183:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1182:9:3"
                  },
                  "scope": 312,
                  "src": "1122:70:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7efad8e0",
                  "id": 279,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "RATE_DENOMINATOR",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1223:2:3"
                  },
                  "returnParameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 279,
                        "src": "1249:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1249:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1248:9:3"
                  },
                  "scope": 312,
                  "src": "1198:60:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 280,
                    "nodeType": "StructuredDocumentation",
                    "src": "1307:79:3",
                    "text": " @notice Returns the address of the Balancer Governance Token"
                  },
                  "functionSelector": "c0039699",
                  "id": 285,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalancerToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1416:2:3"
                  },
                  "returnParameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "1442:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBalancerToken_$252",
                          "typeString": "contract IBalancerToken"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "IBalancerToken",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 252,
                          "src": "1442:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerToken_$252",
                            "typeString": "contract IBalancerToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1441:16:3"
                  },
                  "scope": 312,
                  "src": "1391:67:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 286,
                    "nodeType": "StructuredDocumentation",
                    "src": "1464:54:3",
                    "text": " @notice Returns the Balancer Vault."
                  },
                  "functionSelector": "8d928af8",
                  "id": 291,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVault",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1540:2:3"
                  },
                  "returnParameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 291,
                        "src": "1566:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$1938",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "IVault",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "1566:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:8:3"
                  },
                  "scope": 312,
                  "src": "1523:51:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0f15f4c0",
                  "id": 294,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "activate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 292,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1597:2:3"
                  },
                  "returnParameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1608:0:3"
                  },
                  "scope": 312,
                  "src": "1580:29:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2c4e722e",
                  "id": 299,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1628:2:3"
                  },
                  "returnParameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "1654:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1654:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1653:9:3"
                  },
                  "scope": 312,
                  "src": "1615:48:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a228bced",
                  "id": 304,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "startEpochTimeWrite",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 300,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1697:2:3"
                  },
                  "returnParameters": {
                    "id": 303,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 302,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "1718:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 301,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1718:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1717:9:3"
                  },
                  "scope": 312,
                  "src": "1669:58:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "40c10f19",
                  "id": 311,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 309,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 306,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 311,
                        "src": "1747:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1747:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 311,
                        "src": "1759:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1759:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1746:28:3"
                  },
                  "returnParameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1783:0:3"
                  },
                  "scope": 312,
                  "src": "1733:51:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 313,
              "src": "893:893:3"
            }
          ],
          "src": "688:1099:3"
        },
        "id": 3
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol",
          "exportedSymbols": {
            "IGaugeAdder": [
              403
            ]
          },
          "id": 404,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 314,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:4"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
              "id": 315,
              "nodeType": "ImportDirective",
              "scope": 404,
              "sourceUnit": 1132,
              "src": "713:80:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol",
              "file": "./IAuthorizerAdaptor.sol",
              "id": 316,
              "nodeType": "ImportDirective",
              "scope": 404,
              "sourceUnit": 29,
              "src": "795:34:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol",
              "file": "./IGaugeController.sol",
              "id": 317,
              "nodeType": "ImportDirective",
              "scope": 404,
              "sourceUnit": 472,
              "src": "830:32:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol",
              "file": "./ILiquidityGauge.sol",
              "id": 318,
              "nodeType": "ImportDirective",
              "scope": 404,
              "sourceUnit": 500,
              "src": "863:31:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol",
              "file": "./ILiquidityGaugeFactory.sol",
              "id": 319,
              "nodeType": "ImportDirective",
              "scope": 404,
              "sourceUnit": 520,
              "src": "895:38:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol",
              "file": "./IStakingLiquidityGauge.sol",
              "id": 320,
              "nodeType": "ImportDirective",
              "scope": 404,
              "sourceUnit": 604,
              "src": "934:38:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 321,
                    "name": "IAuthentication",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1131,
                    "src": "999:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthentication_$1131",
                      "typeString": "contract IAuthentication"
                    }
                  },
                  "id": 322,
                  "nodeType": "InheritanceSpecifier",
                  "src": "999:15:4"
                }
              ],
              "contractDependencies": [
                1131
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 403,
              "linearizedBaseContracts": [
                403,
                1131
              ],
              "name": "IGaugeAdder",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IGaugeAdder.GaugeType",
                  "id": 328,
                  "members": [
                    {
                      "id": 323,
                      "name": "LiquidityMiningCommittee",
                      "nodeType": "EnumValue",
                      "src": "1038:24:4"
                    },
                    {
                      "id": 324,
                      "name": "veBAL",
                      "nodeType": "EnumValue",
                      "src": "1064:5:4"
                    },
                    {
                      "id": 325,
                      "name": "Ethereum",
                      "nodeType": "EnumValue",
                      "src": "1071:8:4"
                    },
                    {
                      "id": 326,
                      "name": "Polygon",
                      "nodeType": "EnumValue",
                      "src": "1081:7:4"
                    },
                    {
                      "id": 327,
                      "name": "Arbitrum",
                      "nodeType": "EnumValue",
                      "src": "1090:8:4"
                    }
                  ],
                  "name": "GaugeType",
                  "nodeType": "EnumDefinition",
                  "src": "1021:79:4"
                },
                {
                  "anonymous": false,
                  "id": 334,
                  "name": "GaugeFactoryAdded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "gaugeType",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "1130:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GaugeType_$328",
                          "typeString": "enum IGaugeAdder.GaugeType"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "GaugeType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 328,
                          "src": "1130:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GaugeType_$328",
                            "typeString": "enum IGaugeAdder.GaugeType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 332,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "gaugeFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "1159:35:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                          "typeString": "contract ILiquidityGaugeFactory"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "ILiquidityGaugeFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 519,
                          "src": "1159:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                            "typeString": "contract ILiquidityGaugeFactory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1129:66:4"
                  },
                  "src": "1106:90:4"
                },
                {
                  "documentation": {
                    "id": 335,
                    "nodeType": "StructuredDocumentation",
                    "src": "1202:70:4",
                    "text": " @notice Returns the address of the Gauge Controller"
                  },
                  "functionSelector": "58de9ade",
                  "id": 340,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGaugeController",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1304:2:4"
                  },
                  "returnParameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1330:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGaugeController_$471",
                          "typeString": "contract IGaugeController"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "IGaugeController",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 471,
                          "src": "1330:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGaugeController_$471",
                            "typeString": "contract IGaugeController"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1329:18:4"
                  },
                  "scope": 403,
                  "src": "1277:71:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 341,
                    "nodeType": "StructuredDocumentation",
                    "src": "1354:473:4",
                    "text": " @notice Returns the gauge corresponding to a Balancer pool `pool` on Ethereum mainnet.\n Only returns gauges which have been added to the Gauge Controller.\n @dev Gauge Factories also implement a `getPoolGauge` function which maps pools to gauges which it has deployed.\n This function provides global information by using which gauge has been added to the Gauge Controller\n to represent the canonical gauge for a given pool address."
                  },
                  "functionSelector": "a8ea6875",
                  "id": 348,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPoolGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 348,
                        "src": "1854:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "1854:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1853:13:4"
                  },
                  "returnParameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 348,
                        "src": "1890:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                          "typeString": "contract ILiquidityGauge"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "ILiquidityGauge",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 499,
                          "src": "1890:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                            "typeString": "contract ILiquidityGauge"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1889:17:4"
                  },
                  "scope": 403,
                  "src": "1832:75:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 349,
                    "nodeType": "StructuredDocumentation",
                    "src": "1913:84:4",
                    "text": " @notice Returns the `index`'th factory for gauge type `gaugeType`"
                  },
                  "functionSelector": "52854ed7",
                  "id": 358,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFactoryForGaugeType",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "gaugeType",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "2034:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GaugeType_$328",
                          "typeString": "enum IGaugeAdder.GaugeType"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "GaugeType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 328,
                          "src": "2034:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GaugeType_$328",
                            "typeString": "enum IGaugeAdder.GaugeType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "2055:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2055:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2033:36:4"
                  },
                  "returnParameters": {
                    "id": 357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "2093:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2093:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2092:9:4"
                  },
                  "scope": 403,
                  "src": "2002:100:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 359,
                    "nodeType": "StructuredDocumentation",
                    "src": "2108:85:4",
                    "text": " @notice Returns the number of factories for gauge type `gaugeType`"
                  },
                  "functionSelector": "f3d8b4cf",
                  "id": 366,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFactoryForGaugeTypeCount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 361,
                        "mutability": "mutable",
                        "name": "gaugeType",
                        "nodeType": "VariableDeclaration",
                        "scope": 366,
                        "src": "2235:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GaugeType_$328",
                          "typeString": "enum IGaugeAdder.GaugeType"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "GaugeType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 328,
                          "src": "2235:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GaugeType_$328",
                            "typeString": "enum IGaugeAdder.GaugeType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2234:21:4"
                  },
                  "returnParameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 366,
                        "src": "2279:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2279:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2278:9:4"
                  },
                  "scope": 403,
                  "src": "2198:90:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 367,
                    "nodeType": "StructuredDocumentation",
                    "src": "2294:130:4",
                    "text": " @notice Returns whether `gauge` has been deployed by one of the listed factories for the gauge type `gaugeType`"
                  },
                  "functionSelector": "abfca009",
                  "id": 376,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isGaugeFromValidFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "2462:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2462:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "gaugeType",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "2477:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GaugeType_$328",
                          "typeString": "enum IGaugeAdder.GaugeType"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "GaugeType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 328,
                          "src": "2477:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GaugeType_$328",
                            "typeString": "enum IGaugeAdder.GaugeType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2461:36:4"
                  },
                  "returnParameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "2521:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2521:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2520:6:4"
                  },
                  "scope": 403,
                  "src": "2429:98:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 377,
                    "nodeType": "StructuredDocumentation",
                    "src": "2533:91:4",
                    "text": " @notice Adds a new gauge to the GaugeController for the \"Ethereum\" type."
                  },
                  "functionSelector": "5e45a273",
                  "id": 382,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addEthereumGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "2655:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingLiquidityGauge_$603",
                          "typeString": "contract IStakingLiquidityGauge"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "IStakingLiquidityGauge",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 603,
                          "src": "2655:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStakingLiquidityGauge_$603",
                            "typeString": "contract IStakingLiquidityGauge"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2654:30:4"
                  },
                  "returnParameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2693:0:4"
                  },
                  "scope": 403,
                  "src": "2629:65:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 383,
                    "nodeType": "StructuredDocumentation",
                    "src": "2700:292:4",
                    "text": " @notice Adds a new gauge to the GaugeController for the \"Polygon\" type.\n This function must be called with the address of the *root* gauge which is deployed on Ethereum mainnet.\n It should not be called with the address of the gauge which is deployed on Polygon"
                  },
                  "functionSelector": "f87fcfa2",
                  "id": 388,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addPolygonGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 385,
                        "mutability": "mutable",
                        "name": "rootGauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "3022:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3022:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3021:19:4"
                  },
                  "returnParameters": {
                    "id": 387,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3049:0:4"
                  },
                  "scope": 403,
                  "src": "2997:53:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 389,
                    "nodeType": "StructuredDocumentation",
                    "src": "3056:294:4",
                    "text": " @notice Adds a new gauge to the GaugeController for the \"Arbitrum\" type.\n This function must be called with the address of the *root* gauge which is deployed on Ethereum mainnet.\n It should not be called with the address of the gauge which is deployed on Arbitrum"
                  },
                  "functionSelector": "bf2972d5",
                  "id": 394,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addArbitrumGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "rootGauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "3381:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3381:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3380:19:4"
                  },
                  "returnParameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3408:0:4"
                  },
                  "scope": 403,
                  "src": "3355:54:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 395,
                    "nodeType": "StructuredDocumentation",
                    "src": "3415:110:4",
                    "text": " @notice Adds `factory` as an allowlisted factory contract for gauges with type `gaugeType`."
                  },
                  "functionSelector": "6440e973",
                  "id": 402,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addGaugeFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 400,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 397,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 402,
                        "src": "3555:30:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                          "typeString": "contract ILiquidityGaugeFactory"
                        },
                        "typeName": {
                          "id": 396,
                          "name": "ILiquidityGaugeFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 519,
                          "src": "3555:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                            "typeString": "contract ILiquidityGaugeFactory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 399,
                        "mutability": "mutable",
                        "name": "gaugeType",
                        "nodeType": "VariableDeclaration",
                        "scope": 402,
                        "src": "3587:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GaugeType_$328",
                          "typeString": "enum IGaugeAdder.GaugeType"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "GaugeType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 328,
                          "src": "3587:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GaugeType_$328",
                            "typeString": "enum IGaugeAdder.GaugeType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3554:53:4"
                  },
                  "returnParameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3616:0:4"
                  },
                  "scope": 403,
                  "src": "3530:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 404,
              "src": "974:2645:4"
            }
          ],
          "src": "688:2932:4"
        },
        "id": 4
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol",
          "exportedSymbols": {
            "IGaugeController": [
              471
            ]
          },
          "id": 472,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 405,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:5"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "id": 406,
              "nodeType": "ImportDirective",
              "scope": 472,
              "sourceUnit": 1262,
              "src": "713:76:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol",
              "file": "./IAuthorizerAdaptor.sol",
              "id": 407,
              "nodeType": "ImportDirective",
              "scope": 472,
              "sourceUnit": 29,
              "src": "791:34:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol",
              "file": "./IVotingEscrow.sol",
              "id": 408,
              "nodeType": "ImportDirective",
              "scope": 472,
              "sourceUnit": 674,
              "src": "826:29:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 471,
              "linearizedBaseContracts": [
                471
              ],
              "name": "IGaugeController",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "615e5237",
                  "id": 413,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkpoint_gauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "1094:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1094:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1093:15:5"
                  },
                  "returnParameters": {
                    "id": 412,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1117:0:5"
                  },
                  "scope": 471,
                  "src": "1068:50:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d3078c94",
                  "id": 422,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "gauge_relative_weight",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 422,
                        "src": "1155:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1155:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 422,
                        "src": "1170:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1170:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1154:29:5"
                  },
                  "returnParameters": {
                    "id": 421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 420,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 422,
                        "src": "1202:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 419,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1202:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1201:9:5"
                  },
                  "scope": 471,
                  "src": "1124:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dfe05031",
                  "id": 427,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "voting_escrow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 423,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1239:2:5"
                  },
                  "returnParameters": {
                    "id": 426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 425,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "1265:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotingEscrow_$673",
                          "typeString": "contract IVotingEscrow"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "IVotingEscrow",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 673,
                          "src": "1265:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVotingEscrow_$673",
                            "typeString": "contract IVotingEscrow"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1264:15:5"
                  },
                  "scope": 471,
                  "src": "1217:63:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fc0c546a",
                  "id": 432,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1300:2:5"
                  },
                  "returnParameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 432,
                        "src": "1326:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "1326:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1325:8:5"
                  },
                  "scope": 471,
                  "src": "1286:48:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "92d0d232",
                  "id": 439,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add_type",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 437,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1358:20:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1358:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "weight",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "1380:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1380:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1357:38:5"
                  },
                  "returnParameters": {
                    "id": 438,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1404:0:5"
                  },
                  "scope": 471,
                  "src": "1340:65:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "db1ca260",
                  "id": 446,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "change_type_weight",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 441,
                        "mutability": "mutable",
                        "name": "typeId",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "1439:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1439:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "weight",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "1454:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1454:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1438:31:5"
                  },
                  "returnParameters": {
                    "id": 445,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1478:0:5"
                  },
                  "scope": 471,
                  "src": "1411:68:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3a04f900",
                  "id": 453,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add_gauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "1597:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1597:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "gaugeType",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "1612:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1596:33:5"
                  },
                  "returnParameters": {
                    "id": 452,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:5"
                  },
                  "scope": 471,
                  "src": "1578:61:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9fba03a1",
                  "id": 458,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "n_gauge_types",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 454,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1667:2:5"
                  },
                  "returnParameters": {
                    "id": 457,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 456,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "1693:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 455,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1693:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1692:8:5"
                  },
                  "scope": 471,
                  "src": "1645:56:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3f9095b7",
                  "id": 465,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "gauge_types",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "1728:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1728:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1727:15:5"
                  },
                  "returnParameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "1766:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1766:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1765:8:5"
                  },
                  "scope": 471,
                  "src": "1707:67:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f851a440",
                  "id": 470,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "admin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1794:2:5"
                  },
                  "returnParameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "1820:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                          "typeString": "contract IAuthorizerAdaptor"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "IAuthorizerAdaptor",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 28,
                          "src": "1820:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1819:20:5"
                  },
                  "scope": 471,
                  "src": "1780:60:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 472,
              "src": "1035:807:5"
            }
          ],
          "src": "688:1155:5"
        },
        "id": 5
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol",
          "exportedSymbols": {
            "ILiquidityGauge": [
              499
            ]
          },
          "id": 500,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 473,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 499,
              "linearizedBaseContracts": [
                499
              ],
              "name": "ILiquidityGauge",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "09400707",
                  "id": 480,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "integrate_fraction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 476,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 475,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "951:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 474,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "951:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "950:14:6"
                  },
                  "returnParameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "988:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "988:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "987:9:6"
                  },
                  "scope": 499,
                  "src": "923:74:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4b820093",
                  "id": 487,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "user_checkpoint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 483,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 482,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 487,
                        "src": "1028:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 481,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1028:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1027:14:6"
                  },
                  "returnParameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 487,
                        "src": "1060:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1060:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1059:6:6"
                  },
                  "scope": 499,
                  "src": "1003:63:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9c868ac0",
                  "id": 492,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "is_killed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 488,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1090:2:6"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 490,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 492,
                        "src": "1116:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 489,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1116:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1115:6:6"
                  },
                  "scope": 499,
                  "src": "1072:50:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ab8f0945",
                  "id": 495,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "killGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 493,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1146:2:6"
                  },
                  "returnParameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1157:0:6"
                  },
                  "scope": 499,
                  "src": "1128:30:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d34fb267",
                  "id": 498,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unkillGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 496,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1184:2:6"
                  },
                  "returnParameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1195:0:6"
                  },
                  "scope": 499,
                  "src": "1164:32:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 500,
              "src": "891:307:6"
            }
          ],
          "src": "688:511:6"
        },
        "id": 6
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol",
          "exportedSymbols": {
            "ILiquidityGaugeFactory": [
              519
            ]
          },
          "id": 520,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 501,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:7"
            },
            {
              "id": 502,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "712:33:7"
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol",
              "file": "./ILiquidityGauge.sol",
              "id": 503,
              "nodeType": "ImportDirective",
              "scope": 520,
              "sourceUnit": 500,
              "src": "747:31:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 519,
              "linearizedBaseContracts": [
                519
              ],
              "name": "ILiquidityGaugeFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 504,
                    "nodeType": "StructuredDocumentation",
                    "src": "819:79:7",
                    "text": " @notice Returns true if `gauge` was created by this factory."
                  },
                  "functionSelector": "ce3cc8bd",
                  "id": 511,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isGaugeFromFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "931:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:15:7"
                  },
                  "returnParameters": {
                    "id": 510,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 509,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "969:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 508,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "969:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "968:6:7"
                  },
                  "scope": 519,
                  "src": "903:72:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9ed93318",
                  "id": 518,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "create",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 513,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 518,
                        "src": "997:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 512,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "997:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "996:14:7"
                  },
                  "returnParameters": {
                    "id": 517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 518,
                        "src": "1029:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1029:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1028:9:7"
                  },
                  "scope": 519,
                  "src": "981:57:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 520,
              "src": "780:260:7"
            }
          ],
          "src": "688:353:7"
        },
        "id": 7
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol",
          "exportedSymbols": {
            "ISingleRecipientGaugeFactory": [
              542
            ]
          },
          "id": 543,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 521,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:8"
            },
            {
              "id": 522,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "712:33:8"
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol",
              "file": "./ILiquidityGaugeFactory.sol",
              "id": 523,
              "nodeType": "ImportDirective",
              "scope": 543,
              "sourceUnit": 520,
              "src": "747:38:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 524,
                    "name": "ILiquidityGaugeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 519,
                    "src": "829:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                      "typeString": "contract ILiquidityGaugeFactory"
                    }
                  },
                  "id": 525,
                  "nodeType": "InheritanceSpecifier",
                  "src": "829:22:8"
                }
              ],
              "contractDependencies": [
                519
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 542,
              "linearizedBaseContracts": [
                542,
                519
              ],
              "name": "ISingleRecipientGaugeFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 526,
                    "nodeType": "StructuredDocumentation",
                    "src": "858:78:8",
                    "text": " @notice Returns the gauge which sends funds to `recipient`."
                  },
                  "functionSelector": "7d5d0d10",
                  "id": 533,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRecipientGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 529,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 528,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 533,
                        "src": "968:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 527,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "968:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "967:19:8"
                  },
                  "returnParameters": {
                    "id": 532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 531,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 533,
                        "src": "1010:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                          "typeString": "contract ILiquidityGauge"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "ILiquidityGauge",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 499,
                          "src": "1010:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                            "typeString": "contract ILiquidityGauge"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1009:17:8"
                  },
                  "scope": 542,
                  "src": "941:86:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 534,
                    "nodeType": "StructuredDocumentation",
                    "src": "1033:60:8",
                    "text": " @notice Returns the recipient of `gauge`."
                  },
                  "functionSelector": "fa72ce95",
                  "id": 541,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGaugeRecipient",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "1125:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1125:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1124:15:8"
                  },
                  "returnParameters": {
                    "id": 540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "1163:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1163:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1162:9:8"
                  },
                  "scope": 542,
                  "src": "1098:74:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 543,
              "src": "787:387:8"
            }
          ],
          "src": "688:487:8"
        },
        "id": 8
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol",
          "exportedSymbols": {
            "IStakelessGauge": [
              553
            ]
          },
          "id": 554,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 544,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:9"
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol",
              "file": "./ILiquidityGauge.sol",
              "id": 545,
              "nodeType": "ImportDirective",
              "scope": 554,
              "sourceUnit": 500,
              "src": "713:31:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 546,
                    "name": "ILiquidityGauge",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 499,
                    "src": "775:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                      "typeString": "contract ILiquidityGauge"
                    }
                  },
                  "id": 547,
                  "nodeType": "InheritanceSpecifier",
                  "src": "775:15:9"
                }
              ],
              "contractDependencies": [
                499
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 553,
              "linearizedBaseContracts": [
                553,
                499
              ],
              "name": "IStakelessGauge",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c2c4c5c1",
                  "id": 552,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkpoint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 548,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "816:2:9"
                  },
                  "returnParameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 550,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "845:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "845:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "844:6:9"
                  },
                  "scope": 553,
                  "src": "797:54:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 554,
              "src": "746:107:9"
            }
          ],
          "src": "688:166:9"
        },
        "id": 9
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakingLiquidityGauge.sol",
          "exportedSymbols": {
            "IStakingLiquidityGauge": [
              603
            ]
          },
          "id": 604,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 555,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:10"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "id": 556,
              "nodeType": "ImportDirective",
              "scope": 604,
              "sourceUnit": 1262,
              "src": "713:76:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGauge.sol",
              "file": "./ILiquidityGauge.sol",
              "id": 557,
              "nodeType": "ImportDirective",
              "scope": 604,
              "sourceUnit": 500,
              "src": "791:31:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 558,
                    "name": "ILiquidityGauge",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 499,
                    "src": "1038:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                      "typeString": "contract ILiquidityGauge"
                    }
                  },
                  "id": 559,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1038:15:10"
                },
                {
                  "baseName": {
                    "id": 560,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1261,
                    "src": "1055:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1261",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 561,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1055:6:10"
                }
              ],
              "contractDependencies": [
                499,
                1261
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 603,
              "linearizedBaseContracts": [
                603,
                1261,
                499
              ],
              "name": "IStakingLiquidityGauge",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c4d66de8",
                  "id": 566,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 563,
                        "mutability": "mutable",
                        "name": "lpToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "1088:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 562,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1088:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1087:17:10"
                  },
                  "returnParameters": {
                    "id": 565,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1113:0:10"
                  },
                  "scope": 603,
                  "src": "1068:46:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "82c63066",
                  "id": 571,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lp_token",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 567,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1137:2:10"
                  },
                  "returnParameters": {
                    "id": 570,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 571,
                        "src": "1163:6:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "1163:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1162:8:10"
                  },
                  "scope": 603,
                  "src": "1120:51:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6e553f65",
                  "id": 578,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 576,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 573,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 578,
                        "src": "1194:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 572,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1194:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 578,
                        "src": "1209:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1209:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1193:34:10"
                  },
                  "returnParameters": {
                    "id": 577,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1236:0:10"
                  },
                  "scope": 603,
                  "src": "1177:60:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 583,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 583,
                        "src": "1261:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1261:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1260:15:10"
                  },
                  "returnParameters": {
                    "id": 582,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1284:0:10"
                  },
                  "scope": 603,
                  "src": "1243:42:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "84e9bd7e",
                  "id": 588,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claim_rewards",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 586,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 585,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "1314:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 584,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1314:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1313:14:10"
                  },
                  "returnParameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1336:0:10"
                  },
                  "scope": 603,
                  "src": "1291:46:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e8de0d4d",
                  "id": 595,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add_reward",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "1363:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1363:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 592,
                        "mutability": "mutable",
                        "name": "distributor",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "1384:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1384:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1362:42:10"
                  },
                  "returnParameters": {
                    "id": 594,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1413:0:10"
                  },
                  "scope": 603,
                  "src": "1343:71:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "058a3a24",
                  "id": 602,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "set_reward_distributor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "1452:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1452:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 599,
                        "mutability": "mutable",
                        "name": "distributor",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "1473:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1473:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1451:42:10"
                  },
                  "returnParameters": {
                    "id": 601,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1502:0:10"
                  },
                  "scope": 603,
                  "src": "1420:83:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 604,
              "src": "1002:503:10"
            }
          ],
          "src": "688:818:10"
        },
        "id": 10
      },
      "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IVotingEscrow.sol",
          "exportedSymbols": {
            "IVotingEscrow": [
              673
            ]
          },
          "id": 674,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 605,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:11"
            },
            {
              "id": 606,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "712:33:11"
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol",
              "file": "./IAuthorizerAdaptor.sol",
              "id": 607,
              "nodeType": "ImportDirective",
              "scope": 674,
              "sourceUnit": 29,
              "src": "747:34:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 673,
              "linearizedBaseContracts": [
                673
              ],
              "name": "IVotingEscrow",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IVotingEscrow.Point",
                  "id": 616,
                  "members": [
                    {
                      "constant": false,
                      "id": 609,
                      "mutability": "mutable",
                      "name": "bias",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "1014:11:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      },
                      "typeName": {
                        "id": 608,
                        "name": "int128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1014:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 611,
                      "mutability": "mutable",
                      "name": "slope",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "1035:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      },
                      "typeName": {
                        "id": 610,
                        "name": "int128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1035:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "ts",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "1075:10:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1075:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "blk",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "1095:11:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1095:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Point",
                  "nodeType": "StructDefinition",
                  "scope": 673,
                  "src": "991:131:11",
                  "visibility": "public"
                },
                {
                  "functionSelector": "900cf0cf",
                  "id": 621,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "epoch",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 617,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1142:2:11"
                  },
                  "returnParameters": {
                    "id": 620,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 621,
                        "src": "1168:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1168:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1167:9:11"
                  },
                  "scope": 673,
                  "src": "1128:49:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bd85b039",
                  "id": 628,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 624,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "1204:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1204:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1203:19:11"
                  },
                  "returnParameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "1246:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1246:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1245:9:11"
                  },
                  "scope": 673,
                  "src": "1183:72:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "010ae757",
                  "id": 635,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "user_point_epoch",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 631,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 630,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 635,
                        "src": "1287:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 629,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1287:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1286:14:11"
                  },
                  "returnParameters": {
                    "id": 634,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 633,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 635,
                        "src": "1324:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1324:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1323:9:11"
                  },
                  "scope": 673,
                  "src": "1261:72:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d1febfb9",
                  "id": 642,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "point_history",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 638,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 637,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "1362:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1362:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1361:19:11"
                  },
                  "returnParameters": {
                    "id": 641,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 640,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "1404:12:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Point_$616_memory_ptr",
                          "typeString": "struct IVotingEscrow.Point"
                        },
                        "typeName": {
                          "id": 639,
                          "name": "Point",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 616,
                          "src": "1404:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Point_$616_storage_ptr",
                            "typeString": "struct IVotingEscrow.Point"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1403:14:11"
                  },
                  "scope": 673,
                  "src": "1339:79:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "28d09d47",
                  "id": 651,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "user_point_history",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 647,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "1452:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1452:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 646,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "1466:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 645,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1466:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1451:33:11"
                  },
                  "returnParameters": {
                    "id": 650,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 649,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "1508:12:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Point_$616_memory_ptr",
                          "typeString": "struct IVotingEscrow.Point"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "Point",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 616,
                          "src": "1508:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Point_$616_storage_ptr",
                            "typeString": "struct IVotingEscrow.Point"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1507:14:11"
                  },
                  "scope": 673,
                  "src": "1424:98:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c2c4c5c1",
                  "id": 654,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkpoint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 652,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1547:2:11"
                  },
                  "returnParameters": {
                    "id": 653,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1558:0:11"
                  },
                  "scope": 673,
                  "src": "1528:31:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f851a440",
                  "id": 659,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "admin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 655,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1579:2:11"
                  },
                  "returnParameters": {
                    "id": 658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 659,
                        "src": "1605:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                          "typeString": "contract IAuthorizerAdaptor"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "IAuthorizerAdaptor",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 28,
                          "src": "1605:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1604:20:11"
                  },
                  "scope": 673,
                  "src": "1565:60:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7175d4f7",
                  "id": 664,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "smart_wallet_checker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 660,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1660:2:11"
                  },
                  "returnParameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "1686:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1686:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1685:9:11"
                  },
                  "scope": 673,
                  "src": "1631:64:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "57f901e2",
                  "id": 669,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "commit_smart_wallet_checker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 667,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 666,
                        "mutability": "mutable",
                        "name": "newSmartWalletChecker",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "1738:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 665,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1738:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1737:31:11"
                  },
                  "returnParameters": {
                    "id": 668,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1777:0:11"
                  },
                  "scope": 673,
                  "src": "1701:77:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8e5b490f",
                  "id": 672,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "apply_smart_wallet_checker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1819:2:11"
                  },
                  "returnParameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1830:0:11"
                  },
                  "scope": 673,
                  "src": "1784:47:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 674,
              "src": "961:872:11"
            }
          ],
          "src": "688:1146:11"
        },
        "id": 11
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol",
          "exportedSymbols": {
            "Errors": [
              1120
            ],
            "_require": [
              691
            ],
            "_revert": [
              699
            ]
          },
          "id": 1121,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 675,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:12"
            },
            {
              "body": {
                "id": 690,
                "nodeType": "Block",
                "src": "924:43:12",
                "statements": [
                  {
                    "condition": {
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "934:10:12",
                      "subExpression": {
                        "id": 683,
                        "name": "condition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "935:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 689,
                    "nodeType": "IfStatement",
                    "src": "930:34:12",
                    "trueBody": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 686,
                            "name": "errorCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 680,
                            "src": "954:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 685,
                          "name": "_revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "946:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) pure"
                          }
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "946:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 688,
                      "nodeType": "ExpressionStatement",
                      "src": "946:18:12"
                    }
                  }
                ]
              },
              "documentation": {
                "id": 676,
                "nodeType": "StructuredDocumentation",
                "src": "733:132:12",
                "text": " @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\n supported."
              },
              "id": 691,
              "implemented": true,
              "kind": "freeFunction",
              "modifiers": [],
              "name": "_require",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 681,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 678,
                    "mutability": "mutable",
                    "name": "condition",
                    "nodeType": "VariableDeclaration",
                    "scope": 691,
                    "src": "884:14:12",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 677,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "884:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 680,
                    "mutability": "mutable",
                    "name": "errorCode",
                    "nodeType": "VariableDeclaration",
                    "scope": 691,
                    "src": "900:17:12",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 679,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "900:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "883:35:12"
              },
              "returnParameters": {
                "id": 682,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "924:0:12"
              },
              "scope": 1121,
              "src": "866:101:12",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "body": {
                "id": 698,
                "nodeType": "Block",
                "src": "1115:3131:12",
                "statements": [
                  {
                    "AST": {
                      "nodeType": "YulBlock",
                      "src": "1904:2340:12",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2178:42:12",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "errorCode",
                                    "nodeType": "YulIdentifier",
                                    "src": "2199:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2210:2:12",
                                    "type": "",
                                    "value": "10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "2195:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2195:18:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2215:4:12",
                                "type": "",
                                "value": "0x30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2191:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2191:29:12"
                          },
                          "variables": [
                            {
                              "name": "units",
                              "nodeType": "YulTypedName",
                              "src": "2182:5:12",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2230:31:12",
                          "value": {
                            "arguments": [
                              {
                                "name": "errorCode",
                                "nodeType": "YulIdentifier",
                                "src": "2247:9:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2258:2:12",
                                "type": "",
                                "value": "10"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2243:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2243:18:12"
                          },
                          "variableNames": [
                            {
                              "name": "errorCode",
                              "nodeType": "YulIdentifier",
                              "src": "2230:9:12"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2270:43:12",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "errorCode",
                                    "nodeType": "YulIdentifier",
                                    "src": "2292:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2303:2:12",
                                    "type": "",
                                    "value": "10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "2288:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2288:18:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2308:4:12",
                                "type": "",
                                "value": "0x30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2284:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2284:29:12"
                          },
                          "variables": [
                            {
                              "name": "tenths",
                              "nodeType": "YulTypedName",
                              "src": "2274:6:12",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2323:31:12",
                          "value": {
                            "arguments": [
                              {
                                "name": "errorCode",
                                "nodeType": "YulIdentifier",
                                "src": "2340:9:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2351:2:12",
                                "type": "",
                                "value": "10"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2336:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2336:18:12"
                          },
                          "variableNames": [
                            {
                              "name": "errorCode",
                              "nodeType": "YulIdentifier",
                              "src": "2323:9:12"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2363:45:12",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "errorCode",
                                    "nodeType": "YulIdentifier",
                                    "src": "2387:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2398:2:12",
                                    "type": "",
                                    "value": "10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "2383:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2383:18:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2403:4:12",
                                "type": "",
                                "value": "0x30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2379:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2379:29:12"
                          },
                          "variables": [
                            {
                              "name": "hundreds",
                              "nodeType": "YulTypedName",
                              "src": "2367:8:12",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2970:103:12",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2994:3:12",
                                "type": "",
                                "value": "200"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3003:16:12",
                                    "type": "",
                                    "value": "0x42414c23000000"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "units",
                                            "nodeType": "YulIdentifier",
                                            "src": "3029:5:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3040:1:12",
                                                "type": "",
                                                "value": "8"
                                              },
                                              {
                                                "name": "tenths",
                                                "nodeType": "YulIdentifier",
                                                "src": "3043:6:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "3036:3:12"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3036:14:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3025:3:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3025:26:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3057:2:12",
                                            "type": "",
                                            "value": "16"
                                          },
                                          {
                                            "name": "hundreds",
                                            "nodeType": "YulIdentifier",
                                            "src": "3061:8:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "3053:3:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3053:17:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3021:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3021:50:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2999:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2999:73:12"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2990:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2990:83:12"
                          },
                          "variables": [
                            {
                              "name": "revertReason",
                              "nodeType": "YulTypedName",
                              "src": "2974:12:12",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3588:3:12",
                                "type": "",
                                "value": "0x0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3593:66:12",
                                "type": "",
                                "value": "0x08c379a000000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3581:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3581:79:12"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3581:79:12"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3793:4:12",
                                "type": "",
                                "value": "0x04"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3799:66:12",
                                "type": "",
                                "value": "0x0000000000000000000000000000000000000000000000000000000000000020"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3786:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3786:80:12"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3786:80:12"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3935:4:12",
                                "type": "",
                                "value": "0x24"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3941:1:12",
                                "type": "",
                                "value": "7"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3928:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3928:15:12"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3928:15:12"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4008:4:12",
                                "type": "",
                                "value": "0x44"
                              },
                              {
                                "name": "revertReason",
                                "nodeType": "YulIdentifier",
                                "src": "4014:12:12"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4001:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4001:26:12"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4001:26:12"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4231:1:12",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4234:3:12",
                                "type": "",
                                "value": "100"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "4224:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4224:14:12"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4224:14:12"
                        }
                      ]
                    },
                    "evmVersion": "istanbul",
                    "externalReferences": [
                      {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2199:9:12",
                        "valueSize": 1
                      },
                      {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2230:9:12",
                        "valueSize": 1
                      },
                      {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2247:9:12",
                        "valueSize": 1
                      },
                      {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2292:9:12",
                        "valueSize": 1
                      },
                      {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2323:9:12",
                        "valueSize": 1
                      },
                      {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2340:9:12",
                        "valueSize": 1
                      },
                      {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2387:9:12",
                        "valueSize": 1
                      }
                    ],
                    "id": 697,
                    "nodeType": "InlineAssembly",
                    "src": "1895:2349:12"
                  }
                ]
              },
              "documentation": {
                "id": 692,
                "nodeType": "StructuredDocumentation",
                "src": "969:104:12",
                "text": " @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported."
              },
              "id": 699,
              "implemented": true,
              "kind": "freeFunction",
              "modifiers": [],
              "name": "_revert",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 695,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 694,
                    "mutability": "mutable",
                    "name": "errorCode",
                    "nodeType": "VariableDeclaration",
                    "scope": 699,
                    "src": "1091:17:12",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 693,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1091:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1090:19:12"
              },
              "returnParameters": {
                "id": 696,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1115:0:12"
              },
              "scope": 1121,
              "src": "1074:3172:12",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 1120,
              "linearizedBaseContracts": [
                1120
              ],
              "name": "Errors",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 702,
                  "mutability": "constant",
                  "name": "ADD_OVERFLOW",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4281:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4322:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 705,
                  "mutability": "constant",
                  "name": "SUB_OVERFLOW",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4329:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4329:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4370:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 708,
                  "mutability": "constant",
                  "name": "SUB_UNDERFLOW",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4377:43:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4419:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 711,
                  "mutability": "constant",
                  "name": "MUL_OVERFLOW",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4426:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "33",
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4467:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 714,
                  "mutability": "constant",
                  "name": "ZERO_DIVISION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4474:43:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4474:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "34",
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4516:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "value": "4"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 717,
                  "mutability": "constant",
                  "name": "DIV_INTERNAL",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4523:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4523:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "35",
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4564:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 720,
                  "mutability": "constant",
                  "name": "X_OUT_OF_BOUNDS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4571:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4571:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "36",
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4615:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 723,
                  "mutability": "constant",
                  "name": "Y_OUT_OF_BOUNDS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4622:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4622:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "37",
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4666:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_7_by_1",
                      "typeString": "int_const 7"
                    },
                    "value": "7"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 726,
                  "mutability": "constant",
                  "name": "PRODUCT_OUT_OF_BOUNDS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4673:51:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4673:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "38",
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4723:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 729,
                  "mutability": "constant",
                  "name": "INVALID_EXPONENT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4730:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4730:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "39",
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4775:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_9_by_1",
                      "typeString": "int_const 9"
                    },
                    "value": "9"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 732,
                  "mutability": "constant",
                  "name": "OUT_OF_BOUNDS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4796:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4796:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313030",
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4838:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 735,
                  "mutability": "constant",
                  "name": "UNSORTED_ARRAY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4847:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4847:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313031",
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4890:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_101_by_1",
                      "typeString": "int_const 101"
                    },
                    "value": "101"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 738,
                  "mutability": "constant",
                  "name": "UNSORTED_TOKENS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4899:47:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4899:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313032",
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4943:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_102_by_1",
                      "typeString": "int_const 102"
                    },
                    "value": "102"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 741,
                  "mutability": "constant",
                  "name": "INPUT_LENGTH_MISMATCH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "4952:53:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313033",
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5002:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_103_by_1",
                      "typeString": "int_const 103"
                    },
                    "value": "103"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 744,
                  "mutability": "constant",
                  "name": "ZERO_TOKEN",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5011:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5011:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313034",
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5050:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_104_by_1",
                      "typeString": "int_const 104"
                    },
                    "value": "104"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 747,
                  "mutability": "constant",
                  "name": "MIN_TOKENS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5080:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5080:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323030",
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5119:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200_by_1",
                      "typeString": "int_const 200"
                    },
                    "value": "200"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 750,
                  "mutability": "constant",
                  "name": "MAX_TOKENS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5128:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5128:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323031",
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5167:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_201_by_1",
                      "typeString": "int_const 201"
                    },
                    "value": "201"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 753,
                  "mutability": "constant",
                  "name": "MAX_SWAP_FEE_PERCENTAGE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5176:55:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5176:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323032",
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5228:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_202_by_1",
                      "typeString": "int_const 202"
                    },
                    "value": "202"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 756,
                  "mutability": "constant",
                  "name": "MIN_SWAP_FEE_PERCENTAGE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5237:55:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5237:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323033",
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5289:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_203_by_1",
                      "typeString": "int_const 203"
                    },
                    "value": "203"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 759,
                  "mutability": "constant",
                  "name": "MINIMUM_BPT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5298:43:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5298:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323034",
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5338:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_204_by_1",
                      "typeString": "int_const 204"
                    },
                    "value": "204"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 762,
                  "mutability": "constant",
                  "name": "CALLER_NOT_VAULT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5347:48:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5347:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323035",
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5392:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_205_by_1",
                      "typeString": "int_const 205"
                    },
                    "value": "205"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 765,
                  "mutability": "constant",
                  "name": "UNINITIALIZED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5401:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5401:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323036",
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5443:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_206_by_1",
                      "typeString": "int_const 206"
                    },
                    "value": "206"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 768,
                  "mutability": "constant",
                  "name": "BPT_IN_MAX_AMOUNT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5452:49:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5452:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323037",
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5498:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_207_by_1",
                      "typeString": "int_const 207"
                    },
                    "value": "207"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 771,
                  "mutability": "constant",
                  "name": "BPT_OUT_MIN_AMOUNT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5507:50:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5507:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323038",
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5554:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_208_by_1",
                      "typeString": "int_const 208"
                    },
                    "value": "208"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 774,
                  "mutability": "constant",
                  "name": "EXPIRED_PERMIT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5563:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5563:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323039",
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5606:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_209_by_1",
                      "typeString": "int_const 209"
                    },
                    "value": "209"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 777,
                  "mutability": "constant",
                  "name": "NOT_TWO_TOKENS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5615:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5615:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323130",
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5658:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_210_by_1",
                      "typeString": "int_const 210"
                    },
                    "value": "210"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 780,
                  "mutability": "constant",
                  "name": "DISABLED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5667:40:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5667:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323131",
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5704:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_211_by_1",
                      "typeString": "int_const 211"
                    },
                    "value": "211"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 783,
                  "mutability": "constant",
                  "name": "MIN_AMP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5727:39:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5727:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333030",
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5763:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_300_by_1",
                      "typeString": "int_const 300"
                    },
                    "value": "300"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 786,
                  "mutability": "constant",
                  "name": "MAX_AMP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5772:39:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5772:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333031",
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5808:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_301_by_1",
                      "typeString": "int_const 301"
                    },
                    "value": "301"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 789,
                  "mutability": "constant",
                  "name": "MIN_WEIGHT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5817:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5817:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333032",
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5856:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_302_by_1",
                      "typeString": "int_const 302"
                    },
                    "value": "302"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 792,
                  "mutability": "constant",
                  "name": "MAX_STABLE_TOKENS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5865:49:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5865:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333033",
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5911:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_303_by_1",
                      "typeString": "int_const 303"
                    },
                    "value": "303"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 795,
                  "mutability": "constant",
                  "name": "MAX_IN_RATIO",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5920:44:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5920:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333034",
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5961:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_304_by_1",
                      "typeString": "int_const 304"
                    },
                    "value": "304"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 798,
                  "mutability": "constant",
                  "name": "MAX_OUT_RATIO",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "5970:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5970:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333035",
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6012:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_305_by_1",
                      "typeString": "int_const 305"
                    },
                    "value": "305"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 801,
                  "mutability": "constant",
                  "name": "MIN_BPT_IN_FOR_TOKEN_OUT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6021:56:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6021:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333036",
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6074:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_306_by_1",
                      "typeString": "int_const 306"
                    },
                    "value": "306"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 804,
                  "mutability": "constant",
                  "name": "MAX_OUT_BPT_FOR_TOKEN_IN",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6083:56:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6083:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333037",
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6136:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_307_by_1",
                      "typeString": "int_const 307"
                    },
                    "value": "307"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 807,
                  "mutability": "constant",
                  "name": "NORMALIZED_WEIGHT_INVARIANT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6145:59:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6145:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333038",
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6201:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_308_by_1",
                      "typeString": "int_const 308"
                    },
                    "value": "308"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 810,
                  "mutability": "constant",
                  "name": "INVALID_TOKEN",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6210:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6210:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333039",
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6252:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_309_by_1",
                      "typeString": "int_const 309"
                    },
                    "value": "309"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 813,
                  "mutability": "constant",
                  "name": "UNHANDLED_JOIN_KIND",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6261:51:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6261:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333130",
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6309:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_310_by_1",
                      "typeString": "int_const 310"
                    },
                    "value": "310"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 816,
                  "mutability": "constant",
                  "name": "ZERO_INVARIANT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6318:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6318:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333131",
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6361:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_311_by_1",
                      "typeString": "int_const 311"
                    },
                    "value": "311"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 819,
                  "mutability": "constant",
                  "name": "ORACLE_INVALID_SECONDS_QUERY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6370:60:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6370:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333132",
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6427:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_312_by_1",
                      "typeString": "int_const 312"
                    },
                    "value": "312"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 822,
                  "mutability": "constant",
                  "name": "ORACLE_NOT_INITIALIZED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6436:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6436:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333133",
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6487:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_313_by_1",
                      "typeString": "int_const 313"
                    },
                    "value": "313"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 825,
                  "mutability": "constant",
                  "name": "ORACLE_QUERY_TOO_OLD",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6496:52:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333134",
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6545:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_314_by_1",
                      "typeString": "int_const 314"
                    },
                    "value": "314"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 828,
                  "mutability": "constant",
                  "name": "ORACLE_INVALID_INDEX",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6554:52:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6554:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333135",
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6603:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_315_by_1",
                      "typeString": "int_const 315"
                    },
                    "value": "315"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 831,
                  "mutability": "constant",
                  "name": "ORACLE_BAD_SECS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6612:47:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6612:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333136",
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6656:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_316_by_1",
                      "typeString": "int_const 316"
                    },
                    "value": "316"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 834,
                  "mutability": "constant",
                  "name": "AMP_END_TIME_TOO_CLOSE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6665:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6665:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333137",
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6716:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_317_by_1",
                      "typeString": "int_const 317"
                    },
                    "value": "317"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 837,
                  "mutability": "constant",
                  "name": "AMP_ONGOING_UPDATE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6725:50:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6725:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333138",
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6772:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_318_by_1",
                      "typeString": "int_const 318"
                    },
                    "value": "318"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 840,
                  "mutability": "constant",
                  "name": "AMP_RATE_TOO_HIGH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6781:49:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6781:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333139",
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6827:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_319_by_1",
                      "typeString": "int_const 319"
                    },
                    "value": "319"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 843,
                  "mutability": "constant",
                  "name": "AMP_NO_ONGOING_UPDATE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6836:53:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6836:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333230",
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6886:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_320_by_1",
                      "typeString": "int_const 320"
                    },
                    "value": "320"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 846,
                  "mutability": "constant",
                  "name": "STABLE_INVARIANT_DIDNT_CONVERGE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6895:63:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6895:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333231",
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6955:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_321_by_1",
                      "typeString": "int_const 321"
                    },
                    "value": "321"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 849,
                  "mutability": "constant",
                  "name": "STABLE_GET_BALANCE_DIDNT_CONVERGE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "6964:65:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6964:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333232",
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7026:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_322_by_1",
                      "typeString": "int_const 322"
                    },
                    "value": "322"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 852,
                  "mutability": "constant",
                  "name": "RELAYER_NOT_CONTRACT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7035:52:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7035:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333233",
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7084:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_323_by_1",
                      "typeString": "int_const 323"
                    },
                    "value": "323"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 855,
                  "mutability": "constant",
                  "name": "BASE_POOL_RELAYER_NOT_CALLED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7093:60:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7093:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333234",
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7150:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_324_by_1",
                      "typeString": "int_const 324"
                    },
                    "value": "324"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 858,
                  "mutability": "constant",
                  "name": "REBALANCING_RELAYER_REENTERED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7159:61:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7159:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333235",
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7217:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_325_by_1",
                      "typeString": "int_const 325"
                    },
                    "value": "325"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 861,
                  "mutability": "constant",
                  "name": "GRADUAL_UPDATE_TIME_TRAVEL",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7226:58:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7226:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333236",
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7281:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_326_by_1",
                      "typeString": "int_const 326"
                    },
                    "value": "326"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 864,
                  "mutability": "constant",
                  "name": "SWAPS_DISABLED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7290:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7290:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333237",
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7333:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_327_by_1",
                      "typeString": "int_const 327"
                    },
                    "value": "327"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 867,
                  "mutability": "constant",
                  "name": "CALLER_IS_NOT_LBP_OWNER",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7342:55:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7342:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333238",
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7394:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_328_by_1",
                      "typeString": "int_const 328"
                    },
                    "value": "328"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 870,
                  "mutability": "constant",
                  "name": "PRICE_RATE_OVERFLOW",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7403:51:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7403:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333239",
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7451:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_329_by_1",
                      "typeString": "int_const 329"
                    },
                    "value": "329"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 873,
                  "mutability": "constant",
                  "name": "INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7460:75:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7460:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333330",
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7532:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_330_by_1",
                      "typeString": "int_const 330"
                    },
                    "value": "330"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 876,
                  "mutability": "constant",
                  "name": "WEIGHT_CHANGE_TOO_FAST",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7541:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7541:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333331",
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7592:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_331_by_1",
                      "typeString": "int_const 331"
                    },
                    "value": "331"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 879,
                  "mutability": "constant",
                  "name": "LOWER_GREATER_THAN_UPPER_TARGET",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7601:63:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7601:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333332",
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7661:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_332_by_1",
                      "typeString": "int_const 332"
                    },
                    "value": "332"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 882,
                  "mutability": "constant",
                  "name": "UPPER_TARGET_TOO_HIGH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7670:53:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7670:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333333",
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7720:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_333_by_1",
                      "typeString": "int_const 333"
                    },
                    "value": "333"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 885,
                  "mutability": "constant",
                  "name": "UNHANDLED_BY_LINEAR_POOL",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7729:56:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7729:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333334",
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7782:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_334_by_1",
                      "typeString": "int_const 334"
                    },
                    "value": "334"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 888,
                  "mutability": "constant",
                  "name": "OUT_OF_TARGET_RANGE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7791:51:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7791:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333335",
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7839:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_335_by_1",
                      "typeString": "int_const 335"
                    },
                    "value": "335"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 891,
                  "mutability": "constant",
                  "name": "UNHANDLED_EXIT_KIND",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7848:51:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7848:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333336",
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7896:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_336_by_1",
                      "typeString": "int_const 336"
                    },
                    "value": "336"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 894,
                  "mutability": "constant",
                  "name": "UNAUTHORIZED_EXIT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7905:49:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7905:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333337",
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7951:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_337_by_1",
                      "typeString": "int_const 337"
                    },
                    "value": "337"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 897,
                  "mutability": "constant",
                  "name": "MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "7960:66:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7960:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333338",
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8023:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_338_by_1",
                      "typeString": "int_const 338"
                    },
                    "value": "338"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 900,
                  "mutability": "constant",
                  "name": "UNHANDLED_BY_MANAGED_POOL",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8032:57:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8032:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333339",
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8086:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_339_by_1",
                      "typeString": "int_const 339"
                    },
                    "value": "339"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 903,
                  "mutability": "constant",
                  "name": "UNHANDLED_BY_PHANTOM_POOL",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8095:57:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8095:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333430",
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8149:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_340_by_1",
                      "typeString": "int_const 340"
                    },
                    "value": "340"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 906,
                  "mutability": "constant",
                  "name": "TOKEN_DOES_NOT_HAVE_RATE_PROVIDER",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8158:65:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8158:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333431",
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8220:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_341_by_1",
                      "typeString": "int_const 341"
                    },
                    "value": "341"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 909,
                  "mutability": "constant",
                  "name": "INVALID_INITIALIZATION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8229:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8229:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333432",
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8280:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_342_by_1",
                      "typeString": "int_const 342"
                    },
                    "value": "342"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 912,
                  "mutability": "constant",
                  "name": "OUT_OF_NEW_TARGET_RANGE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8289:55:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8289:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333433",
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8341:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_343_by_1",
                      "typeString": "int_const 343"
                    },
                    "value": "343"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 915,
                  "mutability": "constant",
                  "name": "UNAUTHORIZED_OPERATION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8350:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8350:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333434",
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8401:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_344_by_1",
                      "typeString": "int_const 344"
                    },
                    "value": "344"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 918,
                  "mutability": "constant",
                  "name": "UNINITIALIZED_POOL_CONTROLLER",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8410:61:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8410:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "333435",
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8468:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_345_by_1",
                      "typeString": "int_const 345"
                    },
                    "value": "345"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 921,
                  "mutability": "constant",
                  "name": "REENTRANCY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8489:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8489:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343030",
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8528:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_400_by_1",
                      "typeString": "int_const 400"
                    },
                    "value": "400"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 924,
                  "mutability": "constant",
                  "name": "SENDER_NOT_ALLOWED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8537:50:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8537:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343031",
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8584:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_401_by_1",
                      "typeString": "int_const 401"
                    },
                    "value": "401"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 927,
                  "mutability": "constant",
                  "name": "PAUSED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8593:38:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8593:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343032",
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8628:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_402_by_1",
                      "typeString": "int_const 402"
                    },
                    "value": "402"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 930,
                  "mutability": "constant",
                  "name": "PAUSE_WINDOW_EXPIRED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8637:52:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8637:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343033",
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8686:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_403_by_1",
                      "typeString": "int_const 403"
                    },
                    "value": "403"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 933,
                  "mutability": "constant",
                  "name": "MAX_PAUSE_WINDOW_DURATION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8695:57:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8695:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343034",
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8749:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_404_by_1",
                      "typeString": "int_const 404"
                    },
                    "value": "404"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 936,
                  "mutability": "constant",
                  "name": "MAX_BUFFER_PERIOD_DURATION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8758:58:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8758:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343035",
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8813:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_405_by_1",
                      "typeString": "int_const 405"
                    },
                    "value": "405"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 939,
                  "mutability": "constant",
                  "name": "INSUFFICIENT_BALANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8822:52:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8822:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343036",
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8871:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_406_by_1",
                      "typeString": "int_const 406"
                    },
                    "value": "406"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 942,
                  "mutability": "constant",
                  "name": "INSUFFICIENT_ALLOWANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8880:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8880:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343037",
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8931:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_407_by_1",
                      "typeString": "int_const 407"
                    },
                    "value": "407"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 945,
                  "mutability": "constant",
                  "name": "ERC20_TRANSFER_FROM_ZERO_ADDRESS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "8940:64:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8940:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343038",
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9001:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_408_by_1",
                      "typeString": "int_const 408"
                    },
                    "value": "408"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 948,
                  "mutability": "constant",
                  "name": "ERC20_TRANSFER_TO_ZERO_ADDRESS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9010:62:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9010:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343039",
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9069:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_409_by_1",
                      "typeString": "int_const 409"
                    },
                    "value": "409"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 951,
                  "mutability": "constant",
                  "name": "ERC20_MINT_TO_ZERO_ADDRESS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9078:58:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9078:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343130",
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9133:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_410_by_1",
                      "typeString": "int_const 410"
                    },
                    "value": "410"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 954,
                  "mutability": "constant",
                  "name": "ERC20_BURN_FROM_ZERO_ADDRESS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9142:60:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9142:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343131",
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9199:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_411_by_1",
                      "typeString": "int_const 411"
                    },
                    "value": "411"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 957,
                  "mutability": "constant",
                  "name": "ERC20_APPROVE_FROM_ZERO_ADDRESS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9208:63:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9208:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343132",
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9268:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_412_by_1",
                      "typeString": "int_const 412"
                    },
                    "value": "412"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 960,
                  "mutability": "constant",
                  "name": "ERC20_APPROVE_TO_ZERO_ADDRESS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9277:61:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9277:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343133",
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9335:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_413_by_1",
                      "typeString": "int_const 413"
                    },
                    "value": "413"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 963,
                  "mutability": "constant",
                  "name": "ERC20_TRANSFER_EXCEEDS_ALLOWANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9344:64:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9344:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343134",
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9405:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_414_by_1",
                      "typeString": "int_const 414"
                    },
                    "value": "414"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 966,
                  "mutability": "constant",
                  "name": "ERC20_DECREASED_ALLOWANCE_BELOW_ZERO",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9414:68:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9414:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343135",
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9479:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_415_by_1",
                      "typeString": "int_const 415"
                    },
                    "value": "415"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 969,
                  "mutability": "constant",
                  "name": "ERC20_TRANSFER_EXCEEDS_BALANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9488:62:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9488:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343136",
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9547:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_416_by_1",
                      "typeString": "int_const 416"
                    },
                    "value": "416"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 972,
                  "mutability": "constant",
                  "name": "ERC20_BURN_EXCEEDS_ALLOWANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9556:60:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9556:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343137",
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9613:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_417_by_1",
                      "typeString": "int_const 417"
                    },
                    "value": "417"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 975,
                  "mutability": "constant",
                  "name": "SAFE_ERC20_CALL_FAILED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9622:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9622:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343138",
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9673:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_418_by_1",
                      "typeString": "int_const 418"
                    },
                    "value": "418"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 978,
                  "mutability": "constant",
                  "name": "ADDRESS_INSUFFICIENT_BALANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9682:60:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9682:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343139",
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9739:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_419_by_1",
                      "typeString": "int_const 419"
                    },
                    "value": "419"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 981,
                  "mutability": "constant",
                  "name": "ADDRESS_CANNOT_SEND_VALUE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9748:57:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9748:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343230",
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9802:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_420_by_1",
                      "typeString": "int_const 420"
                    },
                    "value": "420"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 984,
                  "mutability": "constant",
                  "name": "SAFE_CAST_VALUE_CANT_FIT_INT256",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9811:63:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9811:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343231",
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9871:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_421_by_1",
                      "typeString": "int_const 421"
                    },
                    "value": "421"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 987,
                  "mutability": "constant",
                  "name": "GRANT_SENDER_NOT_ADMIN",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9880:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9880:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343232",
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9931:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_422_by_1",
                      "typeString": "int_const 422"
                    },
                    "value": "422"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 990,
                  "mutability": "constant",
                  "name": "REVOKE_SENDER_NOT_ADMIN",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "9940:55:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9940:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343233",
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9992:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_423_by_1",
                      "typeString": "int_const 423"
                    },
                    "value": "423"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 993,
                  "mutability": "constant",
                  "name": "RENOUNCE_SENDER_NOT_ALLOWED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10001:59:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10001:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343234",
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10057:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_424_by_1",
                      "typeString": "int_const 424"
                    },
                    "value": "424"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 996,
                  "mutability": "constant",
                  "name": "BUFFER_PERIOD_EXPIRED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10066:53:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10066:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343235",
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10116:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_425_by_1",
                      "typeString": "int_const 425"
                    },
                    "value": "425"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 999,
                  "mutability": "constant",
                  "name": "CALLER_IS_NOT_OWNER",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10125:51:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10125:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343236",
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10173:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_426_by_1",
                      "typeString": "int_const 426"
                    },
                    "value": "426"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1002,
                  "mutability": "constant",
                  "name": "NEW_OWNER_IS_ZERO",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10182:49:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10182:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343237",
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10228:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_427_by_1",
                      "typeString": "int_const 427"
                    },
                    "value": "427"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1005,
                  "mutability": "constant",
                  "name": "CODE_DEPLOYMENT_FAILED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10237:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10237:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343238",
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10288:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_428_by_1",
                      "typeString": "int_const 428"
                    },
                    "value": "428"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1008,
                  "mutability": "constant",
                  "name": "CALL_TO_NON_CONTRACT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10297:52:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10297:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343239",
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10346:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_429_by_1",
                      "typeString": "int_const 429"
                    },
                    "value": "429"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1011,
                  "mutability": "constant",
                  "name": "LOW_LEVEL_CALL_FAILED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10355:53:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10355:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343330",
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10405:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_430_by_1",
                      "typeString": "int_const 430"
                    },
                    "value": "430"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1014,
                  "mutability": "constant",
                  "name": "NOT_PAUSED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10414:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10414:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343331",
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10453:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_431_by_1",
                      "typeString": "int_const 431"
                    },
                    "value": "431"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1017,
                  "mutability": "constant",
                  "name": "ADDRESS_ALREADY_ALLOWLISTED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10462:59:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10462:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343332",
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10518:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_432_by_1",
                      "typeString": "int_const 432"
                    },
                    "value": "432"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1020,
                  "mutability": "constant",
                  "name": "ADDRESS_NOT_ALLOWLISTED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10527:55:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10527:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343333",
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10579:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_433_by_1",
                      "typeString": "int_const 433"
                    },
                    "value": "433"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1023,
                  "mutability": "constant",
                  "name": "ERC20_BURN_EXCEEDS_BALANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10588:58:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10588:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "343334",
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10643:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_434_by_1",
                      "typeString": "int_const 434"
                    },
                    "value": "434"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1026,
                  "mutability": "constant",
                  "name": "INVALID_POOL_ID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10666:47:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10666:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353030",
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10710:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_500_by_1",
                      "typeString": "int_const 500"
                    },
                    "value": "500"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1029,
                  "mutability": "constant",
                  "name": "CALLER_NOT_POOL",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10719:47:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10719:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353031",
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10763:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_501_by_1",
                      "typeString": "int_const 501"
                    },
                    "value": "501"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1032,
                  "mutability": "constant",
                  "name": "SENDER_NOT_ASSET_MANAGER",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10772:56:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10772:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353032",
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10825:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_502_by_1",
                      "typeString": "int_const 502"
                    },
                    "value": "502"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1035,
                  "mutability": "constant",
                  "name": "USER_DOESNT_ALLOW_RELAYER",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10834:57:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10834:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353033",
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10888:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_503_by_1",
                      "typeString": "int_const 503"
                    },
                    "value": "503"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1038,
                  "mutability": "constant",
                  "name": "INVALID_SIGNATURE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10897:49:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10897:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353034",
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10943:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_504_by_1",
                      "typeString": "int_const 504"
                    },
                    "value": "504"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1041,
                  "mutability": "constant",
                  "name": "EXIT_BELOW_MIN",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "10952:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10952:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353035",
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10995:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_505_by_1",
                      "typeString": "int_const 505"
                    },
                    "value": "505"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1044,
                  "mutability": "constant",
                  "name": "JOIN_ABOVE_MAX",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11004:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11004:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353036",
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11047:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_506_by_1",
                      "typeString": "int_const 506"
                    },
                    "value": "506"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1047,
                  "mutability": "constant",
                  "name": "SWAP_LIMIT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11056:42:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11056:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353037",
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11095:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_507_by_1",
                      "typeString": "int_const 507"
                    },
                    "value": "507"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1050,
                  "mutability": "constant",
                  "name": "SWAP_DEADLINE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11104:45:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11104:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353038",
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11146:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_508_by_1",
                      "typeString": "int_const 508"
                    },
                    "value": "508"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1053,
                  "mutability": "constant",
                  "name": "CANNOT_SWAP_SAME_TOKEN",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11155:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11155:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353039",
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11206:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_509_by_1",
                      "typeString": "int_const 509"
                    },
                    "value": "509"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1056,
                  "mutability": "constant",
                  "name": "UNKNOWN_AMOUNT_IN_FIRST_SWAP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11215:60:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11215:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353130",
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11272:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_510_by_1",
                      "typeString": "int_const 510"
                    },
                    "value": "510"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1059,
                  "mutability": "constant",
                  "name": "MALCONSTRUCTED_MULTIHOP_SWAP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11281:60:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11281:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353131",
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11338:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_511_by_1",
                      "typeString": "int_const 511"
                    },
                    "value": "511"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1062,
                  "mutability": "constant",
                  "name": "INTERNAL_BALANCE_OVERFLOW",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11347:57:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11347:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353132",
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11401:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_512_by_1",
                      "typeString": "int_const 512"
                    },
                    "value": "512"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1065,
                  "mutability": "constant",
                  "name": "INSUFFICIENT_INTERNAL_BALANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11410:61:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11410:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353133",
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11468:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_513_by_1",
                      "typeString": "int_const 513"
                    },
                    "value": "513"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1068,
                  "mutability": "constant",
                  "name": "INVALID_ETH_INTERNAL_BALANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11477:60:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11477:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353134",
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11534:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_514_by_1",
                      "typeString": "int_const 514"
                    },
                    "value": "514"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1071,
                  "mutability": "constant",
                  "name": "INVALID_POST_LOAN_BALANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11543:57:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11543:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353135",
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11597:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_515_by_1",
                      "typeString": "int_const 515"
                    },
                    "value": "515"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1074,
                  "mutability": "constant",
                  "name": "INSUFFICIENT_ETH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11606:48:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11606:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353136",
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11651:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_516_by_1",
                      "typeString": "int_const 516"
                    },
                    "value": "516"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1077,
                  "mutability": "constant",
                  "name": "UNALLOCATED_ETH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11660:47:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11660:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353137",
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11704:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_517_by_1",
                      "typeString": "int_const 517"
                    },
                    "value": "517"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1080,
                  "mutability": "constant",
                  "name": "ETH_TRANSFER",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11713:44:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11713:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353138",
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11754:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_518_by_1",
                      "typeString": "int_const 518"
                    },
                    "value": "518"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1083,
                  "mutability": "constant",
                  "name": "CANNOT_USE_ETH_SENTINEL",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11763:55:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11763:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353139",
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11815:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_519_by_1",
                      "typeString": "int_const 519"
                    },
                    "value": "519"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1086,
                  "mutability": "constant",
                  "name": "TOKENS_MISMATCH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11824:47:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11824:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353230",
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11868:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_520_by_1",
                      "typeString": "int_const 520"
                    },
                    "value": "520"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1089,
                  "mutability": "constant",
                  "name": "TOKEN_NOT_REGISTERED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11877:52:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11877:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353231",
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11926:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_521_by_1",
                      "typeString": "int_const 521"
                    },
                    "value": "521"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1092,
                  "mutability": "constant",
                  "name": "TOKEN_ALREADY_REGISTERED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11935:56:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11935:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353232",
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11988:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_522_by_1",
                      "typeString": "int_const 522"
                    },
                    "value": "522"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1095,
                  "mutability": "constant",
                  "name": "TOKENS_ALREADY_SET",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "11997:50:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11997:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353233",
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12044:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_523_by_1",
                      "typeString": "int_const 523"
                    },
                    "value": "523"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1098,
                  "mutability": "constant",
                  "name": "TOKENS_LENGTH_MUST_BE_2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "12053:55:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12053:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353234",
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12105:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_524_by_1",
                      "typeString": "int_const 524"
                    },
                    "value": "524"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1101,
                  "mutability": "constant",
                  "name": "NONZERO_TOKEN_BALANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "12114:53:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12114:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353235",
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12164:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_525_by_1",
                      "typeString": "int_const 525"
                    },
                    "value": "525"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1104,
                  "mutability": "constant",
                  "name": "BALANCE_TOTAL_OVERFLOW",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "12173:54:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12173:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353236",
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12224:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_526_by_1",
                      "typeString": "int_const 526"
                    },
                    "value": "526"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1107,
                  "mutability": "constant",
                  "name": "POOL_NO_TOKENS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "12233:46:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12233:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353237",
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12276:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_527_by_1",
                      "typeString": "int_const 527"
                    },
                    "value": "527"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1110,
                  "mutability": "constant",
                  "name": "INSUFFICIENT_FLASH_LOAN_BALANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "12285:63:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12285:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353238",
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12345:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_528_by_1",
                      "typeString": "int_const 528"
                    },
                    "value": "528"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1113,
                  "mutability": "constant",
                  "name": "SWAP_FEE_PERCENTAGE_TOO_HIGH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "12367:60:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12367:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "363030",
                    "id": 1112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12424:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_600_by_1",
                      "typeString": "int_const 600"
                    },
                    "value": "600"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1116,
                  "mutability": "constant",
                  "name": "FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "12433:66:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12433:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "363031",
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12496:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_601_by_1",
                      "typeString": "int_const 601"
                    },
                    "value": "601"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1119,
                  "mutability": "constant",
                  "name": "INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "12505:66:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12505:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "363032",
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12568:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_602_by_1",
                      "typeString": "int_const 602"
                    },
                    "value": "602"
                  },
                  "visibility": "internal"
                }
              ],
              "scope": 1121,
              "src": "4248:8326:12"
            }
          ],
          "src": "688:11887:12"
        },
        "id": 12
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
          "exportedSymbols": {
            "IAuthentication": [
              1131
            ]
          },
          "id": 1132,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1122,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1131,
              "linearizedBaseContracts": [
                1131
              ],
              "name": "IAuthentication",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1123,
                    "nodeType": "StructuredDocumentation",
                    "src": "745:116:13",
                    "text": " @dev Returns the action identifier associated with the external function described by `selector`."
                  },
                  "functionSelector": "851c1bb3",
                  "id": 1130,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getActionId",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1125,
                        "mutability": "mutable",
                        "name": "selector",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "887:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1124,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "887:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "886:17:13"
                  },
                  "returnParameters": {
                    "id": 1129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1128,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "927:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "927:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "926:9:13"
                  },
                  "scope": 1131,
                  "src": "866:70:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1132,
              "src": "713:225:13"
            }
          ],
          "src": "688:251:13"
        },
        "id": 13
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol",
          "exportedSymbols": {
            "ISignaturesValidator": [
              1149
            ]
          },
          "id": 1150,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1133,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1134,
                "nodeType": "StructuredDocumentation",
                "src": "713:95:14",
                "text": " @dev Interface for the SignatureValidator helper, used to support meta-transactions."
              },
              "fullyImplemented": false,
              "id": 1149,
              "linearizedBaseContracts": [
                1149
              ],
              "name": "ISignaturesValidator",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1135,
                    "nodeType": "StructuredDocumentation",
                    "src": "846:60:14",
                    "text": " @dev Returns the EIP712 domain separator."
                  },
                  "functionSelector": "ed24911d",
                  "id": 1140,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDomainSeparator",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1136,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "938:2:14"
                  },
                  "returnParameters": {
                    "id": 1139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1138,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1140,
                        "src": "964:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1137,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "964:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "963:9:14"
                  },
                  "scope": 1149,
                  "src": "911:62:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1141,
                    "nodeType": "StructuredDocumentation",
                    "src": "979:83:14",
                    "text": " @dev Returns the next nonce used by an address to sign messages."
                  },
                  "functionSelector": "90193b7c",
                  "id": 1148,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNextNonce",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1143,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 1148,
                        "src": "1089:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1142,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1089:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1088:14:14"
                  },
                  "returnParameters": {
                    "id": 1147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1146,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1148,
                        "src": "1126:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1126:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1125:9:14"
                  },
                  "scope": 1149,
                  "src": "1067:68:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1150,
              "src": "809:328:14"
            }
          ],
          "src": "688:450:14"
        },
        "id": 14
      },
      "@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol",
          "exportedSymbols": {
            "ITemporarilyPausable": [
              1168
            ]
          },
          "id": 1169,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1151,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:15"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1152,
                "nodeType": "StructuredDocumentation",
                "src": "713:61:15",
                "text": " @dev Interface for the TemporarilyPausable helper."
              },
              "fullyImplemented": false,
              "id": 1168,
              "linearizedBaseContracts": [
                1168
              ],
              "name": "ITemporarilyPausable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1153,
                    "nodeType": "StructuredDocumentation",
                    "src": "812:83:15",
                    "text": " @dev Emitted every time the pause state changes by `_setPaused`."
                  },
                  "id": 1157,
                  "name": "PausedStateChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1155,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paused",
                        "nodeType": "VariableDeclaration",
                        "scope": 1157,
                        "src": "925:11:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1154,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "925:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "924:13:15"
                  },
                  "src": "900:38:15"
                },
                {
                  "documentation": {
                    "id": 1158,
                    "nodeType": "StructuredDocumentation",
                    "src": "944:57:15",
                    "text": " @dev Returns the current paused state."
                  },
                  "functionSelector": "1c0de051",
                  "id": 1167,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPausedState",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1029:2:15"
                  },
                  "returnParameters": {
                    "id": 1166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1161,
                        "mutability": "mutable",
                        "name": "paused",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "1092:11:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1160,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1092:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1163,
                        "mutability": "mutable",
                        "name": "pauseWindowEndTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "1117:26:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1117:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1165,
                        "mutability": "mutable",
                        "name": "bufferPeriodEndTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "1157:27:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1164,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1078:116:15"
                  },
                  "scope": 1168,
                  "src": "1006:189:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1169,
              "src": "775:422:15"
            }
          ],
          "src": "688:510:15"
        },
        "id": 15
      },
      "@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol",
          "exportedSymbols": {
            "IWETH": [
              1183
            ]
          },
          "id": 1184,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1170,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:16"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "file": "../openzeppelin/IERC20.sol",
              "id": 1171,
              "nodeType": "ImportDirective",
              "scope": 1184,
              "sourceUnit": 1262,
              "src": "713:36:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1173,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1261,
                    "src": "921:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1261",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1174,
                  "nodeType": "InheritanceSpecifier",
                  "src": "921:6:16"
                }
              ],
              "contractDependencies": [
                1261
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1172,
                "nodeType": "StructuredDocumentation",
                "src": "751:150:16",
                "text": " @dev Interface for WETH9.\n See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol"
              },
              "fullyImplemented": false,
              "id": 1183,
              "linearizedBaseContracts": [
                1183,
                1261
              ],
              "name": "IWETH",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "d0e30db0",
                  "id": 1177,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "950:2:16"
                  },
                  "returnParameters": {
                    "id": 1176,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "969:0:16"
                  },
                  "scope": 1183,
                  "src": "934:36:16",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2e1a7d4d",
                  "id": 1182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1179,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1182,
                        "src": "994:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1178,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:16:16"
                  },
                  "returnParameters": {
                    "id": 1181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1018:0:16"
                  },
                  "scope": 1183,
                  "src": "976:43:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1184,
              "src": "902:119:16"
            }
          ],
          "src": "688:334:16"
        },
        "id": 16
      },
      "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1261
            ]
          },
          "id": 1262,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1185,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:17"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1186,
                "nodeType": "StructuredDocumentation",
                "src": "58:70:17",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 1261,
              "linearizedBaseContracts": [
                1261
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1187,
                    "nodeType": "StructuredDocumentation",
                    "src": "152:66:17",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1188,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:2:17"
                  },
                  "returnParameters": {
                    "id": 1191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1190,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1192,
                        "src": "269:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1189,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "269:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "268:9:17"
                  },
                  "scope": 1261,
                  "src": "223:55:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1193,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:72:17",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1200,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "380:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "379:17:17"
                  },
                  "returnParameters": {
                    "id": 1199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1198,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1200,
                        "src": "420:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:9:17"
                  },
                  "scope": 1261,
                  "src": "361:68:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1201,
                    "nodeType": "StructuredDocumentation",
                    "src": "435:209:17",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1210,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1203,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "667:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1205,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "686:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "686:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:35:17"
                  },
                  "returnParameters": {
                    "id": 1209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1208,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "720:4:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1207,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:6:17"
                  },
                  "scope": 1261,
                  "src": "649:77:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1211,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:264:17",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1220,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1220,
                        "src": "1020:13:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1215,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1220,
                        "src": "1035:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1035:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:32:17"
                  },
                  "returnParameters": {
                    "id": 1219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1220,
                        "src": "1075:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1074:9:17"
                  },
                  "scope": 1261,
                  "src": "1001:83:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1221,
                    "nodeType": "StructuredDocumentation",
                    "src": "1090:642:17",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1230,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1223,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1230,
                        "src": "1754:15:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1222,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1225,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1230,
                        "src": "1771:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1224,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:33:17"
                  },
                  "returnParameters": {
                    "id": 1229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1230,
                        "src": "1805:4:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1227,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:6:17"
                  },
                  "scope": 1261,
                  "src": "1737:74:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1231,
                    "nodeType": "StructuredDocumentation",
                    "src": "1817:296:17",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1242,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1233,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "2149:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2149:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1235,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "2173:17:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2173:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1237,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "2200:14:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1236,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2200:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2139:81:17"
                  },
                  "returnParameters": {
                    "id": 1241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1240,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "2239:4:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1239,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2239:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2238:6:17"
                  },
                  "scope": 1261,
                  "src": "2118:127:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1243,
                    "nodeType": "StructuredDocumentation",
                    "src": "2251:158:17",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 1251,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1245,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1251,
                        "src": "2429:20:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2429:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1247,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1251,
                        "src": "2451:18:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1246,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2451:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1249,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1251,
                        "src": "2471:13:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2428:57:17"
                  },
                  "src": "2414:72:17"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1252,
                    "nodeType": "StructuredDocumentation",
                    "src": "2492:148:17",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 1260,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1254,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "2660:21:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2660:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1256,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "2683:23:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2683:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1258,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "2708:13:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1257,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2708:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2659:63:17"
                  },
                  "src": "2645:78:17"
                }
              ],
              "scope": 1262,
              "src": "129:2596:17"
            }
          ],
          "src": "33:2693:17"
        },
        "id": 17
      },
      "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1317
            ]
          },
          "id": 1318,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1263,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "374:23:18"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol",
              "file": "../helpers/BalancerErrors.sol",
              "id": 1264,
              "nodeType": "ImportDirective",
              "scope": 1318,
              "sourceUnit": 1121,
              "src": "399:39:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1265,
                "nodeType": "StructuredDocumentation",
                "src": "440:750:18",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1317,
              "linearizedBaseContracts": [
                1317
              ],
              "name": "ReentrancyGuard",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1268,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1317,
                  "src": "1979:41:18",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1979:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2019:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1271,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1317,
                  "src": "2026:37:18",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2062:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 1317,
                  "src": "2070:23:18",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1280,
                    "nodeType": "Block",
                    "src": "2114:39:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1276,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "2124:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1277,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "2134:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2124:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1279,
                        "nodeType": "ExpressionStatement",
                        "src": "2124:22:18"
                      }
                    ]
                  },
                  "id": 1281,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2111:2:18"
                  },
                  "returnParameters": {
                    "id": 1275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2114:0:18"
                  },
                  "scope": 1317,
                  "src": "2100:53:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1291,
                    "nodeType": "Block",
                    "src": "2552:77:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1284,
                            "name": "_enterNonReentrant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1308,
                            "src": "2562:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2562:20:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1286,
                        "nodeType": "ExpressionStatement",
                        "src": "2562:20:18"
                      },
                      {
                        "id": 1287,
                        "nodeType": "PlaceholderStatement",
                        "src": "2592:1:18"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1288,
                            "name": "_exitNonReentrant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1316,
                            "src": "2603:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2603:19:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1290,
                        "nodeType": "ExpressionStatement",
                        "src": "2603:19:18"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1282,
                    "nodeType": "StructuredDocumentation",
                    "src": "2159:364:18",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
                  },
                  "id": 1292,
                  "name": "nonReentrant",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1283,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2549:2:18"
                  },
                  "src": "2528:101:18",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1307,
                    "nodeType": "Block",
                    "src": "2673:233:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1296,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1273,
                                "src": "2767:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1297,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1271,
                                "src": "2778:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2767:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1299,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1120,
                                "src": "2788:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$1120_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 1300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "REENTRANCY",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 921,
                              "src": "2788:17:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1295,
                            "name": "_require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 691,
                            "src": "2758:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                              "typeString": "function (bool,uint256) pure"
                            }
                          },
                          "id": 1301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2758:48:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1302,
                        "nodeType": "ExpressionStatement",
                        "src": "2758:48:18"
                      },
                      {
                        "expression": {
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1303,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "2881:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1304,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1271,
                            "src": "2891:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2881:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1306,
                        "nodeType": "ExpressionStatement",
                        "src": "2881:18:18"
                      }
                    ]
                  },
                  "id": 1308,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_enterNonReentrant",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1293,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2662:2:18"
                  },
                  "returnParameters": {
                    "id": 1294,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2673:0:18"
                  },
                  "scope": 1317,
                  "src": "2635:271:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1315,
                    "nodeType": "Block",
                    "src": "2949:171:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1311,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "3091:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1312,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "3101:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3091:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1314,
                        "nodeType": "ExpressionStatement",
                        "src": "3091:22:18"
                      }
                    ]
                  },
                  "id": 1316,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_exitNonReentrant",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1309,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2938:2:18"
                  },
                  "returnParameters": {
                    "id": 1310,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2949:0:18"
                  },
                  "scope": 1317,
                  "src": "2912:208:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1318,
              "src": "1191:1931:18"
            }
          ],
          "src": "374:2749:18"
        },
        "id": 18
      },
      "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol",
          "exportedSymbols": {
            "IBALTokenHolder": [
              1340
            ]
          },
          "id": 1341,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1319,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:19"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
              "id": 1320,
              "nodeType": "ImportDirective",
              "scope": 1341,
              "sourceUnit": 1132,
              "src": "713:80:19",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "id": 1321,
              "nodeType": "ImportDirective",
              "scope": 1341,
              "sourceUnit": 1262,
              "src": "794:76:19",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1322,
                    "name": "IAuthentication",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1131,
                    "src": "901:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthentication_$1131",
                      "typeString": "contract IAuthentication"
                    }
                  },
                  "id": 1323,
                  "nodeType": "InheritanceSpecifier",
                  "src": "901:15:19"
                }
              ],
              "contractDependencies": [
                1131
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1340,
              "linearizedBaseContracts": [
                1340,
                1131
              ],
              "name": "IBALTokenHolder",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c1075329",
                  "id": 1330,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFunds",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1328,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1325,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1330,
                        "src": "946:17:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "946:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1327,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1330,
                        "src": "965:14:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1326,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "965:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "945:35:19"
                  },
                  "returnParameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "989:0:19"
                  },
                  "scope": 1340,
                  "src": "923:67:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8b6ca32c",
                  "id": 1339,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sweepTokens",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1332,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "1026:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "1026:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1334,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "1048:17:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1333,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1048:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1336,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "1075:14:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1335,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1016:79:19"
                  },
                  "returnParameters": {
                    "id": 1338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1104:0:19"
                  },
                  "scope": 1340,
                  "src": "996:109:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1341,
              "src": "872:235:19"
            }
          ],
          "src": "688:420:19"
        },
        "id": 19
      },
      "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol",
          "exportedSymbols": {
            "IBALTokenHolderFactory": [
              1370
            ]
          },
          "id": 1371,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1342,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:20"
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "file": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "id": 1343,
              "nodeType": "ImportDirective",
              "scope": 1371,
              "sourceUnit": 1939,
              "src": "713:65:20",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerToken.sol",
              "id": 1344,
              "nodeType": "ImportDirective",
              "scope": 1371,
              "sourceUnit": 253,
              "src": "779:84:20",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolder.sol",
              "file": "./IBALTokenHolder.sol",
              "id": 1345,
              "nodeType": "ImportDirective",
              "scope": 1371,
              "sourceUnit": 1341,
              "src": "864:31:20",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1370,
              "linearizedBaseContracts": [
                1370
              ],
              "name": "IBALTokenHolderFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c0039699",
                  "id": 1350,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalancerToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1346,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "961:2:20"
                  },
                  "returnParameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "987:14:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBalancerToken_$252",
                          "typeString": "contract IBalancerToken"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "IBalancerToken",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 252,
                          "src": "987:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerToken_$252",
                            "typeString": "contract IBalancerToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "986:16:20"
                  },
                  "scope": 1370,
                  "src": "936:67:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8d928af8",
                  "id": 1355,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVault",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1351,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1026:2:20"
                  },
                  "returnParameters": {
                    "id": 1354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1353,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1355,
                        "src": "1052:6:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$1938",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 1352,
                          "name": "IVault",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "1052:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1051:8:20"
                  },
                  "scope": 1370,
                  "src": "1009:51:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "36390717",
                  "id": 1362,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isHolderFromFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1357,
                        "mutability": "mutable",
                        "name": "holder",
                        "nodeType": "VariableDeclaration",
                        "scope": 1362,
                        "src": "1095:14:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1356,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1095:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1094:16:20"
                  },
                  "returnParameters": {
                    "id": 1361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1360,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1362,
                        "src": "1134:4:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1359,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1134:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1133:6:20"
                  },
                  "scope": 1370,
                  "src": "1066:74:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b6a46b3b",
                  "id": 1369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "create",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1365,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1364,
                        "mutability": "mutable",
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 1369,
                        "src": "1162:18:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1363,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1162:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1161:20:20"
                  },
                  "returnParameters": {
                    "id": 1368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1367,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1369,
                        "src": "1200:15:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBALTokenHolder_$1340",
                          "typeString": "contract IBALTokenHolder"
                        },
                        "typeName": {
                          "id": 1366,
                          "name": "IBALTokenHolder",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1340,
                          "src": "1200:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBALTokenHolder_$1340",
                            "typeString": "contract IBALTokenHolder"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1199:17:20"
                  },
                  "scope": 1370,
                  "src": "1146:71:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1371,
              "src": "897:322:20"
            }
          ],
          "src": "688:532:20"
        },
        "id": 20
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol",
          "exportedSymbols": {
            "IAsset": [
              1374
            ]
          },
          "id": 1375,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1372,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:21"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1373,
                "nodeType": "StructuredDocumentation",
                "src": "713:309:21",
                "text": " @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."
              },
              "fullyImplemented": true,
              "id": 1374,
              "linearizedBaseContracts": [
                1374
              ],
              "name": "IAsset",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 1375,
              "src": "1023:73:21"
            }
          ],
          "src": "688:409:21"
        },
        "id": 21
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol",
          "exportedSymbols": {
            "IAuthorizer": [
              1389
            ]
          },
          "id": 1390,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1376,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:22"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1389,
              "linearizedBaseContracts": [
                1389
              ],
              "name": "IAuthorizer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1377,
                    "nodeType": "StructuredDocumentation",
                    "src": "741:121:22",
                    "text": " @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."
                  },
                  "functionSelector": "9be2a884",
                  "id": 1388,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canPerform",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1384,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1379,
                        "mutability": "mutable",
                        "name": "actionId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1388,
                        "src": "896:16:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1378,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "896:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1381,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1388,
                        "src": "922:15:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1380,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "922:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "where",
                        "nodeType": "VariableDeclaration",
                        "scope": 1388,
                        "src": "947:13:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "947:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "886:80:22"
                  },
                  "returnParameters": {
                    "id": 1387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1386,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1388,
                        "src": "990:4:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1385,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "990:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "989:6:22"
                  },
                  "scope": 1389,
                  "src": "867:129:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1390,
              "src": "713:285:22"
            }
          ],
          "src": "688:311:22"
        },
        "id": 22
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol",
          "exportedSymbols": {
            "IFlashLoanRecipient": [
              1408
            ]
          },
          "id": 1409,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1391,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:23"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "id": 1392,
              "nodeType": "ImportDirective",
              "scope": 1409,
              "sourceUnit": 1262,
              "src": "765:76:23",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1408,
              "linearizedBaseContracts": [
                1408
              ],
              "name": "IFlashLoanRecipient",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1393,
                    "nodeType": "StructuredDocumentation",
                    "src": "879:496:23",
                    "text": " @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."
                  },
                  "functionSelector": "f04f2707",
                  "id": 1407,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "receiveFlashLoan",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1405,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1396,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "1415:22:23",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1394,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "1415:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1395,
                          "nodeType": "ArrayTypeName",
                          "src": "1415:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1399,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "1447:24:23",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1397,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1447:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1398,
                          "nodeType": "ArrayTypeName",
                          "src": "1447:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1402,
                        "mutability": "mutable",
                        "name": "feeAmounts",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "1481:27:23",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1400,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1481:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1401,
                          "nodeType": "ArrayTypeName",
                          "src": "1481:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1404,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "1518:21:23",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1403,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1518:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1405:140:23"
                  },
                  "returnParameters": {
                    "id": 1406,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1554:0:23"
                  },
                  "scope": 1408,
                  "src": "1380:175:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1409,
              "src": "843:714:23"
            }
          ],
          "src": "688:870:23"
        },
        "id": 23
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol",
          "exportedSymbols": {
            "IProtocolFeesCollector": [
              1473
            ]
          },
          "id": 1474,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1410,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:24"
            },
            {
              "id": 1411,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "712:33:24"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "id": 1412,
              "nodeType": "ImportDirective",
              "scope": 1474,
              "sourceUnit": 1262,
              "src": "747:76:24",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "file": "./IVault.sol",
              "id": 1413,
              "nodeType": "ImportDirective",
              "scope": 1474,
              "sourceUnit": 1939,
              "src": "825:22:24",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol",
              "file": "./IAuthorizer.sol",
              "id": 1414,
              "nodeType": "ImportDirective",
              "scope": 1474,
              "sourceUnit": 1390,
              "src": "848:27:24",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1473,
              "linearizedBaseContracts": [
                1473
              ],
              "name": "IProtocolFeesCollector",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 1418,
                  "name": "SwapFeePercentageChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1417,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1416,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newSwapFeePercentage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1418,
                        "src": "947:28:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1415,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "947:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "946:30:24"
                  },
                  "src": "916:61:24"
                },
                {
                  "anonymous": false,
                  "id": 1422,
                  "name": "FlashLoanFeePercentageChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1420,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newFlashLoanFeePercentage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1422,
                        "src": "1018:33:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1419,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1018:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1017:35:24"
                  },
                  "src": "982:71:24"
                },
                {
                  "functionSelector": "6daefab6",
                  "id": 1433,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawCollectedFees",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1425,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "1099:24:24",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1423,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "1099:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1424,
                          "nodeType": "ArrayTypeName",
                          "src": "1099:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1428,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "1133:26:24",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1426,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1133:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1427,
                          "nodeType": "ArrayTypeName",
                          "src": "1133:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1430,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "1169:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1169:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1089:103:24"
                  },
                  "returnParameters": {
                    "id": 1432,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1201:0:24"
                  },
                  "scope": 1473,
                  "src": "1059:143:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "38e9922e",
                  "id": 1438,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setSwapFeePercentage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1435,
                        "mutability": "mutable",
                        "name": "newSwapFeePercentage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1438,
                        "src": "1238:28:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1434,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1238:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1237:30:24"
                  },
                  "returnParameters": {
                    "id": 1437,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1276:0:24"
                  },
                  "scope": 1473,
                  "src": "1208:69:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6b6b9f69",
                  "id": 1443,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFlashLoanFeePercentage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1440,
                        "mutability": "mutable",
                        "name": "newFlashLoanFeePercentage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1443,
                        "src": "1318:33:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1439,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1318:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1317:35:24"
                  },
                  "returnParameters": {
                    "id": 1442,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1361:0:24"
                  },
                  "scope": 1473,
                  "src": "1283:79:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "55c67628",
                  "id": 1448,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSwapFeePercentage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1444,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1397:2:24"
                  },
                  "returnParameters": {
                    "id": 1447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1446,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1448,
                        "src": "1423:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1445,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1423:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1422:9:24"
                  },
                  "scope": 1473,
                  "src": "1368:64:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d877845c",
                  "id": 1453,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFlashLoanFeePercentage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1449,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1472:2:24"
                  },
                  "returnParameters": {
                    "id": 1452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1451,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1453,
                        "src": "1498:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1450,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1498:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1497:9:24"
                  },
                  "scope": 1473,
                  "src": "1438:69:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e42abf35",
                  "id": 1462,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCollectedFeeAmounts",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1457,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1456,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1462,
                        "src": "1545:22:24",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1454,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "1545:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1455,
                          "nodeType": "ArrayTypeName",
                          "src": "1545:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1544:24:24"
                  },
                  "returnParameters": {
                    "id": 1461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1460,
                        "mutability": "mutable",
                        "name": "feeAmounts",
                        "nodeType": "VariableDeclaration",
                        "scope": 1462,
                        "src": "1592:27:24",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1458,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1592:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1459,
                          "nodeType": "ArrayTypeName",
                          "src": "1592:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1591:29:24"
                  },
                  "scope": 1473,
                  "src": "1513:108:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "aaabadc5",
                  "id": 1467,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAuthorizer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1463,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1649:2:24"
                  },
                  "returnParameters": {
                    "id": 1466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1465,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "1675:11:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                          "typeString": "contract IAuthorizer"
                        },
                        "typeName": {
                          "id": 1464,
                          "name": "IAuthorizer",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1389,
                          "src": "1675:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                            "typeString": "contract IAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1674:13:24"
                  },
                  "scope": 1473,
                  "src": "1627:61:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fbfa77cf",
                  "id": 1472,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "vault",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1468,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:2:24"
                  },
                  "returnParameters": {
                    "id": 1471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1470,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1472,
                        "src": "1734:6:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$1938",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 1469,
                          "name": "IVault",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "1734:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1733:8:24"
                  },
                  "scope": 1473,
                  "src": "1694:48:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1474,
              "src": "877:867:24"
            }
          ],
          "src": "688:1057:24"
        },
        "id": 24
      },
      "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol": {
        "ast": {
          "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
          "exportedSymbols": {
            "IVault": [
              1938
            ]
          },
          "id": 1939,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1475,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:33:25"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
              "id": 1476,
              "nodeType": "ImportDirective",
              "scope": 1939,
              "sourceUnit": 1262,
              "src": "723:76:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol",
              "id": 1477,
              "nodeType": "ImportDirective",
              "scope": 1939,
              "sourceUnit": 1132,
              "src": "800:80:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol",
              "id": 1478,
              "nodeType": "ImportDirective",
              "scope": 1939,
              "sourceUnit": 1150,
              "src": "881:85:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol",
              "id": 1479,
              "nodeType": "ImportDirective",
              "scope": 1939,
              "sourceUnit": 1169,
              "src": "967:85:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol",
              "id": 1480,
              "nodeType": "ImportDirective",
              "scope": 1939,
              "sourceUnit": 1184,
              "src": "1053:67:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol",
              "file": "./IAsset.sol",
              "id": 1481,
              "nodeType": "ImportDirective",
              "scope": 1939,
              "sourceUnit": 1375,
              "src": "1122:22:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol",
              "file": "./IAuthorizer.sol",
              "id": 1482,
              "nodeType": "ImportDirective",
              "scope": 1939,
              "sourceUnit": 1390,
              "src": "1145:27:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol",
              "file": "./IFlashLoanRecipient.sol",
              "id": 1483,
              "nodeType": "ImportDirective",
              "scope": 1939,
              "sourceUnit": 1409,
              "src": "1173:35:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol",
              "file": "./IProtocolFeesCollector.sol",
              "id": 1484,
              "nodeType": "ImportDirective",
              "scope": 1939,
              "sourceUnit": 1474,
              "src": "1209:38:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "id": 1485,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "1249:23:25"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1487,
                    "name": "ISignaturesValidator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1149,
                    "src": "1466:20:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISignaturesValidator_$1149",
                      "typeString": "contract ISignaturesValidator"
                    }
                  },
                  "id": 1488,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1466:20:25"
                },
                {
                  "baseName": {
                    "id": 1489,
                    "name": "ITemporarilyPausable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1168,
                    "src": "1488:20:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITemporarilyPausable_$1168",
                      "typeString": "contract ITemporarilyPausable"
                    }
                  },
                  "id": 1490,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1488:20:25"
                },
                {
                  "baseName": {
                    "id": 1491,
                    "name": "IAuthentication",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1131,
                    "src": "1510:15:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthentication_$1131",
                      "typeString": "contract IAuthentication"
                    }
                  },
                  "id": 1492,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1510:15:25"
                }
              ],
              "contractDependencies": [
                1131,
                1149,
                1168
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1486,
                "nodeType": "StructuredDocumentation",
                "src": "1274:171:25",
                "text": " @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n don't override one of these declarations."
              },
              "fullyImplemented": false,
              "id": 1938,
              "linearizedBaseContracts": [
                1938,
                1131,
                1168,
                1149
              ],
              "name": "IVault",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1493,
                    "nodeType": "StructuredDocumentation",
                    "src": "3023:55:25",
                    "text": " @dev Returns the Vault's Authorizer."
                  },
                  "functionSelector": "aaabadc5",
                  "id": 1498,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAuthorizer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3105:2:25"
                  },
                  "returnParameters": {
                    "id": 1497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1496,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1498,
                        "src": "3131:11:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                          "typeString": "contract IAuthorizer"
                        },
                        "typeName": {
                          "id": 1495,
                          "name": "IAuthorizer",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1389,
                          "src": "3131:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                            "typeString": "contract IAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3130:13:25"
                  },
                  "scope": 1938,
                  "src": "3083:61:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1499,
                    "nodeType": "StructuredDocumentation",
                    "src": "3150:175:25",
                    "text": " @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n Emits an `AuthorizerChanged` event."
                  },
                  "functionSelector": "058a628f",
                  "id": 1504,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setAuthorizer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1502,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1501,
                        "mutability": "mutable",
                        "name": "newAuthorizer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1504,
                        "src": "3353:25:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                          "typeString": "contract IAuthorizer"
                        },
                        "typeName": {
                          "id": 1500,
                          "name": "IAuthorizer",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1389,
                          "src": "3353:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                            "typeString": "contract IAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3352:27:25"
                  },
                  "returnParameters": {
                    "id": 1503,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3388:0:25"
                  },
                  "scope": 1938,
                  "src": "3330:59:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1505,
                    "nodeType": "StructuredDocumentation",
                    "src": "3395:80:25",
                    "text": " @dev Emitted when a new authorizer is set by `setAuthorizer`."
                  },
                  "id": 1509,
                  "name": "AuthorizerChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1507,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAuthorizer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "3504:33:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                          "typeString": "contract IAuthorizer"
                        },
                        "typeName": {
                          "id": 1506,
                          "name": "IAuthorizer",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1389,
                          "src": "3504:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                            "typeString": "contract IAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3503:35:25"
                  },
                  "src": "3480:59:25"
                },
                {
                  "documentation": {
                    "id": 1510,
                    "nodeType": "StructuredDocumentation",
                    "src": "4635:99:25",
                    "text": " @dev Returns true if `user` has approved `relayer` to act as a relayer for them."
                  },
                  "functionSelector": "fec90d72",
                  "id": 1519,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasApprovedRelayer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1512,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 1519,
                        "src": "4767:12:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4767:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1514,
                        "mutability": "mutable",
                        "name": "relayer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1519,
                        "src": "4781:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4781:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4766:31:25"
                  },
                  "returnParameters": {
                    "id": 1518,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1517,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1519,
                        "src": "4821:4:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1516,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4821:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4820:6:25"
                  },
                  "scope": 1938,
                  "src": "4739:88:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1520,
                    "nodeType": "StructuredDocumentation",
                    "src": "4833:178:25",
                    "text": " @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n Emits a `RelayerApprovalChanged` event."
                  },
                  "functionSelector": "fa6e671d",
                  "id": 1529,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRelayerApproval",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1527,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1522,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1529,
                        "src": "5053:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5053:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1524,
                        "mutability": "mutable",
                        "name": "relayer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1529,
                        "src": "5077:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5077:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1526,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 1529,
                        "src": "5102:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1525,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5102:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5043:78:25"
                  },
                  "returnParameters": {
                    "id": 1528,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5130:0:25"
                  },
                  "scope": 1938,
                  "src": "5016:115:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1530,
                    "nodeType": "StructuredDocumentation",
                    "src": "5137:104:25",
                    "text": " @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."
                  },
                  "id": 1538,
                  "name": "RelayerApprovalChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1532,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relayer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1538,
                        "src": "5275:23:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5275:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1534,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1538,
                        "src": "5300:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5300:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1536,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 1538,
                        "src": "5324:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1535,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5324:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5274:64:25"
                  },
                  "src": "5246:93:25"
                },
                {
                  "documentation": {
                    "id": 1539,
                    "nodeType": "StructuredDocumentation",
                    "src": "6047:78:25",
                    "text": " @dev Returns `user`'s Internal Balance for a set of tokens."
                  },
                  "functionSelector": "0f5a6efa",
                  "id": 1550,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInternalBalance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1541,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 1550,
                        "src": "6158:12:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1540,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6158:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1544,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1550,
                        "src": "6172:22:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1542,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "6172:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1543,
                          "nodeType": "ArrayTypeName",
                          "src": "6172:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6157:38:25"
                  },
                  "returnParameters": {
                    "id": 1549,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1548,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1550,
                        "src": "6219:16:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1546,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6219:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1547,
                          "nodeType": "ArrayTypeName",
                          "src": "6219:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6218:18:25"
                  },
                  "scope": 1938,
                  "src": "6130:107:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1551,
                    "nodeType": "StructuredDocumentation",
                    "src": "6243:416:25",
                    "text": " @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n it lets integrators reuse a user's Vault allowance.\n For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
                  },
                  "functionSelector": "0e8e3e84",
                  "id": 1557,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "manageUserBalance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1555,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1554,
                        "mutability": "mutable",
                        "name": "ops",
                        "nodeType": "VariableDeclaration",
                        "scope": 1557,
                        "src": "6691:26:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$1568_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IVault.UserBalanceOp[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1552,
                            "name": "UserBalanceOp",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1568,
                            "src": "6691:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserBalanceOp_$1568_storage_ptr",
                              "typeString": "struct IVault.UserBalanceOp"
                            }
                          },
                          "id": 1553,
                          "nodeType": "ArrayTypeName",
                          "src": "6691:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$1568_storage_$dyn_storage_ptr",
                            "typeString": "struct IVault.UserBalanceOp[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6690:28:25"
                  },
                  "returnParameters": {
                    "id": 1556,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6735:0:25"
                  },
                  "scope": 1938,
                  "src": "6664:72:25",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.UserBalanceOp",
                  "id": 1568,
                  "members": [
                    {
                      "constant": false,
                      "id": 1559,
                      "mutability": "mutable",
                      "name": "kind",
                      "nodeType": "VariableDeclaration",
                      "scope": 1568,
                      "src": "6953:22:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserBalanceOpKind_$1573",
                        "typeString": "enum IVault.UserBalanceOpKind"
                      },
                      "typeName": {
                        "id": 1558,
                        "name": "UserBalanceOpKind",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1573,
                        "src": "6953:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserBalanceOpKind_$1573",
                          "typeString": "enum IVault.UserBalanceOpKind"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1561,
                      "mutability": "mutable",
                      "name": "asset",
                      "nodeType": "VariableDeclaration",
                      "scope": 1568,
                      "src": "6985:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAsset_$1374",
                        "typeString": "contract IAsset"
                      },
                      "typeName": {
                        "id": 1560,
                        "name": "IAsset",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1374,
                        "src": "6985:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAsset_$1374",
                          "typeString": "contract IAsset"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1563,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1568,
                      "src": "7007:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1562,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7007:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1565,
                      "mutability": "mutable",
                      "name": "sender",
                      "nodeType": "VariableDeclaration",
                      "scope": 1568,
                      "src": "7031:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1564,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7031:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1567,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 1568,
                      "src": "7055:25:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1566,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7055:15:25",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "UserBalanceOp",
                  "nodeType": "StructDefinition",
                  "scope": 1938,
                  "src": "6922:165:25",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IVault.UserBalanceOpKind",
                  "id": 1573,
                  "members": [
                    {
                      "id": 1569,
                      "name": "DEPOSIT_INTERNAL",
                      "nodeType": "EnumValue",
                      "src": "8725:16:25"
                    },
                    {
                      "id": 1570,
                      "name": "WITHDRAW_INTERNAL",
                      "nodeType": "EnumValue",
                      "src": "8743:17:25"
                    },
                    {
                      "id": 1571,
                      "name": "TRANSFER_INTERNAL",
                      "nodeType": "EnumValue",
                      "src": "8762:17:25"
                    },
                    {
                      "id": 1572,
                      "name": "TRANSFER_EXTERNAL",
                      "nodeType": "EnumValue",
                      "src": "8781:17:25"
                    }
                  ],
                  "name": "UserBalanceOpKind",
                  "nodeType": "EnumDefinition",
                  "src": "8700:100:25"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1574,
                    "nodeType": "StructuredDocumentation",
                    "src": "8806:317:25",
                    "text": " @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n interacting with Pools using Internal Balance.\n Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n address."
                  },
                  "id": 1582,
                  "name": "InternalBalanceChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1576,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 1582,
                        "src": "9157:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1575,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9157:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1578,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1582,
                        "src": "9179:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1577,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "9179:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1580,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "delta",
                        "nodeType": "VariableDeclaration",
                        "scope": 1582,
                        "src": "9201:12:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1579,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9201:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9156:58:25"
                  },
                  "src": "9128:87:25"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1583,
                    "nodeType": "StructuredDocumentation",
                    "src": "9221:131:25",
                    "text": " @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."
                  },
                  "id": 1593,
                  "name": "ExternalBalanceTransfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1585,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1593,
                        "src": "9387:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1584,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "9387:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1587,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1593,
                        "src": "9409:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1586,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9409:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1589,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1593,
                        "src": "9433:17:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1588,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9433:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1591,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1593,
                        "src": "9452:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1590,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9452:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9386:81:25"
                  },
                  "src": "9357:111:25"
                },
                {
                  "canonicalName": "IVault.PoolSpecialization",
                  "id": 1597,
                  "members": [
                    {
                      "id": 1594,
                      "name": "GENERAL",
                      "nodeType": "EnumValue",
                      "src": "10574:7:25"
                    },
                    {
                      "id": 1595,
                      "name": "MINIMAL_SWAP_INFO",
                      "nodeType": "EnumValue",
                      "src": "10583:17:25"
                    },
                    {
                      "id": 1596,
                      "name": "TWO_TOKEN",
                      "nodeType": "EnumValue",
                      "src": "10602:9:25"
                    }
                  ],
                  "name": "PoolSpecialization",
                  "nodeType": "EnumDefinition",
                  "src": "10548:65:25"
                },
                {
                  "documentation": {
                    "id": 1598,
                    "nodeType": "StructuredDocumentation",
                    "src": "10619:702:25",
                    "text": " @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n changed.\n The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n depending on the chosen specialization setting. This contract is known as the Pool's contract.\n Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n multiple Pools may share the same contract.\n Emits a `PoolRegistered` event."
                  },
                  "functionSelector": "09b2760f",
                  "id": 1605,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerPool",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1601,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1600,
                        "mutability": "mutable",
                        "name": "specialization",
                        "nodeType": "VariableDeclaration",
                        "scope": 1605,
                        "src": "11348:33:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolSpecialization_$1597",
                          "typeString": "enum IVault.PoolSpecialization"
                        },
                        "typeName": {
                          "id": 1599,
                          "name": "PoolSpecialization",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1597,
                          "src": "11348:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolSpecialization_$1597",
                            "typeString": "enum IVault.PoolSpecialization"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11347:35:25"
                  },
                  "returnParameters": {
                    "id": 1604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1603,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1605,
                        "src": "11401:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1602,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11401:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11400:9:25"
                  },
                  "scope": 1938,
                  "src": "11326:84:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1606,
                    "nodeType": "StructuredDocumentation",
                    "src": "11416:84:25",
                    "text": " @dev Emitted when a Pool is registered by calling `registerPool`."
                  },
                  "id": 1614,
                  "name": "PoolRegistered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1613,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1608,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1614,
                        "src": "11526:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1607,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11526:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1610,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1614,
                        "src": "11550:27:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1609,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11550:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1612,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "specialization",
                        "nodeType": "VariableDeclaration",
                        "scope": 1614,
                        "src": "11579:33:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolSpecialization_$1597",
                          "typeString": "enum IVault.PoolSpecialization"
                        },
                        "typeName": {
                          "id": 1611,
                          "name": "PoolSpecialization",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1597,
                          "src": "11579:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolSpecialization_$1597",
                            "typeString": "enum IVault.PoolSpecialization"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11525:88:25"
                  },
                  "src": "11505:109:25"
                },
                {
                  "documentation": {
                    "id": 1615,
                    "nodeType": "StructuredDocumentation",
                    "src": "11620:85:25",
                    "text": " @dev Returns a Pool's contract address and specialization setting."
                  },
                  "functionSelector": "f6c00927",
                  "id": 1624,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPool",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1618,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1617,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1624,
                        "src": "11727:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1616,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11727:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11726:16:25"
                  },
                  "returnParameters": {
                    "id": 1623,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1620,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1624,
                        "src": "11766:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1619,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11766:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1622,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1624,
                        "src": "11775:18:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolSpecialization_$1597",
                          "typeString": "enum IVault.PoolSpecialization"
                        },
                        "typeName": {
                          "id": 1621,
                          "name": "PoolSpecialization",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1597,
                          "src": "11775:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PoolSpecialization_$1597",
                            "typeString": "enum IVault.PoolSpecialization"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11765:29:25"
                  },
                  "scope": 1938,
                  "src": "11710:85:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1625,
                    "nodeType": "StructuredDocumentation",
                    "src": "11801:1422:25",
                    "text": " @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n exit by receiving registered tokens, and can only swap registered tokens.\n Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n ascending order.\n The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n expected to be highly secured smart contracts with sound design principles, and the decision to register an\n Asset Manager should not be made lightly.\n Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n different Asset Manager.\n Emits a `TokensRegistered` event."
                  },
                  "functionSelector": "66a9c7d2",
                  "id": 1636,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerTokens",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1634,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1627,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1636,
                        "src": "13261:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13261:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1630,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1636,
                        "src": "13285:22:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1628,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "13285:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1629,
                          "nodeType": "ArrayTypeName",
                          "src": "13285:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1633,
                        "mutability": "mutable",
                        "name": "assetManagers",
                        "nodeType": "VariableDeclaration",
                        "scope": 1636,
                        "src": "13317:30:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1631,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13317:7:25",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1632,
                          "nodeType": "ArrayTypeName",
                          "src": "13317:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13251:102:25"
                  },
                  "returnParameters": {
                    "id": 1635,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13362:0:25"
                  },
                  "scope": 1938,
                  "src": "13228:135:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1637,
                    "nodeType": "StructuredDocumentation",
                    "src": "13369:89:25",
                    "text": " @dev Emitted when a Pool registers tokens by calling `registerTokens`."
                  },
                  "id": 1647,
                  "name": "TokensRegistered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1639,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "13486:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1638,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13486:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1642,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "13510:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1640,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "13510:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1641,
                          "nodeType": "ArrayTypeName",
                          "src": "13510:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1645,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "assetManagers",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "13527:23:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1643,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13527:7:25",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1644,
                          "nodeType": "ArrayTypeName",
                          "src": "13527:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13485:66:25"
                  },
                  "src": "13463:89:25"
                },
                {
                  "documentation": {
                    "id": 1648,
                    "nodeType": "StructuredDocumentation",
                    "src": "13558:567:25",
                    "text": " @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n must be deregistered in the same `deregisterTokens` call.\n A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n Emits a `TokensDeregistered` event."
                  },
                  "functionSelector": "7d3aeb96",
                  "id": 1656,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deregisterTokens",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1650,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1656,
                        "src": "14156:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1649,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14156:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1653,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1656,
                        "src": "14172:22:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1651,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "14172:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1652,
                          "nodeType": "ArrayTypeName",
                          "src": "14172:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14155:40:25"
                  },
                  "returnParameters": {
                    "id": 1655,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14204:0:25"
                  },
                  "scope": 1938,
                  "src": "14130:75:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1657,
                    "nodeType": "StructuredDocumentation",
                    "src": "14211:93:25",
                    "text": " @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`."
                  },
                  "id": 1664,
                  "name": "TokensDeregistered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1659,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1664,
                        "src": "14334:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1658,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14334:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1662,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1664,
                        "src": "14358:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1660,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "14358:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1661,
                          "nodeType": "ArrayTypeName",
                          "src": "14358:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14333:41:25"
                  },
                  "src": "14309:66:25"
                },
                {
                  "documentation": {
                    "id": 1665,
                    "nodeType": "StructuredDocumentation",
                    "src": "14381:1043:25",
                    "text": " @dev Returns detailed information for a Pool's registered token.\n `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n equals the sum of `cash` and `managed`.\n Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n `managed` or `total` balance to be greater than 2^112 - 1.\n `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n change for this purpose, and will update `lastChangeBlock`.\n `assetManager` is the Pool's token Asset Manager."
                  },
                  "functionSelector": "b05f8e48",
                  "id": 1680,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPoolTokenInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1667,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1680,
                        "src": "15455:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1666,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15455:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1669,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1680,
                        "src": "15471:12:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1668,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "15471:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15454:30:25"
                  },
                  "returnParameters": {
                    "id": 1679,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1672,
                        "mutability": "mutable",
                        "name": "cash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1680,
                        "src": "15545:12:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1671,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15545:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1674,
                        "mutability": "mutable",
                        "name": "managed",
                        "nodeType": "VariableDeclaration",
                        "scope": 1680,
                        "src": "15571:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15571:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1676,
                        "mutability": "mutable",
                        "name": "lastChangeBlock",
                        "nodeType": "VariableDeclaration",
                        "scope": 1680,
                        "src": "15600:23:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1675,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15600:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1678,
                        "mutability": "mutable",
                        "name": "assetManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 1680,
                        "src": "15637:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1677,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15637:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15531:136:25"
                  },
                  "scope": 1938,
                  "src": "15429:239:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1681,
                    "nodeType": "StructuredDocumentation",
                    "src": "15674:828:25",
                    "text": " @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n the tokens' `balances` changed.\n The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n order as passed to `registerTokens`.\n Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n instead."
                  },
                  "functionSelector": "f94d4668",
                  "id": 1694,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPoolTokens",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1683,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1694,
                        "src": "16530:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1682,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16530:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16529:16:25"
                  },
                  "returnParameters": {
                    "id": 1693,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1687,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1694,
                        "src": "16606:22:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1685,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "16606:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1686,
                          "nodeType": "ArrayTypeName",
                          "src": "16606:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1690,
                        "mutability": "mutable",
                        "name": "balances",
                        "nodeType": "VariableDeclaration",
                        "scope": 1694,
                        "src": "16642:25:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1688,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "16642:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1689,
                          "nodeType": "ArrayTypeName",
                          "src": "16642:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1692,
                        "mutability": "mutable",
                        "name": "lastChangeBlock",
                        "nodeType": "VariableDeclaration",
                        "scope": 1694,
                        "src": "16681:23:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1691,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16681:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16592:122:25"
                  },
                  "scope": 1938,
                  "src": "16507:208:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1695,
                    "nodeType": "StructuredDocumentation",
                    "src": "16721:2304:25",
                    "text": " @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n Pool shares.\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n these maximums.\n If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n back to the caller (not the sender, which is important for relayers).\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n withdrawn from Internal Balance: attempting to do so will trigger a revert.\n This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n directly to the Pool's contract, as is `recipient`.\n Emits a `PoolBalanceChanged` event."
                  },
                  "functionSelector": "b95cac28",
                  "id": 1706,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "joinPool",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1697,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "19057:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1696,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "19057:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1699,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "19081:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19081:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1701,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "19105:17:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19105:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1703,
                        "mutability": "mutable",
                        "name": "request",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "19132:30:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JoinPoolRequest_$1717_memory_ptr",
                          "typeString": "struct IVault.JoinPoolRequest"
                        },
                        "typeName": {
                          "id": 1702,
                          "name": "JoinPoolRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1717,
                          "src": "19132:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JoinPoolRequest_$1717_storage_ptr",
                            "typeString": "struct IVault.JoinPoolRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19047:121:25"
                  },
                  "returnParameters": {
                    "id": 1705,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19185:0:25"
                  },
                  "scope": 1938,
                  "src": "19030:156:25",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.JoinPoolRequest",
                  "id": 1717,
                  "members": [
                    {
                      "constant": false,
                      "id": 1709,
                      "mutability": "mutable",
                      "name": "assets",
                      "nodeType": "VariableDeclaration",
                      "scope": 1717,
                      "src": "19225:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IAsset_$1374_$dyn_storage_ptr",
                        "typeString": "contract IAsset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1707,
                          "name": "IAsset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1374,
                          "src": "19225:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAsset_$1374",
                            "typeString": "contract IAsset"
                          }
                        },
                        "id": 1708,
                        "nodeType": "ArrayTypeName",
                        "src": "19225:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$1374_$dyn_storage_ptr",
                          "typeString": "contract IAsset[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1712,
                      "mutability": "mutable",
                      "name": "maxAmountsIn",
                      "nodeType": "VariableDeclaration",
                      "scope": 1717,
                      "src": "19250:22:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1710,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19250:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1711,
                        "nodeType": "ArrayTypeName",
                        "src": "19250:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1714,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 1717,
                      "src": "19282:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1713,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19282:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1716,
                      "mutability": "mutable",
                      "name": "fromInternalBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1717,
                      "src": "19306:24:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1715,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19306:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "JoinPoolRequest",
                  "nodeType": "StructDefinition",
                  "scope": 1938,
                  "src": "19192:145:25",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1718,
                    "nodeType": "StructuredDocumentation",
                    "src": "19343:2489:25",
                    "text": " @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n `getPoolTokenInfo`).\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n it just enforces these minimums.\n If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n do so will trigger a revert.\n `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n `tokens` array. This array must match the Pool's registered tokens.\n This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n passed directly to the Pool's contract.\n Emits a `PoolBalanceChanged` event."
                  },
                  "functionSelector": "8bdb3913",
                  "id": 1729,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exitPool",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1720,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1729,
                        "src": "21864:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1719,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "21864:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1722,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1729,
                        "src": "21888:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1721,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21888:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1724,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1729,
                        "src": "21912:25:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1723,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21912:15:25",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1726,
                        "mutability": "mutable",
                        "name": "request",
                        "nodeType": "VariableDeclaration",
                        "scope": 1729,
                        "src": "21947:30:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExitPoolRequest_$1740_memory_ptr",
                          "typeString": "struct IVault.ExitPoolRequest"
                        },
                        "typeName": {
                          "id": 1725,
                          "name": "ExitPoolRequest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1740,
                          "src": "21947:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExitPoolRequest_$1740_storage_ptr",
                            "typeString": "struct IVault.ExitPoolRequest"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21854:129:25"
                  },
                  "returnParameters": {
                    "id": 1728,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21992:0:25"
                  },
                  "scope": 1938,
                  "src": "21837:156:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.ExitPoolRequest",
                  "id": 1740,
                  "members": [
                    {
                      "constant": false,
                      "id": 1732,
                      "mutability": "mutable",
                      "name": "assets",
                      "nodeType": "VariableDeclaration",
                      "scope": 1740,
                      "src": "22032:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IAsset_$1374_$dyn_storage_ptr",
                        "typeString": "contract IAsset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1730,
                          "name": "IAsset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1374,
                          "src": "22032:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAsset_$1374",
                            "typeString": "contract IAsset"
                          }
                        },
                        "id": 1731,
                        "nodeType": "ArrayTypeName",
                        "src": "22032:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$1374_$dyn_storage_ptr",
                          "typeString": "contract IAsset[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1735,
                      "mutability": "mutable",
                      "name": "minAmountsOut",
                      "nodeType": "VariableDeclaration",
                      "scope": 1740,
                      "src": "22057:23:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1733,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22057:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1734,
                        "nodeType": "ArrayTypeName",
                        "src": "22057:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1737,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 1740,
                      "src": "22090:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1736,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "22090:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1739,
                      "mutability": "mutable",
                      "name": "toInternalBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1740,
                      "src": "22114:22:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1738,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "22114:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExitPoolRequest",
                  "nodeType": "StructDefinition",
                  "scope": 1938,
                  "src": "21999:144:25",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1741,
                    "nodeType": "StructuredDocumentation",
                    "src": "22149:116:25",
                    "text": " @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."
                  },
                  "id": 1756,
                  "name": "PoolBalanceChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1755,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1743,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1756,
                        "src": "22304:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1742,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "22304:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1745,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "liquidityProvider",
                        "nodeType": "VariableDeclaration",
                        "scope": 1756,
                        "src": "22336:33:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1744,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "22336:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1748,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1756,
                        "src": "22379:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1746,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "22379:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1747,
                          "nodeType": "ArrayTypeName",
                          "src": "22379:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1751,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "deltas",
                        "nodeType": "VariableDeclaration",
                        "scope": 1756,
                        "src": "22404:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1749,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "22404:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 1750,
                          "nodeType": "ArrayTypeName",
                          "src": "22404:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                            "typeString": "int256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1754,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "protocolFeeAmounts",
                        "nodeType": "VariableDeclaration",
                        "scope": 1756,
                        "src": "22429:28:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1752,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "22429:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1753,
                          "nodeType": "ArrayTypeName",
                          "src": "22429:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22294:169:25"
                  },
                  "src": "22270:194:25"
                },
                {
                  "canonicalName": "IVault.PoolBalanceChangeKind",
                  "id": 1759,
                  "members": [
                    {
                      "id": 1757,
                      "name": "JOIN",
                      "nodeType": "EnumValue",
                      "src": "22499:4:25"
                    },
                    {
                      "id": 1758,
                      "name": "EXIT",
                      "nodeType": "EnumValue",
                      "src": "22505:4:25"
                    }
                  ],
                  "name": "PoolBalanceChangeKind",
                  "nodeType": "EnumDefinition",
                  "src": "22470:41:25"
                },
                {
                  "canonicalName": "IVault.SwapKind",
                  "id": 1762,
                  "members": [
                    {
                      "id": 1760,
                      "name": "GIVEN_IN",
                      "nodeType": "EnumValue",
                      "src": "26112:8:25"
                    },
                    {
                      "id": 1761,
                      "name": "GIVEN_OUT",
                      "nodeType": "EnumValue",
                      "src": "26122:9:25"
                    }
                  ],
                  "name": "SwapKind",
                  "nodeType": "EnumDefinition",
                  "src": "26096:37:25"
                },
                {
                  "documentation": {
                    "id": 1763,
                    "nodeType": "StructuredDocumentation",
                    "src": "26139:587:25",
                    "text": " @dev Performs a swap with a single Pool.\n If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n taken from the Pool, which must be greater than or equal to `limit`.\n If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n sent to the Pool, which must be less than or equal to `limit`.\n Internal Balance usage and the recipient are determined by the `funds` struct.\n Emits a `Swap` event."
                  },
                  "functionSelector": "52bbbe29",
                  "id": 1776,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1772,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1765,
                        "mutability": "mutable",
                        "name": "singleSwap",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "26754:28:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleSwap_$1789_memory_ptr",
                          "typeString": "struct IVault.SingleSwap"
                        },
                        "typeName": {
                          "id": 1764,
                          "name": "SingleSwap",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1789,
                          "src": "26754:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleSwap_$1789_storage_ptr",
                            "typeString": "struct IVault.SingleSwap"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1767,
                        "mutability": "mutable",
                        "name": "funds",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "26792:27:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FundManagement_$1844_memory_ptr",
                          "typeString": "struct IVault.FundManagement"
                        },
                        "typeName": {
                          "id": 1766,
                          "name": "FundManagement",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1844,
                          "src": "26792:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FundManagement_$1844_storage_ptr",
                            "typeString": "struct IVault.FundManagement"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1769,
                        "mutability": "mutable",
                        "name": "limit",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "26829:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26829:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1771,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "26852:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1770,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26852:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "26744:130:25"
                  },
                  "returnParameters": {
                    "id": 1775,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1774,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "26901:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1773,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26901:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "26900:9:25"
                  },
                  "scope": 1938,
                  "src": "26731:179:25",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.SingleSwap",
                  "id": 1789,
                  "members": [
                    {
                      "constant": false,
                      "id": 1778,
                      "mutability": "mutable",
                      "name": "poolId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1789,
                      "src": "27494:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1777,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "27494:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1780,
                      "mutability": "mutable",
                      "name": "kind",
                      "nodeType": "VariableDeclaration",
                      "scope": 1789,
                      "src": "27518:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SwapKind_$1762",
                        "typeString": "enum IVault.SwapKind"
                      },
                      "typeName": {
                        "id": 1779,
                        "name": "SwapKind",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1762,
                        "src": "27518:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SwapKind_$1762",
                          "typeString": "enum IVault.SwapKind"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1782,
                      "mutability": "mutable",
                      "name": "assetIn",
                      "nodeType": "VariableDeclaration",
                      "scope": 1789,
                      "src": "27541:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAsset_$1374",
                        "typeString": "contract IAsset"
                      },
                      "typeName": {
                        "id": 1781,
                        "name": "IAsset",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1374,
                        "src": "27541:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAsset_$1374",
                          "typeString": "contract IAsset"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1784,
                      "mutability": "mutable",
                      "name": "assetOut",
                      "nodeType": "VariableDeclaration",
                      "scope": 1789,
                      "src": "27565:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAsset_$1374",
                        "typeString": "contract IAsset"
                      },
                      "typeName": {
                        "id": 1783,
                        "name": "IAsset",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1374,
                        "src": "27565:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAsset_$1374",
                          "typeString": "contract IAsset"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1786,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1789,
                      "src": "27590:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1785,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27590:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1788,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 1789,
                      "src": "27614:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1787,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "27614:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "SingleSwap",
                  "nodeType": "StructDefinition",
                  "scope": 1938,
                  "src": "27466:169:25",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1790,
                    "nodeType": "StructuredDocumentation",
                    "src": "27641:1980:25",
                    "text": " @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n the same index in the `assets` array.\n Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n `amountOut` depending on the swap kind.\n Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n or unwrapped from WETH by the Vault.\n Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n the minimum or maximum amount of each token the vault is allowed to transfer.\n `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n equivalent `swap` call.\n Emits `Swap` events."
                  },
                  "functionSelector": "945bcec9",
                  "id": 1811,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "batchSwap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1806,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1792,
                        "mutability": "mutable",
                        "name": "kind",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "29654:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SwapKind_$1762",
                          "typeString": "enum IVault.SwapKind"
                        },
                        "typeName": {
                          "id": 1791,
                          "name": "SwapKind",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1762,
                          "src": "29654:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SwapKind_$1762",
                            "typeString": "enum IVault.SwapKind"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1795,
                        "mutability": "mutable",
                        "name": "swaps",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "29677:28:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1822_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IVault.BatchSwapStep[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1793,
                            "name": "BatchSwapStep",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1822,
                            "src": "29677:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchSwapStep_$1822_storage_ptr",
                              "typeString": "struct IVault.BatchSwapStep"
                            }
                          },
                          "id": 1794,
                          "nodeType": "ArrayTypeName",
                          "src": "29677:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1822_storage_$dyn_storage_ptr",
                            "typeString": "struct IVault.BatchSwapStep[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1798,
                        "mutability": "mutable",
                        "name": "assets",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "29715:22:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$1374_$dyn_memory_ptr",
                          "typeString": "contract IAsset[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1796,
                            "name": "IAsset",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1374,
                            "src": "29715:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$1374",
                              "typeString": "contract IAsset"
                            }
                          },
                          "id": 1797,
                          "nodeType": "ArrayTypeName",
                          "src": "29715:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IAsset_$1374_$dyn_storage_ptr",
                            "typeString": "contract IAsset[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1800,
                        "mutability": "mutable",
                        "name": "funds",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "29747:27:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FundManagement_$1844_memory_ptr",
                          "typeString": "struct IVault.FundManagement"
                        },
                        "typeName": {
                          "id": 1799,
                          "name": "FundManagement",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1844,
                          "src": "29747:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FundManagement_$1844_storage_ptr",
                            "typeString": "struct IVault.FundManagement"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1803,
                        "mutability": "mutable",
                        "name": "limits",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "29784:22:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1801,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "29784:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 1802,
                          "nodeType": "ArrayTypeName",
                          "src": "29784:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                            "typeString": "int256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1805,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "29816:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1804,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "29816:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "29644:194:25"
                  },
                  "returnParameters": {
                    "id": 1810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1809,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1811,
                        "src": "29865:15:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1807,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "29865:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 1808,
                          "nodeType": "ArrayTypeName",
                          "src": "29865:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                            "typeString": "int256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "29864:17:25"
                  },
                  "scope": 1938,
                  "src": "29626:256:25",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.BatchSwapStep",
                  "id": 1822,
                  "members": [
                    {
                      "constant": false,
                      "id": 1813,
                      "mutability": "mutable",
                      "name": "poolId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1822,
                      "src": "30475:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1812,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "30475:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1815,
                      "mutability": "mutable",
                      "name": "assetInIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1822,
                      "src": "30499:20:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1814,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30499:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1817,
                      "mutability": "mutable",
                      "name": "assetOutIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1822,
                      "src": "30529:21:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1816,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30529:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1819,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1822,
                      "src": "30560:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1818,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30560:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1821,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 1822,
                      "src": "30584:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1820,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "30584:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BatchSwapStep",
                  "nodeType": "StructDefinition",
                  "scope": 1938,
                  "src": "30444:161:25",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1823,
                    "nodeType": "StructuredDocumentation",
                    "src": "30611:92:25",
                    "text": " @dev Emitted for each individual swap performed by `swap` or `batchSwap`."
                  },
                  "id": 1835,
                  "name": "Swap",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1825,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1835,
                        "src": "30728:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1824,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "30728:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1827,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nodeType": "VariableDeclaration",
                        "scope": 1835,
                        "src": "30760:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1826,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "30760:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1829,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nodeType": "VariableDeclaration",
                        "scope": 1835,
                        "src": "30792:23:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1828,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "30792:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1831,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nodeType": "VariableDeclaration",
                        "scope": 1835,
                        "src": "30825:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1830,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30825:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1833,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nodeType": "VariableDeclaration",
                        "scope": 1835,
                        "src": "30851:17:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1832,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30851:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "30718:156:25"
                  },
                  "src": "30708:167:25"
                },
                {
                  "canonicalName": "IVault.FundManagement",
                  "id": 1844,
                  "members": [
                    {
                      "constant": false,
                      "id": 1837,
                      "mutability": "mutable",
                      "name": "sender",
                      "nodeType": "VariableDeclaration",
                      "scope": 1844,
                      "src": "31838:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1836,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "31838:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1839,
                      "mutability": "mutable",
                      "name": "fromInternalBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1844,
                      "src": "31862:24:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1838,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "31862:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1841,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 1844,
                      "src": "31896:25:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1840,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "31896:15:25",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1843,
                      "mutability": "mutable",
                      "name": "toInternalBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1844,
                      "src": "31931:22:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1842,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "31931:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FundManagement",
                  "nodeType": "StructDefinition",
                  "scope": 1938,
                  "src": "31806:154:25",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1845,
                    "nodeType": "StructuredDocumentation",
                    "src": "31966:1027:25",
                    "text": " @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n receives are the same that an equivalent `batchSwap` call would receive.\n Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n approve them for the Vault, or even know a user's address.\n Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n eth_call instead of eth_sendTransaction."
                  },
                  "functionSelector": "f84d066e",
                  "id": 1861,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "queryBatchSwap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1856,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1847,
                        "mutability": "mutable",
                        "name": "kind",
                        "nodeType": "VariableDeclaration",
                        "scope": 1861,
                        "src": "33031:13:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SwapKind_$1762",
                          "typeString": "enum IVault.SwapKind"
                        },
                        "typeName": {
                          "id": 1846,
                          "name": "SwapKind",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1762,
                          "src": "33031:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SwapKind_$1762",
                            "typeString": "enum IVault.SwapKind"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1850,
                        "mutability": "mutable",
                        "name": "swaps",
                        "nodeType": "VariableDeclaration",
                        "scope": 1861,
                        "src": "33054:28:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1822_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IVault.BatchSwapStep[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1848,
                            "name": "BatchSwapStep",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1822,
                            "src": "33054:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BatchSwapStep_$1822_storage_ptr",
                              "typeString": "struct IVault.BatchSwapStep"
                            }
                          },
                          "id": 1849,
                          "nodeType": "ArrayTypeName",
                          "src": "33054:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$1822_storage_$dyn_storage_ptr",
                            "typeString": "struct IVault.BatchSwapStep[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1853,
                        "mutability": "mutable",
                        "name": "assets",
                        "nodeType": "VariableDeclaration",
                        "scope": 1861,
                        "src": "33092:22:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$1374_$dyn_memory_ptr",
                          "typeString": "contract IAsset[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1851,
                            "name": "IAsset",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1374,
                            "src": "33092:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$1374",
                              "typeString": "contract IAsset"
                            }
                          },
                          "id": 1852,
                          "nodeType": "ArrayTypeName",
                          "src": "33092:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IAsset_$1374_$dyn_storage_ptr",
                            "typeString": "contract IAsset[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1855,
                        "mutability": "mutable",
                        "name": "funds",
                        "nodeType": "VariableDeclaration",
                        "scope": 1861,
                        "src": "33124:27:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FundManagement_$1844_memory_ptr",
                          "typeString": "struct IVault.FundManagement"
                        },
                        "typeName": {
                          "id": 1854,
                          "name": "FundManagement",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1844,
                          "src": "33124:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FundManagement_$1844_storage_ptr",
                            "typeString": "struct IVault.FundManagement"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "33021:136:25"
                  },
                  "returnParameters": {
                    "id": 1860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1859,
                        "mutability": "mutable",
                        "name": "assetDeltas",
                        "nodeType": "VariableDeclaration",
                        "scope": 1861,
                        "src": "33176:27:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1857,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "33176:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 1858,
                          "nodeType": "ArrayTypeName",
                          "src": "33176:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                            "typeString": "int256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "33175:29:25"
                  },
                  "scope": 1938,
                  "src": "32998:207:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1862,
                    "nodeType": "StructuredDocumentation",
                    "src": "33231:604:25",
                    "text": " @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n and then reverting unless the tokens plus a proportional protocol fee have been returned.\n The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n for each token contract. `tokens` must be sorted in ascending order.\n The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n `receiveFlashLoan` call.\n Emits `FlashLoan` events."
                  },
                  "functionSelector": "5c38449e",
                  "id": 1875,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "flashLoan",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1864,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1875,
                        "src": "33868:29:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFlashLoanRecipient_$1408",
                          "typeString": "contract IFlashLoanRecipient"
                        },
                        "typeName": {
                          "id": 1863,
                          "name": "IFlashLoanRecipient",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1408,
                          "src": "33868:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFlashLoanRecipient_$1408",
                            "typeString": "contract IFlashLoanRecipient"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1867,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 1875,
                        "src": "33907:22:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_memory_ptr",
                          "typeString": "contract IERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1865,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1261,
                            "src": "33907:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1261",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1866,
                          "nodeType": "ArrayTypeName",
                          "src": "33907:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$1261_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1870,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "scope": 1875,
                        "src": "33939:24:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1868,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "33939:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1869,
                          "nodeType": "ArrayTypeName",
                          "src": "33939:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1872,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1875,
                        "src": "33973:21:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1871,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "33973:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "33858:142:25"
                  },
                  "returnParameters": {
                    "id": 1874,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "34009:0:25"
                  },
                  "scope": 1938,
                  "src": "33840:170:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1876,
                    "nodeType": "StructuredDocumentation",
                    "src": "34016:88:25",
                    "text": " @dev Emitted for each individual flash loan performed by `flashLoan`."
                  },
                  "id": 1886,
                  "name": "FlashLoan",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1885,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1878,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1886,
                        "src": "34125:37:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFlashLoanRecipient_$1408",
                          "typeString": "contract IFlashLoanRecipient"
                        },
                        "typeName": {
                          "id": 1877,
                          "name": "IFlashLoanRecipient",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1408,
                          "src": "34125:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFlashLoanRecipient_$1408",
                            "typeString": "contract IFlashLoanRecipient"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1880,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1886,
                        "src": "34164:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1879,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "34164:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1882,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1886,
                        "src": "34186:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1881,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "34186:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1884,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1886,
                        "src": "34202:17:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1883,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "34202:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "34124:96:25"
                  },
                  "src": "34109:112:25"
                },
                {
                  "documentation": {
                    "id": 1887,
                    "nodeType": "StructuredDocumentation",
                    "src": "35217:434:25",
                    "text": " @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n Pool Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different Pools and tokens, at once.\n For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
                  },
                  "functionSelector": "e6c46092",
                  "id": 1893,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "managePoolBalance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1891,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1890,
                        "mutability": "mutable",
                        "name": "ops",
                        "nodeType": "VariableDeclaration",
                        "scope": 1893,
                        "src": "35683:26:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolBalanceOp_$1902_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IVault.PoolBalanceOp[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1888,
                            "name": "PoolBalanceOp",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1902,
                            "src": "35683:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolBalanceOp_$1902_storage_ptr",
                              "typeString": "struct IVault.PoolBalanceOp"
                            }
                          },
                          "id": 1889,
                          "nodeType": "ArrayTypeName",
                          "src": "35683:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolBalanceOp_$1902_storage_$dyn_storage_ptr",
                            "typeString": "struct IVault.PoolBalanceOp[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "35682:28:25"
                  },
                  "returnParameters": {
                    "id": 1892,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "35719:0:25"
                  },
                  "scope": 1938,
                  "src": "35656:64:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IVault.PoolBalanceOp",
                  "id": 1902,
                  "members": [
                    {
                      "constant": false,
                      "id": 1895,
                      "mutability": "mutable",
                      "name": "kind",
                      "nodeType": "VariableDeclaration",
                      "scope": 1902,
                      "src": "35757:22:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PoolBalanceOpKind_$1906",
                        "typeString": "enum IVault.PoolBalanceOpKind"
                      },
                      "typeName": {
                        "id": 1894,
                        "name": "PoolBalanceOpKind",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1906,
                        "src": "35757:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolBalanceOpKind_$1906",
                          "typeString": "enum IVault.PoolBalanceOpKind"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1897,
                      "mutability": "mutable",
                      "name": "poolId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1902,
                      "src": "35789:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1896,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "35789:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1899,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 1902,
                      "src": "35813:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1261",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1898,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1261,
                        "src": "35813:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1901,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1902,
                      "src": "35835:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1900,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "35835:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "PoolBalanceOp",
                  "nodeType": "StructDefinition",
                  "scope": 1938,
                  "src": "35726:130:25",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IVault.PoolBalanceOpKind",
                  "id": 1906,
                  "members": [
                    {
                      "id": 1903,
                      "name": "WITHDRAW",
                      "nodeType": "EnumValue",
                      "src": "36378:8:25"
                    },
                    {
                      "id": 1904,
                      "name": "DEPOSIT",
                      "nodeType": "EnumValue",
                      "src": "36388:7:25"
                    },
                    {
                      "id": 1905,
                      "name": "UPDATE",
                      "nodeType": "EnumValue",
                      "src": "36397:6:25"
                    }
                  ],
                  "name": "PoolBalanceOpKind",
                  "nodeType": "EnumDefinition",
                  "src": "36353:52:25"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1907,
                    "nodeType": "StructuredDocumentation",
                    "src": "36411:109:25",
                    "text": " @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."
                  },
                  "id": 1919,
                  "name": "PoolBalanceManaged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1909,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "poolId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1919,
                        "src": "36559:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1908,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "36559:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1911,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "assetManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 1919,
                        "src": "36591:28:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1910,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "36591:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1913,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1919,
                        "src": "36629:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1261",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1912,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1261,
                          "src": "36629:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1261",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1915,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "cashDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 1919,
                        "src": "36659:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1914,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "36659:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1917,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "managedDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 1919,
                        "src": "36685:19:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1916,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "36685:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "36549:161:25"
                  },
                  "src": "36525:186:25"
                },
                {
                  "documentation": {
                    "id": 1920,
                    "nodeType": "StructuredDocumentation",
                    "src": "37588:64:25",
                    "text": " @dev Returns the current protocol fee module."
                  },
                  "functionSelector": "d2946c2b",
                  "id": 1925,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProtocolFeesCollector",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1921,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "37690:2:25"
                  },
                  "returnParameters": {
                    "id": 1924,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1923,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1925,
                        "src": "37716:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IProtocolFeesCollector_$1473",
                          "typeString": "contract IProtocolFeesCollector"
                        },
                        "typeName": {
                          "id": 1922,
                          "name": "IProtocolFeesCollector",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1473,
                          "src": "37716:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IProtocolFeesCollector_$1473",
                            "typeString": "contract IProtocolFeesCollector"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "37715:24:25"
                  },
                  "scope": 1938,
                  "src": "37657:83:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1926,
                    "nodeType": "StructuredDocumentation",
                    "src": "37746:635:25",
                    "text": " @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n error in some part of the system.\n The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n While the contract is paused, the following features are disabled:\n - depositing and transferring internal balance\n - transferring external balance (using the Vault's allowance)\n - swaps\n - joining Pools\n - Asset Manager interactions\n Internal Balance can still be withdrawn, and Pools exited."
                  },
                  "functionSelector": "16c38b3c",
                  "id": 1931,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setPaused",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1929,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1928,
                        "mutability": "mutable",
                        "name": "paused",
                        "nodeType": "VariableDeclaration",
                        "scope": 1931,
                        "src": "38405:11:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1927,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "38405:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "38404:13:25"
                  },
                  "returnParameters": {
                    "id": 1930,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "38426:0:25"
                  },
                  "scope": 1938,
                  "src": "38386:41:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1932,
                    "nodeType": "StructuredDocumentation",
                    "src": "38433:58:25",
                    "text": " @dev Returns the Vault's WETH instance."
                  },
                  "functionSelector": "ad5c4648",
                  "id": 1937,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "WETH",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1933,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "38509:2:25"
                  },
                  "returnParameters": {
                    "id": 1936,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1935,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1937,
                        "src": "38535:5:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$1183",
                          "typeString": "contract IWETH"
                        },
                        "typeName": {
                          "id": 1934,
                          "name": "IWETH",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1183,
                          "src": "38535:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$1183",
                            "typeString": "contract IWETH"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "38534:7:25"
                  },
                  "scope": 1938,
                  "src": "38496:46:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1939,
              "src": "1446:37155:25"
            }
          ],
          "src": "688:37914:25"
        },
        "id": 25
      },
      "contracts/20220322-veBAL-activation/veBALDeploymentCoordinator.sol": {
        "ast": {
          "absolutePath": "contracts/20220322-veBAL-activation/veBALDeploymentCoordinator.sol",
          "exportedSymbols": {
            "ICurrentAuthorizer": [
              1972
            ],
            "veBALDeploymentCoordinator": [
              2934
            ]
          },
          "id": 2935,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1940,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:26"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol",
              "id": 1941,
              "nodeType": "ImportDirective",
              "scope": 2935,
              "sourceUnit": 1318,
              "src": "713:85:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "file": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "id": 1942,
              "nodeType": "ImportDirective",
              "scope": 2935,
              "sourceUnit": 1939,
              "src": "799:65:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol",
              "id": 1943,
              "nodeType": "ImportDirective",
              "scope": 2935,
              "sourceUnit": 29,
              "src": "866:88:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol",
              "id": 1944,
              "nodeType": "ImportDirective",
              "scope": 2935,
              "sourceUnit": 404,
              "src": "955:81:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol",
              "id": 1945,
              "nodeType": "ImportDirective",
              "scope": 2935,
              "sourceUnit": 472,
              "src": "1037:86:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol",
              "id": 1946,
              "nodeType": "ImportDirective",
              "scope": 2935,
              "sourceUnit": 176,
              "src": "1124:85:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol",
              "id": 1947,
              "nodeType": "ImportDirective",
              "scope": 2935,
              "sourceUnit": 313,
              "src": "1210:89:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol",
              "id": 1948,
              "nodeType": "ImportDirective",
              "scope": 2935,
              "sourceUnit": 520,
              "src": "1300:92:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol",
              "file": "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol",
              "id": 1949,
              "nodeType": "ImportDirective",
              "scope": 2935,
              "sourceUnit": 1371,
              "src": "1393:92:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1951,
                    "name": "IAuthorizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1389,
                    "src": "1794:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                      "typeString": "contract IAuthorizer"
                    }
                  },
                  "id": 1952,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1794:11:26"
                }
              ],
              "contractDependencies": [
                1389
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1950,
                "nodeType": "StructuredDocumentation",
                "src": "1524:237:26",
                "text": " @dev The currently deployed Authorizer has a different interface relative to the Authorizer in the monorepo\n for granting/revoking roles(referred to as permissions in the new Authorizer) and so we require a one-off interface"
              },
              "fullyImplemented": false,
              "id": 1972,
              "linearizedBaseContracts": [
                1972,
                1389
              ],
              "name": "ICurrentAuthorizer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "a217fddf",
                  "id": 1957,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1953,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1892:2:26"
                  },
                  "returnParameters": {
                    "id": 1956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1955,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1957,
                        "src": "1918:7:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1954,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1918:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1917:9:26"
                  },
                  "scope": 1972,
                  "src": "1865:62:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2f2ff15d",
                  "id": 1964,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1962,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1959,
                        "mutability": "mutable",
                        "name": "role",
                        "nodeType": "VariableDeclaration",
                        "scope": 1964,
                        "src": "1952:12:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1958,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1952:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1961,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1964,
                        "src": "1966:15:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1960,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1966:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1951:31:26"
                  },
                  "returnParameters": {
                    "id": 1963,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1991:0:26"
                  },
                  "scope": 1972,
                  "src": "1933:59:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d547741f",
                  "id": 1971,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1969,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1966,
                        "mutability": "mutable",
                        "name": "role",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "2018:12:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1965,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2018:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1968,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1971,
                        "src": "2032:15:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1967,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2032:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2017:31:26"
                  },
                  "returnParameters": {
                    "id": 1970,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2057:0:26"
                  },
                  "scope": 1972,
                  "src": "1998:60:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2935,
              "src": "1762:298:26"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1973,
                    "name": "ReentrancyGuard",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1317,
                    "src": "2260:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReentrancyGuard_$1317",
                      "typeString": "contract ReentrancyGuard"
                    }
                  },
                  "id": 1974,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2260:15:26"
                }
              ],
              "contractDependencies": [
                1317
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2934,
              "linearizedBaseContracts": [
                2934,
                1317
              ],
              "name": "veBALDeploymentCoordinator",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "immutable",
                  "name": "_balancerTokenAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2282:57:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                    "typeString": "contract IBalancerTokenAdmin"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "IBalancerTokenAdmin",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 312,
                    "src": "2282:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                      "typeString": "contract IBalancerTokenAdmin"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1978,
                  "mutability": "immutable",
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2346:31:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVault_$1938",
                    "typeString": "contract IVault"
                  },
                  "typeName": {
                    "id": 1977,
                    "name": "IVault",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1938,
                    "src": "2346:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVault_$1938",
                      "typeString": "contract IVault"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1980,
                  "mutability": "immutable",
                  "name": "_authorizerAdaptor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2383:55:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                    "typeString": "contract IAuthorizerAdaptor"
                  },
                  "typeName": {
                    "id": 1979,
                    "name": "IAuthorizerAdaptor",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 28,
                    "src": "2383:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                      "typeString": "contract IAuthorizerAdaptor"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1982,
                  "mutability": "immutable",
                  "name": "_balancerToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2444:47:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBalancerToken_$252",
                    "typeString": "contract IBalancerToken"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "IBalancerToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 252,
                    "src": "2444:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBalancerToken_$252",
                      "typeString": "contract IBalancerToken"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1984,
                  "mutability": "immutable",
                  "name": "_balancerMinter",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2497:49:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                    "typeString": "contract IBalancerMinter"
                  },
                  "typeName": {
                    "id": 1983,
                    "name": "IBalancerMinter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 175,
                    "src": "2497:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                      "typeString": "contract IBalancerMinter"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1986,
                  "mutability": "immutable",
                  "name": "_gaugeController",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2552:51:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGaugeController_$471",
                    "typeString": "contract IGaugeController"
                  },
                  "typeName": {
                    "id": 1985,
                    "name": "IGaugeController",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 471,
                    "src": "2552:16:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGaugeController_$471",
                      "typeString": "contract IGaugeController"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1988,
                  "mutability": "immutable",
                  "name": "_gaugeAdder",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2609:41:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                    "typeString": "contract IGaugeAdder"
                  },
                  "typeName": {
                    "id": 1987,
                    "name": "IGaugeAdder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 403,
                    "src": "2609:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                      "typeString": "contract IGaugeAdder"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1990,
                  "mutability": "immutable",
                  "name": "_ethereumGaugeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2656:62:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                    "typeString": "contract ILiquidityGaugeFactory"
                  },
                  "typeName": {
                    "id": 1989,
                    "name": "ILiquidityGaugeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 519,
                    "src": "2656:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                      "typeString": "contract ILiquidityGaugeFactory"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1992,
                  "mutability": "immutable",
                  "name": "_singleRecipientGaugeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2724:69:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                    "typeString": "contract ILiquidityGaugeFactory"
                  },
                  "typeName": {
                    "id": 1991,
                    "name": "ILiquidityGaugeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 519,
                    "src": "2724:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                      "typeString": "contract ILiquidityGaugeFactory"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1994,
                  "mutability": "immutable",
                  "name": "_balTokenHolderFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2799:63:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBALTokenHolderFactory_$1370",
                    "typeString": "contract IBALTokenHolderFactory"
                  },
                  "typeName": {
                    "id": 1993,
                    "name": "IBALTokenHolderFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1370,
                    "src": "2799:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBALTokenHolderFactory_$1370",
                      "typeString": "contract IBALTokenHolderFactory"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "761c4023",
                  "id": 1997,
                  "mutability": "mutable",
                  "name": "lmCommitteeMultisig",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "2869:79:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2869:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307863333863356639374233344531373546466433353430376663393161393337333030453333383630",
                    "id": 1996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2906:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "value": "0xc38c5f97B34E175FFd35407fc91a937300E33860"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1235f8a3",
                  "id": 2000,
                  "mutability": "mutable",
                  "name": "veBALGaugeRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3117:79:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3117:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307864324542374264383032413743413638643941634432303962456334453636344139616244443762",
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3154:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "value": "0xd2EB7Bd802A7CA68d9AcD209bEc4E664A9abDD7b"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f5c458ab",
                  "id": 2003,
                  "mutability": "mutable",
                  "name": "polygonGaugeRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3202:81:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3202:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307864324542374264383032413743413638643941634432303962456334453636344139616244443762",
                    "id": 2002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3241:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "value": "0xd2EB7Bd802A7CA68d9AcD209bEc4E664A9abDD7b"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "844c7750",
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "arbitrumGaugeRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3289:82:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307864324542374264383032413743413638643941634432303962456334453636344139616244443762",
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3329:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "value": "0xd2EB7Bd802A7CA68d9AcD209bEc4E664A9abDD7b"
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "veBALDeploymentCoordinator.DeploymentStage",
                  "id": 2011,
                  "members": [
                    {
                      "id": 2007,
                      "name": "PENDING",
                      "nodeType": "EnumValue",
                      "src": "3401:7:26"
                    },
                    {
                      "id": 2008,
                      "name": "FIRST_STAGE_DONE",
                      "nodeType": "EnumValue",
                      "src": "3410:16:26"
                    },
                    {
                      "id": 2009,
                      "name": "SECOND_STAGE_DONE",
                      "nodeType": "EnumValue",
                      "src": "3428:17:26"
                    },
                    {
                      "id": 2010,
                      "name": "THIRD_STAGE_DONE",
                      "nodeType": "EnumValue",
                      "src": "3447:16:26"
                    }
                  ],
                  "name": "DeploymentStage",
                  "nodeType": "EnumDefinition",
                  "src": "3378:87:26"
                },
                {
                  "constant": false,
                  "functionSelector": "1e390389",
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "firstStageActivationTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3471:39:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3471:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0249e6fa",
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "secondStageActivationTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3516:40:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3516:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9912b3d4",
                  "id": 2017,
                  "mutability": "mutable",
                  "name": "thirdStageActivationTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3562:39:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3562:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "_currentDeploymentStage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3608:47:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                    "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "DeploymentStage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2011,
                    "src": "3608:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                      "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "immutable",
                  "name": "_activationScheduledTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3661:50:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 2023,
                  "mutability": "immutable",
                  "name": "_thirdStageDelay",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3717:42:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3717:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "functionSelector": "dc8c9ec6",
                  "id": 2026,
                  "mutability": "constant",
                  "name": "LM_COMMITTEE_WEIGHT",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3766:51:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3766:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130653136",
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3812:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                      "typeString": "int_const 100000000000000000"
                    },
                    "value": "10e16"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "463d9e93",
                  "id": 2029,
                  "mutability": "constant",
                  "name": "VEBAL_WEIGHT",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3830:44:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3830:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130653136",
                    "id": 2028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3869:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                      "typeString": "int_const 100000000000000000"
                    },
                    "value": "10e16"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "336d4dfc",
                  "id": 2032,
                  "mutability": "constant",
                  "name": "ETHEREUM_WEIGHT",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3887:47:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3887:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3536653136",
                    "id": 2031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3929:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_560000000000000000_by_1",
                      "typeString": "int_const 560000000000000000"
                    },
                    "value": "56e16"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "1336e8d4",
                  "id": 2035,
                  "mutability": "constant",
                  "name": "POLYGON_WEIGHT",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "3947:46:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3947:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3137653136",
                    "id": 2034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3988:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_170000000000000000_by_1",
                      "typeString": "int_const 170000000000000000"
                    },
                    "value": "17e16"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "410c2d8e",
                  "id": 2038,
                  "mutability": "constant",
                  "name": "ARBITRUM_WEIGHT",
                  "nodeType": "VariableDeclaration",
                  "scope": 2934,
                  "src": "4006:46:26",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4006:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "37653136",
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4048:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_70000000000000000_by_1",
                      "typeString": "int_const 70000000000000000"
                    },
                    "value": "7e16"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2124,
                    "nodeType": "Block",
                    "src": "4442:808:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 2060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2057,
                            "name": "_currentDeploymentStage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2019,
                            "src": "4452:23:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                              "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2058,
                              "name": "DeploymentStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2011,
                              "src": "4478:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2011_$",
                                "typeString": "type(enum veBALDeploymentCoordinator.DeploymentStage)"
                              }
                            },
                            "id": 2059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PENDING",
                            "nodeType": "MemberAccess",
                            "src": "4478:23:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                              "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                            }
                          },
                          "src": "4452:49:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                            "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                          }
                        },
                        "id": 2061,
                        "nodeType": "ExpressionStatement",
                        "src": "4452:49:26"
                      },
                      {
                        "assignments": [
                          2063
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2063,
                            "mutability": "mutable",
                            "name": "balancerTokenAdmin",
                            "nodeType": "VariableDeclaration",
                            "scope": 2124,
                            "src": "4512:38:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                              "typeString": "contract IBalancerTokenAdmin"
                            },
                            "typeName": {
                              "id": 2062,
                              "name": "IBalancerTokenAdmin",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 312,
                              "src": "4512:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                                "typeString": "contract IBalancerTokenAdmin"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2067,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2064,
                              "name": "balancerMinter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2040,
                              "src": "4553:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                                "typeString": "contract IBalancerMinter"
                              }
                            },
                            "id": 2065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getBalancerTokenAdmin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52,
                            "src": "4553:36:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IBalancerTokenAdmin_$312_$",
                              "typeString": "function () view external returns (contract IBalancerTokenAdmin)"
                            }
                          },
                          "id": 2066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4553:38:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                            "typeString": "contract IBalancerTokenAdmin"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4512:79:26"
                      },
                      {
                        "expression": {
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2068,
                            "name": "_balancerTokenAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1976,
                            "src": "4602:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                              "typeString": "contract IBalancerTokenAdmin"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2069,
                            "name": "balancerTokenAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2063,
                            "src": "4624:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                              "typeString": "contract IBalancerTokenAdmin"
                            }
                          },
                          "src": "4602:40:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                            "typeString": "contract IBalancerTokenAdmin"
                          }
                        },
                        "id": 2071,
                        "nodeType": "ExpressionStatement",
                        "src": "4602:40:26"
                      },
                      {
                        "expression": {
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2072,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1978,
                            "src": "4652:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$1938",
                              "typeString": "contract IVault"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2073,
                                "name": "balancerTokenAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2063,
                                "src": "4661:18:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                                  "typeString": "contract IBalancerTokenAdmin"
                                }
                              },
                              "id": 2074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 291,
                              "src": "4661:27:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IVault_$1938_$",
                                "typeString": "function () view external returns (contract IVault)"
                              }
                            },
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4661:29:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$1938",
                              "typeString": "contract IVault"
                            }
                          },
                          "src": "4652:38:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 2077,
                        "nodeType": "ExpressionStatement",
                        "src": "4652:38:26"
                      },
                      {
                        "expression": {
                          "id": 2080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2078,
                            "name": "_authorizerAdaptor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1980,
                            "src": "4700:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                              "typeString": "contract IAuthorizerAdaptor"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2079,
                            "name": "authorizerAdaptor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2042,
                            "src": "4721:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                              "typeString": "contract IAuthorizerAdaptor"
                            }
                          },
                          "src": "4700:38:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "id": 2081,
                        "nodeType": "ExpressionStatement",
                        "src": "4700:38:26"
                      },
                      {
                        "expression": {
                          "id": 2086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2082,
                            "name": "_balancerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1982,
                            "src": "4748:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBalancerToken_$252",
                              "typeString": "contract IBalancerToken"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2083,
                                "name": "balancerTokenAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2063,
                                "src": "4765:18:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                                  "typeString": "contract IBalancerTokenAdmin"
                                }
                              },
                              "id": 2084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getBalancerToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 285,
                              "src": "4765:35:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IBalancerToken_$252_$",
                                "typeString": "function () view external returns (contract IBalancerToken)"
                              }
                            },
                            "id": 2085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4765:37:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBalancerToken_$252",
                              "typeString": "contract IBalancerToken"
                            }
                          },
                          "src": "4748:54:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerToken_$252",
                            "typeString": "contract IBalancerToken"
                          }
                        },
                        "id": 2087,
                        "nodeType": "ExpressionStatement",
                        "src": "4748:54:26"
                      },
                      {
                        "expression": {
                          "id": 2090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2088,
                            "name": "_balancerMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1984,
                            "src": "4812:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                              "typeString": "contract IBalancerMinter"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2089,
                            "name": "balancerMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2040,
                            "src": "4830:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                              "typeString": "contract IBalancerMinter"
                            }
                          },
                          "src": "4812:32:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                            "typeString": "contract IBalancerMinter"
                          }
                        },
                        "id": 2091,
                        "nodeType": "ExpressionStatement",
                        "src": "4812:32:26"
                      },
                      {
                        "expression": {
                          "id": 2098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2092,
                            "name": "_gaugeController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1986,
                            "src": "4854:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGaugeController_$471",
                              "typeString": "contract IGaugeController"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2094,
                                    "name": "balancerMinter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2040,
                                    "src": "4890:14:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                                      "typeString": "contract IBalancerMinter"
                                    }
                                  },
                                  "id": 2095,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getGaugeController",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58,
                                  "src": "4890:33:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IGaugeController_$471_$",
                                    "typeString": "function () view external returns (contract IGaugeController)"
                                  }
                                },
                                "id": 2096,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4890:35:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IGaugeController_$471",
                                  "typeString": "contract IGaugeController"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IGaugeController_$471",
                                  "typeString": "contract IGaugeController"
                                }
                              ],
                              "id": 2093,
                              "name": "IGaugeController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "4873:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                "typeString": "type(contract IGaugeController)"
                              }
                            },
                            "id": 2097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4873:53:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGaugeController_$471",
                              "typeString": "contract IGaugeController"
                            }
                          },
                          "src": "4854:72:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGaugeController_$471",
                            "typeString": "contract IGaugeController"
                          }
                        },
                        "id": 2099,
                        "nodeType": "ExpressionStatement",
                        "src": "4854:72:26"
                      },
                      {
                        "expression": {
                          "id": 2102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2100,
                            "name": "_gaugeAdder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1988,
                            "src": "4936:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                              "typeString": "contract IGaugeAdder"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2101,
                            "name": "gaugeAdder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "4950:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                              "typeString": "contract IGaugeAdder"
                            }
                          },
                          "src": "4936:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                            "typeString": "contract IGaugeAdder"
                          }
                        },
                        "id": 2103,
                        "nodeType": "ExpressionStatement",
                        "src": "4936:24:26"
                      },
                      {
                        "expression": {
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2104,
                            "name": "_ethereumGaugeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1990,
                            "src": "4970:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                              "typeString": "contract ILiquidityGaugeFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2105,
                            "name": "ethereumGaugeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2046,
                            "src": "4994:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                              "typeString": "contract ILiquidityGaugeFactory"
                            }
                          },
                          "src": "4970:44:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                            "typeString": "contract ILiquidityGaugeFactory"
                          }
                        },
                        "id": 2107,
                        "nodeType": "ExpressionStatement",
                        "src": "4970:44:26"
                      },
                      {
                        "expression": {
                          "id": 2110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2108,
                            "name": "_singleRecipientGaugeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1992,
                            "src": "5024:28:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                              "typeString": "contract ILiquidityGaugeFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2109,
                            "name": "singleRecipientGaugeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2048,
                            "src": "5055:27:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                              "typeString": "contract ILiquidityGaugeFactory"
                            }
                          },
                          "src": "5024:58:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                            "typeString": "contract ILiquidityGaugeFactory"
                          }
                        },
                        "id": 2111,
                        "nodeType": "ExpressionStatement",
                        "src": "5024:58:26"
                      },
                      {
                        "expression": {
                          "id": 2114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2112,
                            "name": "_balTokenHolderFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1994,
                            "src": "5092:22:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBALTokenHolderFactory_$1370",
                              "typeString": "contract IBALTokenHolderFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2113,
                            "name": "balTokenHolderFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "5117:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBALTokenHolderFactory_$1370",
                              "typeString": "contract IBALTokenHolderFactory"
                            }
                          },
                          "src": "5092:46:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBALTokenHolderFactory_$1370",
                            "typeString": "contract IBALTokenHolderFactory"
                          }
                        },
                        "id": 2115,
                        "nodeType": "ExpressionStatement",
                        "src": "5092:46:26"
                      },
                      {
                        "expression": {
                          "id": 2118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2116,
                            "name": "_activationScheduledTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2021,
                            "src": "5149:24:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2117,
                            "name": "activationScheduledTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2052,
                            "src": "5176:23:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5149:50:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2119,
                        "nodeType": "ExpressionStatement",
                        "src": "5149:50:26"
                      },
                      {
                        "expression": {
                          "id": 2122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2120,
                            "name": "_thirdStageDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2023,
                            "src": "5209:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2121,
                            "name": "thirdStageDelay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2054,
                            "src": "5228:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5209:34:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2123,
                        "nodeType": "ExpressionStatement",
                        "src": "5209:34:26"
                      }
                    ]
                  },
                  "id": 2125,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2055,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2040,
                        "mutability": "mutable",
                        "name": "balancerMinter",
                        "nodeType": "VariableDeclaration",
                        "scope": 2125,
                        "src": "4086:30:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                          "typeString": "contract IBalancerMinter"
                        },
                        "typeName": {
                          "id": 2039,
                          "name": "IBalancerMinter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 175,
                          "src": "4086:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                            "typeString": "contract IBalancerMinter"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2042,
                        "mutability": "mutable",
                        "name": "authorizerAdaptor",
                        "nodeType": "VariableDeclaration",
                        "scope": 2125,
                        "src": "4126:36:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                          "typeString": "contract IAuthorizerAdaptor"
                        },
                        "typeName": {
                          "id": 2041,
                          "name": "IAuthorizerAdaptor",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 28,
                          "src": "4126:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2044,
                        "mutability": "mutable",
                        "name": "gaugeAdder",
                        "nodeType": "VariableDeclaration",
                        "scope": 2125,
                        "src": "4172:22:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                          "typeString": "contract IGaugeAdder"
                        },
                        "typeName": {
                          "id": 2043,
                          "name": "IGaugeAdder",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 403,
                          "src": "4172:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                            "typeString": "contract IGaugeAdder"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2046,
                        "mutability": "mutable",
                        "name": "ethereumGaugeFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 2125,
                        "src": "4204:43:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                          "typeString": "contract ILiquidityGaugeFactory"
                        },
                        "typeName": {
                          "id": 2045,
                          "name": "ILiquidityGaugeFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 519,
                          "src": "4204:22:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                            "typeString": "contract ILiquidityGaugeFactory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2048,
                        "mutability": "mutable",
                        "name": "singleRecipientGaugeFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 2125,
                        "src": "4257:50:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                          "typeString": "contract ILiquidityGaugeFactory"
                        },
                        "typeName": {
                          "id": 2047,
                          "name": "ILiquidityGaugeFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 519,
                          "src": "4257:22:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                            "typeString": "contract ILiquidityGaugeFactory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2050,
                        "mutability": "mutable",
                        "name": "balTokenHolderFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 2125,
                        "src": "4317:44:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBALTokenHolderFactory_$1370",
                          "typeString": "contract IBALTokenHolderFactory"
                        },
                        "typeName": {
                          "id": 2049,
                          "name": "IBALTokenHolderFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1370,
                          "src": "4317:22:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBALTokenHolderFactory_$1370",
                            "typeString": "contract IBALTokenHolderFactory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2052,
                        "mutability": "mutable",
                        "name": "activationScheduledTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 2125,
                        "src": "4371:31:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2051,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4371:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2054,
                        "mutability": "mutable",
                        "name": "thirdStageDelay",
                        "nodeType": "VariableDeclaration",
                        "scope": 2125,
                        "src": "4412:23:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2053,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4412:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4076:365:26"
                  },
                  "returnParameters": {
                    "id": 2056,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4442:0:26"
                  },
                  "scope": 2934,
                  "src": "4065:1185:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2133,
                    "nodeType": "Block",
                    "src": "5364:30:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 2131,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1978,
                          "src": "5381:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "functionReturnParameters": 2130,
                        "id": 2132,
                        "nodeType": "Return",
                        "src": "5374:13:26"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2126,
                    "nodeType": "StructuredDocumentation",
                    "src": "5256:54:26",
                    "text": " @notice Returns the Balancer Vault."
                  },
                  "functionSelector": "8d928af8",
                  "id": 2134,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVault",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2127,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5332:2:26"
                  },
                  "returnParameters": {
                    "id": 2130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2129,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2134,
                        "src": "5356:6:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$1938",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 2128,
                          "name": "IVault",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "5356:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5355:8:26"
                  },
                  "scope": 2934,
                  "src": "5315:79:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2150,
                    "nodeType": "Block",
                    "src": "5546:79:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 2143,
                                        "name": "getVault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2134,
                                        "src": "5590:8:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$1938_$",
                                          "typeString": "function () view returns (contract IVault)"
                                        }
                                      },
                                      "id": 2144,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5590:10:26",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$1938",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 2145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getAuthorizer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1498,
                                    "src": "5590:24:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IAuthorizer_$1389_$",
                                      "typeString": "function () view external returns (contract IAuthorizer)"
                                    }
                                  },
                                  "id": 2146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5590:26:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                                    "typeString": "contract IAuthorizer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                                    "typeString": "contract IAuthorizer"
                                  }
                                ],
                                "id": 2142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5582:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2141,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5582:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5582:35:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2140,
                            "name": "ICurrentAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1972,
                            "src": "5563:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICurrentAuthorizer_$1972_$",
                              "typeString": "type(contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 2148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5563:55:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "functionReturnParameters": 2139,
                        "id": 2149,
                        "nodeType": "Return",
                        "src": "5556:62:26"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2135,
                    "nodeType": "StructuredDocumentation",
                    "src": "5400:75:26",
                    "text": " @notice Returns the Balancer Vault's current authorizer."
                  },
                  "functionSelector": "aaabadc5",
                  "id": 2151,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAuthorizer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2136,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5502:2:26"
                  },
                  "returnParameters": {
                    "id": 2139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2138,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2151,
                        "src": "5526:18:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                          "typeString": "contract ICurrentAuthorizer"
                        },
                        "typeName": {
                          "id": 2137,
                          "name": "ICurrentAuthorizer",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1972,
                          "src": "5526:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5525:20:26"
                  },
                  "scope": 2934,
                  "src": "5480:145:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2158,
                    "nodeType": "Block",
                    "src": "5704:42:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 2156,
                          "name": "_authorizerAdaptor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1980,
                          "src": "5721:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "functionReturnParameters": 2155,
                        "id": 2157,
                        "nodeType": "Return",
                        "src": "5714:25:26"
                      }
                    ]
                  },
                  "functionSelector": "e758d36b",
                  "id": 2159,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAuthorizerAdaptor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2152,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5660:2:26"
                  },
                  "returnParameters": {
                    "id": 2155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2154,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2159,
                        "src": "5684:18:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                          "typeString": "contract IAuthorizerAdaptor"
                        },
                        "typeName": {
                          "id": 2153,
                          "name": "IAuthorizerAdaptor",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 28,
                          "src": "5684:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5683:20:26"
                  },
                  "scope": 2934,
                  "src": "5631:115:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2166,
                    "nodeType": "Block",
                    "src": "5829:43:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 2164,
                          "name": "_balancerTokenAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1976,
                          "src": "5846:19:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                            "typeString": "contract IBalancerTokenAdmin"
                          }
                        },
                        "functionReturnParameters": 2163,
                        "id": 2165,
                        "nodeType": "Return",
                        "src": "5839:26:26"
                      }
                    ]
                  },
                  "functionSelector": "e6dec36f",
                  "id": 2167,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalancerTokenAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2160,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5782:2:26"
                  },
                  "returnParameters": {
                    "id": 2163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2162,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2167,
                        "src": "5808:19:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                          "typeString": "contract IBalancerTokenAdmin"
                        },
                        "typeName": {
                          "id": 2161,
                          "name": "IBalancerTokenAdmin",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 312,
                          "src": "5808:19:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                            "typeString": "contract IBalancerTokenAdmin"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5807:21:26"
                  },
                  "scope": 2934,
                  "src": "5752:120:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2174,
                    "nodeType": "Block",
                    "src": "5947:39:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 2172,
                          "name": "_balancerMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1984,
                          "src": "5964:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                            "typeString": "contract IBalancerMinter"
                          }
                        },
                        "functionReturnParameters": 2171,
                        "id": 2173,
                        "nodeType": "Return",
                        "src": "5957:22:26"
                      }
                    ]
                  },
                  "functionSelector": "dce8b0cd",
                  "id": 2175,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalancerMinter",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5904:2:26"
                  },
                  "returnParameters": {
                    "id": 2171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2170,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2175,
                        "src": "5930:15:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                          "typeString": "contract IBalancerMinter"
                        },
                        "typeName": {
                          "id": 2169,
                          "name": "IBalancerMinter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 175,
                          "src": "5930:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                            "typeString": "contract IBalancerMinter"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5929:17:26"
                  },
                  "scope": 2934,
                  "src": "5878:108:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2183,
                    "nodeType": "Block",
                    "src": "6138:40:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 2181,
                          "name": "_gaugeController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1986,
                          "src": "6155:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGaugeController_$471",
                            "typeString": "contract IGaugeController"
                          }
                        },
                        "functionReturnParameters": 2180,
                        "id": 2182,
                        "nodeType": "Return",
                        "src": "6148:23:26"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2176,
                    "nodeType": "StructuredDocumentation",
                    "src": "5992:70:26",
                    "text": " @notice Returns the address of the Gauge Controller"
                  },
                  "functionSelector": "58de9ade",
                  "id": 2184,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGaugeController",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2177,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6094:2:26"
                  },
                  "returnParameters": {
                    "id": 2180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2179,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2184,
                        "src": "6120:16:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGaugeController_$471",
                          "typeString": "contract IGaugeController"
                        },
                        "typeName": {
                          "id": 2178,
                          "name": "IGaugeController",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 471,
                          "src": "6120:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGaugeController_$471",
                            "typeString": "contract IGaugeController"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6119:18:26"
                  },
                  "scope": 2934,
                  "src": "6067:111:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2191,
                    "nodeType": "Block",
                    "src": "6261:47:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 2189,
                          "name": "_currentDeploymentStage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2019,
                          "src": "6278:23:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                            "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                          }
                        },
                        "functionReturnParameters": 2188,
                        "id": 2190,
                        "nodeType": "Return",
                        "src": "6271:30:26"
                      }
                    ]
                  },
                  "functionSelector": "b77984e9",
                  "id": 2192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentDeploymentStage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2185,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6218:2:26"
                  },
                  "returnParameters": {
                    "id": 2188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2187,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2192,
                        "src": "6244:15:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                          "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                        },
                        "typeName": {
                          "id": 2186,
                          "name": "DeploymentStage",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2011,
                          "src": "6244:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                            "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6243:17:26"
                  },
                  "scope": 2934,
                  "src": "6184:124:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2199,
                    "nodeType": "Block",
                    "src": "6384:48:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 2197,
                          "name": "_activationScheduledTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2021,
                          "src": "6401:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2196,
                        "id": 2198,
                        "nodeType": "Return",
                        "src": "6394:31:26"
                      }
                    ]
                  },
                  "functionSelector": "3b54e680",
                  "id": 2200,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getActivationScheduledTime",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6349:2:26"
                  },
                  "returnParameters": {
                    "id": 2196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2195,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2200,
                        "src": "6375:7:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2194,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6375:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6374:9:26"
                  },
                  "scope": 2934,
                  "src": "6314:118:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2207,
                    "nodeType": "Block",
                    "src": "6500:40:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 2205,
                          "name": "_thirdStageDelay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "6517:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2204,
                        "id": 2206,
                        "nodeType": "Return",
                        "src": "6510:23:26"
                      }
                    ]
                  },
                  "functionSelector": "42979adc",
                  "id": 2208,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getThirdStageDelay",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6465:2:26"
                  },
                  "returnParameters": {
                    "id": 2204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2203,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2208,
                        "src": "6491:7:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2202,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6491:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6490:9:26"
                  },
                  "scope": 2934,
                  "src": "6438:102:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2511,
                    "nodeType": "Block",
                    "src": "6597:6164:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2214,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6647:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6647:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2216,
                                "name": "_activationScheduledTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2021,
                                "src": "6666:24:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6647:43:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420726561647920666f722061637469766174696f6e",
                              "id": 2218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6692:26:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_28b4a5733ed7bbbeecea67cdad89c8a04eb23b4abf9df13bc6092df6d1c54e7f",
                                "typeString": "literal_string \"Not ready for activation\""
                              },
                              "value": "Not ready for activation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_28b4a5733ed7bbbeecea67cdad89c8a04eb23b4abf9df13bc6092df6d1c54e7f",
                                "typeString": "literal_string \"Not ready for activation\""
                              }
                            ],
                            "id": 2213,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6639:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6639:80:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2220,
                        "nodeType": "ExpressionStatement",
                        "src": "6639:80:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                                "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                              },
                              "id": 2225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2222,
                                "name": "_currentDeploymentStage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2019,
                                "src": "6737:23:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                                  "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2223,
                                  "name": "DeploymentStage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2011,
                                  "src": "6764:15:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2011_$",
                                    "typeString": "type(enum veBALDeploymentCoordinator.DeploymentStage)"
                                  }
                                },
                                "id": 2224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "PENDING",
                                "nodeType": "MemberAccess",
                                "src": "6764:23:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                                  "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                                }
                              },
                              "src": "6737:50:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669727374207374657020616c726561647920706572666f726d6564",
                              "id": 2226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6789:30:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f440e0ce46e8b6e41295fe26a5b30d1dd170901a8fb721b91ec77a4dfacb77c2",
                                "typeString": "literal_string \"First step already performed\""
                              },
                              "value": "First step already performed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f440e0ce46e8b6e41295fe26a5b30d1dd170901a8fb721b91ec77a4dfacb77c2",
                                "typeString": "literal_string \"First step already performed\""
                              }
                            ],
                            "id": 2221,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6729:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6729:91:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2228,
                        "nodeType": "ExpressionStatement",
                        "src": "6729:91:26"
                      },
                      {
                        "assignments": [
                          2230
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2230,
                            "mutability": "mutable",
                            "name": "authorizer",
                            "nodeType": "VariableDeclaration",
                            "scope": 2511,
                            "src": "6930:29:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                              "typeString": "contract ICurrentAuthorizer"
                            },
                            "typeName": {
                              "id": 2229,
                              "name": "ICurrentAuthorizer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1972,
                              "src": "6930:18:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2233,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2231,
                            "name": "getAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2151,
                            "src": "6962:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$1972_$",
                              "typeString": "function () view returns (contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6962:15:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6930:47:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2237,
                                      "name": "_balancerToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1982,
                                      "src": "7018:14:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBalancerToken_$252",
                                        "typeString": "contract IBalancerToken"
                                      }
                                    },
                                    "id": 2238,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "DEFAULT_ADMIN_ROLE",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 238,
                                    "src": "7018:33:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                      "typeString": "function () view external returns (bytes32)"
                                    }
                                  },
                                  "id": 2239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7018:35:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2242,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "7063:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    ],
                                    "id": 2241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7055:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2240,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7055:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7055:13:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2235,
                                  "name": "_balancerToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1982,
                                  "src": "6995:14:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBalancerToken_$252",
                                    "typeString": "contract IBalancerToken"
                                  }
                                },
                                "id": 2236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "hasRole",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 212,
                                "src": "6995:22:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view external returns (bool)"
                                }
                              },
                              "id": 2244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6995:74:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f742042414c2061646d696e",
                              "id": 2245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7071:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88278f0e58abc07667bde343f35ce2d2f5d49cbeb28d6e3cd995ff2c3114ebc5",
                                "typeString": "literal_string \"Not BAL admin\""
                              },
                              "value": "Not BAL admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88278f0e58abc07667bde343f35ce2d2f5d49cbeb28d6e3cd995ff2c3114ebc5",
                                "typeString": "literal_string \"Not BAL admin\""
                              }
                            ],
                            "id": 2234,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6987:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6987:100:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2247,
                        "nodeType": "ExpressionStatement",
                        "src": "6987:100:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2253,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7135:1:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2252,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7127:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 2251,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7127:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2254,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7127:10:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2257,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "7147:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    ],
                                    "id": 2256,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7139:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2255,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7139:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7139:13:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2261,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7162:1:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2260,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7154:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2259,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7154:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2262,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7154:10:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "id": 2249,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2230,
                                  "src": "7105:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 2250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "canPerform",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1388,
                                "src": "7105:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address,address) view external returns (bool)"
                                }
                              },
                              "id": 2263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7105:60:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420417574686f72697a65722061646d696e",
                              "id": 2264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7167:22:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_42cf385e9e323383944c71fafe0678e983cc8e5106fba89b9a0637b64cba6457",
                                "typeString": "literal_string \"Not Authorizer admin\""
                              },
                              "value": "Not Authorizer admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_42cf385e9e323383944c71fafe0678e983cc8e5106fba89b9a0637b64cba6457",
                                "typeString": "literal_string \"Not Authorizer admin\""
                              }
                            ],
                            "id": 2248,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7097:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7097:93:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2266,
                        "nodeType": "ExpressionStatement",
                        "src": "7097:93:26"
                      },
                      {
                        "assignments": [
                          2268
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2268,
                            "mutability": "mutable",
                            "name": "authorizerAdaptor",
                            "nodeType": "VariableDeclaration",
                            "scope": 2511,
                            "src": "7282:36:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                              "typeString": "contract IAuthorizerAdaptor"
                            },
                            "typeName": {
                              "id": 2267,
                              "name": "IAuthorizerAdaptor",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 28,
                              "src": "7282:18:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2271,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2269,
                            "name": "getAuthorizerAdaptor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2159,
                            "src": "7321:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAuthorizerAdaptor_$28_$",
                              "typeString": "function () view returns (contract IAuthorizerAdaptor)"
                            }
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7321:22:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7282:61:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              },
                              "id": 2279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 2273,
                                        "name": "_gaugeController",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1986,
                                        "src": "7374:16:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IGaugeController_$471",
                                          "typeString": "contract IGaugeController"
                                        }
                                      },
                                      "id": 2274,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "voting_escrow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 427,
                                      "src": "7374:30:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IVotingEscrow_$673_$",
                                        "typeString": "function () view external returns (contract IVotingEscrow)"
                                      }
                                    },
                                    "id": 2275,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7374:32:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IVotingEscrow_$673",
                                      "typeString": "contract IVotingEscrow"
                                    }
                                  },
                                  "id": 2276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "admin",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 659,
                                  "src": "7374:38:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IAuthorizerAdaptor_$28_$",
                                    "typeString": "function () view external returns (contract IAuthorizerAdaptor)"
                                  }
                                },
                                "id": 2277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7374:40:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                  "typeString": "contract IAuthorizerAdaptor"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2278,
                                "name": "authorizerAdaptor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2268,
                                "src": "7418:17:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                  "typeString": "contract IAuthorizerAdaptor"
                                }
                              },
                              "src": "7374:61:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f74696e67457363726f77206e6f74206f776e656420627920417574686f72697a657241646170746f72",
                              "id": 2280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7449:45:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6f174295f8c0409bab8fbad6ffeaa1cdd9759fc9e28c71666bfd7a76b69289dd",
                                "typeString": "literal_string \"VotingEscrow not owned by AuthorizerAdaptor\""
                              },
                              "value": "VotingEscrow not owned by AuthorizerAdaptor"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6f174295f8c0409bab8fbad6ffeaa1cdd9759fc9e28c71666bfd7a76b69289dd",
                                "typeString": "literal_string \"VotingEscrow not owned by AuthorizerAdaptor\""
                              }
                            ],
                            "id": 2272,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7353:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7353:151:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2282,
                        "nodeType": "ExpressionStatement",
                        "src": "7353:151:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              },
                              "id": 2288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2284,
                                    "name": "_gaugeController",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1986,
                                    "src": "7522:16:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IGaugeController_$471",
                                      "typeString": "contract IGaugeController"
                                    }
                                  },
                                  "id": 2285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "admin",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 470,
                                  "src": "7522:22:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IAuthorizerAdaptor_$28_$",
                                    "typeString": "function () view external returns (contract IAuthorizerAdaptor)"
                                  }
                                },
                                "id": 2286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7522:24:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                  "typeString": "contract IAuthorizerAdaptor"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2287,
                                "name": "authorizerAdaptor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2268,
                                "src": "7550:17:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                  "typeString": "contract IAuthorizerAdaptor"
                                }
                              },
                              "src": "7522:45:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4761756765436f6e74726f6c6c6572206e6f74206f776e656420627920417574686f72697a657241646170746f72",
                              "id": 2289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7569:48:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_72f64535811747be4113d7494b615d7d0bd124cfd1372c2ffe6186ae0d24e53a",
                                "typeString": "literal_string \"GaugeController not owned by AuthorizerAdaptor\""
                              },
                              "value": "GaugeController not owned by AuthorizerAdaptor"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_72f64535811747be4113d7494b615d7d0bd124cfd1372c2ffe6186ae0d24e53a",
                                "typeString": "literal_string \"GaugeController not owned by AuthorizerAdaptor\""
                              }
                            ],
                            "id": 2283,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7514:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7514:104:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2291,
                        "nodeType": "ExpressionStatement",
                        "src": "7514:104:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int128",
                                "typeString": "int128"
                              },
                              "id": 2297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2293,
                                    "name": "_gaugeController",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1986,
                                    "src": "7662:16:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IGaugeController_$471",
                                      "typeString": "contract IGaugeController"
                                    }
                                  },
                                  "id": 2294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "n_gauge_types",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 458,
                                  "src": "7662:30:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_int128_$",
                                    "typeString": "function () view external returns (int128)"
                                  }
                                },
                                "id": 2295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7662:32:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int128",
                                  "typeString": "int128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7698:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7662:37:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "476175676520747970657320616c726561647920736574",
                              "id": 2298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7701:25:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e0d4740c0ef02ef406bdca0e6209b4e7adbf776b18d3ae082e04fd36e96ad0f9",
                                "typeString": "literal_string \"Gauge types already set\""
                              },
                              "value": "Gauge types already set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e0d4740c0ef02ef406bdca0e6209b4e7adbf776b18d3ae082e04fd36e96ad0f9",
                                "typeString": "literal_string \"Gauge types already set\""
                              }
                            ],
                            "id": 2292,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7654:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7654:73:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2300,
                        "nodeType": "ExpressionStatement",
                        "src": "7654:73:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2304,
                                  "name": "_balancerToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1982,
                                  "src": "8032:14:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBalancerToken_$252",
                                    "typeString": "contract IBalancerToken"
                                  }
                                },
                                "id": 2305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "DEFAULT_ADMIN_ROLE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 238,
                                "src": "8032:33:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                  "typeString": "function () view external returns (bytes32)"
                                }
                              },
                              "id": 2306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8032:35:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2309,
                                  "name": "_balancerTokenAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1976,
                                  "src": "8077:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                                    "typeString": "contract IBalancerTokenAdmin"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                                    "typeString": "contract IBalancerTokenAdmin"
                                  }
                                ],
                                "id": 2308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8069:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2307,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8069:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8069:28:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2301,
                              "name": "_balancerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "8007:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBalancerToken_$252",
                                "typeString": "contract IBalancerToken"
                              }
                            },
                            "id": 2303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 226,
                            "src": "8007:24:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8007:91:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2312,
                        "nodeType": "ExpressionStatement",
                        "src": "8007:91:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2318,
                                      "name": "IBalancerTokenAdmin",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 312,
                                      "src": "8161:19:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IBalancerTokenAdmin_$312_$",
                                        "typeString": "type(contract IBalancerTokenAdmin)"
                                      }
                                    },
                                    "id": 2319,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "activate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 294,
                                    "src": "8161:28:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$__$returns$__$",
                                      "typeString": "function IBalancerTokenAdmin.activate()"
                                    }
                                  },
                                  "id": 2320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "8161:37:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 2316,
                                  "name": "_balancerTokenAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1976,
                                  "src": "8129:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                                    "typeString": "contract IBalancerTokenAdmin"
                                  }
                                },
                                "id": 2317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getActionId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1130,
                                "src": "8129:31:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes4) view external returns (bytes32)"
                                }
                              },
                              "id": 2321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8129:70:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2324,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8209:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                    "typeString": "contract veBALDeploymentCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                    "typeString": "contract veBALDeploymentCoordinator"
                                  }
                                ],
                                "id": 2323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8201:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2322,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8201:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8201:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2313,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "8108:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 2315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1964,
                            "src": "8108:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8108:107:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2327,
                        "nodeType": "ExpressionStatement",
                        "src": "8108:107:26"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2328,
                              "name": "_balancerTokenAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1976,
                              "src": "8225:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                                "typeString": "contract IBalancerTokenAdmin"
                              }
                            },
                            "id": 2330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "activate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 294,
                            "src": "8225:28:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 2331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8225:30:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2332,
                        "nodeType": "ExpressionStatement",
                        "src": "8225:30:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2338,
                                      "name": "IBalancerTokenAdmin",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 312,
                                      "src": "8612:19:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IBalancerTokenAdmin_$312_$",
                                        "typeString": "type(contract IBalancerTokenAdmin)"
                                      }
                                    },
                                    "id": 2339,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "mint",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 311,
                                    "src": "8612:24:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function IBalancerTokenAdmin.mint(address,uint256)"
                                    }
                                  },
                                  "id": 2340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "8612:33:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 2336,
                                  "name": "_balancerTokenAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1976,
                                  "src": "8580:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBalancerTokenAdmin_$312",
                                    "typeString": "contract IBalancerTokenAdmin"
                                  }
                                },
                                "id": 2337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getActionId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1130,
                                "src": "8580:31:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes4) view external returns (bytes32)"
                                }
                              },
                              "id": 2341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8580:66:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2344,
                                  "name": "_balancerMinter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1984,
                                  "src": "8668:15:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                                    "typeString": "contract IBalancerMinter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBalancerMinter_$175",
                                    "typeString": "contract IBalancerMinter"
                                  }
                                ],
                                "id": 2343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8660:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2342,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8660:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8660:24:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2333,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "8546:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 2335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1964,
                            "src": "8546:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8546:148:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2347,
                        "nodeType": "ExpressionStatement",
                        "src": "8546:148:26"
                      },
                      {
                        "id": 2398,
                        "nodeType": "Block",
                        "src": "9244:663:26",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2353,
                                          "name": "IGaugeController",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 471,
                                          "src": "9517:16:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                            "typeString": "type(contract IGaugeController)"
                                          }
                                        },
                                        "id": 2354,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "add_type",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 439,
                                        "src": "9517:25:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_string_calldata_ptr_$_t_uint256_$returns$__$",
                                          "typeString": "function IGaugeController.add_type(string calldata,uint256)"
                                        }
                                      },
                                      "id": 2355,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "9517:34:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2351,
                                      "name": "authorizerAdaptor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2268,
                                      "src": "9487:17:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                        "typeString": "contract IAuthorizerAdaptor"
                                      }
                                    },
                                    "id": 2352,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getActionId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1130,
                                    "src": "9487:29:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes4) view external returns (bytes32)"
                                    }
                                  },
                                  "id": 2356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9487:65:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2359,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "9562:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    ],
                                    "id": 2358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9554:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2357,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9554:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2360,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9554:13:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2348,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2230,
                                  "src": "9466:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 2350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "grantRole",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1964,
                                "src": "9466:20:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                  "typeString": "function (bytes32,address) external"
                                }
                              },
                              "id": 2361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9466:102:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2362,
                            "nodeType": "ExpressionStatement",
                            "src": "9466:102:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "4c6971756964697479204d696e696e6720436f6d6d6974746565",
                                  "id": 2364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9597:28:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_31523e1304d4e417006923f44709e225a362669aa5fb66199a55e1d9fd70ce86",
                                    "typeString": "literal_string \"Liquidity Mining Committee\""
                                  },
                                  "value": "Liquidity Mining Committee"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_31523e1304d4e417006923f44709e225a362669aa5fb66199a55e1d9fd70ce86",
                                    "typeString": "literal_string \"Liquidity Mining Committee\""
                                  }
                                ],
                                "id": 2363,
                                "name": "_addGaugeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2859,
                                "src": "9583:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 2365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9583:43:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2366,
                            "nodeType": "ExpressionStatement",
                            "src": "9583:43:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "766542414c",
                                  "id": 2368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9654:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c88ffeeaa99daf9b9538525695daf608ea69d8f0d8f7208315f78b5f963a1470",
                                    "typeString": "literal_string \"veBAL\""
                                  },
                                  "value": "veBAL"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c88ffeeaa99daf9b9538525695daf608ea69d8f0d8f7208315f78b5f963a1470",
                                    "typeString": "literal_string \"veBAL\""
                                  }
                                ],
                                "id": 2367,
                                "name": "_addGaugeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2859,
                                "src": "9640:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 2369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9640:22:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2370,
                            "nodeType": "ExpressionStatement",
                            "src": "9640:22:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "457468657265756d",
                                  "id": 2372,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9690:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_564ccaf7594d66b1eaaea24fe01f0585bf52ee70852af4eac0cc4b04711cd0e2",
                                    "typeString": "literal_string \"Ethereum\""
                                  },
                                  "value": "Ethereum"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_564ccaf7594d66b1eaaea24fe01f0585bf52ee70852af4eac0cc4b04711cd0e2",
                                    "typeString": "literal_string \"Ethereum\""
                                  }
                                ],
                                "id": 2371,
                                "name": "_addGaugeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2859,
                                "src": "9676:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 2373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9676:25:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2374,
                            "nodeType": "ExpressionStatement",
                            "src": "9676:25:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "506f6c79676f6e",
                                  "id": 2376,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9729:9:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_890af8db8ca1aa1e915857edbc2717639ebd8a22c786f9e0e776d6a1aacb5e71",
                                    "typeString": "literal_string \"Polygon\""
                                  },
                                  "value": "Polygon"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_890af8db8ca1aa1e915857edbc2717639ebd8a22c786f9e0e776d6a1aacb5e71",
                                    "typeString": "literal_string \"Polygon\""
                                  }
                                ],
                                "id": 2375,
                                "name": "_addGaugeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2859,
                                "src": "9715:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 2377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9715:24:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2378,
                            "nodeType": "ExpressionStatement",
                            "src": "9715:24:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "417262697472756d",
                                  "id": 2380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9767:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_750da875776dd158bbe74185d975d4afe4511978a37b81a96b7545fc4d386ff1",
                                    "typeString": "literal_string \"Arbitrum\""
                                  },
                                  "value": "Arbitrum"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_750da875776dd158bbe74185d975d4afe4511978a37b81a96b7545fc4d386ff1",
                                    "typeString": "literal_string \"Arbitrum\""
                                  }
                                ],
                                "id": 2379,
                                "name": "_addGaugeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2859,
                                "src": "9753:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 2381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9753:25:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2382,
                            "nodeType": "ExpressionStatement",
                            "src": "9753:25:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2388,
                                          "name": "IGaugeController",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 471,
                                          "src": "9845:16:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                            "typeString": "type(contract IGaugeController)"
                                          }
                                        },
                                        "id": 2389,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "add_type",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 439,
                                        "src": "9845:25:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_string_calldata_ptr_$_t_uint256_$returns$__$",
                                          "typeString": "function IGaugeController.add_type(string calldata,uint256)"
                                        }
                                      },
                                      "id": 2390,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "9845:34:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2386,
                                      "name": "authorizerAdaptor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2268,
                                      "src": "9815:17:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                        "typeString": "contract IAuthorizerAdaptor"
                                      }
                                    },
                                    "id": 2387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getActionId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1130,
                                    "src": "9815:29:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes4) view external returns (bytes32)"
                                    }
                                  },
                                  "id": 2391,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9815:65:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2394,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "9890:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    ],
                                    "id": 2393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9882:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2392,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9882:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2395,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9882:13:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2383,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2230,
                                  "src": "9793:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 2385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "revokeRole",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1971,
                                "src": "9793:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                  "typeString": "function (bytes32,address) external"
                                }
                              },
                              "id": 2396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9793:103:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2397,
                            "nodeType": "ExpressionStatement",
                            "src": "9793:103:26"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2404,
                                      "name": "IGaugeController",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 471,
                                      "src": "10424:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                        "typeString": "type(contract IGaugeController)"
                                      }
                                    },
                                    "id": 2405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "add_gauge",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 453,
                                    "src": "10424:26:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_int128_$returns$__$",
                                      "typeString": "function IGaugeController.add_gauge(address,int128)"
                                    }
                                  },
                                  "id": 2406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "10424:35:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 2402,
                                  "name": "authorizerAdaptor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2268,
                                  "src": "10394:17:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                    "typeString": "contract IAuthorizerAdaptor"
                                  }
                                },
                                "id": 2403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getActionId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1130,
                                "src": "10394:29:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes4) view external returns (bytes32)"
                                }
                              },
                              "id": 2407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10394:66:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2410,
                                  "name": "_gaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1988,
                                  "src": "10470:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                    "typeString": "contract IGaugeAdder"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                    "typeString": "contract IGaugeAdder"
                                  }
                                ],
                                "id": 2409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10462:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2408,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10462:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10462:20:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2399,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "10373:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 2401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1964,
                            "src": "10373:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10373:110:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2413,
                        "nodeType": "ExpressionStatement",
                        "src": "10373:110:26"
                      },
                      {
                        "id": 2476,
                        "nodeType": "Block",
                        "src": "10985:1178:26",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2419,
                                          "name": "IGaugeController",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 471,
                                          "src": "11050:16:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                            "typeString": "type(contract IGaugeController)"
                                          }
                                        },
                                        "id": 2420,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "add_gauge",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 453,
                                        "src": "11050:26:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_int128_$returns$__$",
                                          "typeString": "function IGaugeController.add_gauge(address,int128)"
                                        }
                                      },
                                      "id": 2421,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "11050:35:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2417,
                                      "name": "authorizerAdaptor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2268,
                                      "src": "11020:17:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                        "typeString": "contract IAuthorizerAdaptor"
                                      }
                                    },
                                    "id": 2418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getActionId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1130,
                                    "src": "11020:29:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes4) view external returns (bytes32)"
                                    }
                                  },
                                  "id": 2422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11020:66:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2425,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "11096:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    ],
                                    "id": 2424,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11088:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2423,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11088:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2426,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11088:13:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2414,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2230,
                                  "src": "10999:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 2416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "grantRole",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1964,
                                "src": "10999:20:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                  "typeString": "function (bytes32,address) external"
                                }
                              },
                              "id": 2427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10999:103:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2428,
                            "nodeType": "ExpressionStatement",
                            "src": "10999:103:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2430,
                                      "name": "IGaugeAdder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 403,
                                      "src": "11187:11:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                        "typeString": "type(contract IGaugeAdder)"
                                      }
                                    },
                                    "id": 2431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "GaugeType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 328,
                                    "src": "11187:21:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                      "typeString": "type(enum IGaugeAdder.GaugeType)"
                                    }
                                  },
                                  "id": 2432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "LiquidityMiningCommittee",
                                  "nodeType": "MemberAccess",
                                  "src": "11187:46:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  }
                                },
                                {
                                  "hexValue": "4c6971756964697479204d696e696e6720436f6d6d69747465652042414c20486f6c646572",
                                  "id": 2433,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11251:39:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_1675efa7780bcfeb3fafbc3f669649e9e5f3ad186a7e0181a52acaa601fa1543",
                                    "typeString": "literal_string \"Liquidity Mining Committee BAL Holder\""
                                  },
                                  "value": "Liquidity Mining Committee BAL Holder"
                                },
                                {
                                  "id": 2434,
                                  "name": "lmCommitteeMultisig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1997,
                                  "src": "11308:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_1675efa7780bcfeb3fafbc3f669649e9e5f3ad186a7e0181a52acaa601fa1543",
                                    "typeString": "literal_string \"Liquidity Mining Committee BAL Holder\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2429,
                                "name": "_createSingleRecipientGauge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2933,
                                "src": "11142:27:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_GaugeType_$328_$_t_string_memory_ptr_$_t_address_$returns$__$",
                                  "typeString": "function (enum IGaugeAdder.GaugeType,string memory,address)"
                                }
                              },
                              "id": 2435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11142:199:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2436,
                            "nodeType": "ExpressionStatement",
                            "src": "11142:199:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2438,
                                      "name": "IGaugeAdder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 403,
                                      "src": "11426:11:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                        "typeString": "type(contract IGaugeAdder)"
                                      }
                                    },
                                    "id": 2439,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "GaugeType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 328,
                                    "src": "11426:21:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                      "typeString": "type(enum IGaugeAdder.GaugeType)"
                                    }
                                  },
                                  "id": 2440,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "veBAL",
                                  "nodeType": "MemberAccess",
                                  "src": "11426:27:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  }
                                },
                                {
                                  "hexValue": "54656d706f7261727920766542414c204c6971756964697479204d696e696e672042414c20486f6c646572",
                                  "id": 2441,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11471:45:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_31e6e856bc5de865216f077303bc5d50a8c83a17a001ccd2851ca36203a81d51",
                                    "typeString": "literal_string \"Temporary veBAL Liquidity Mining BAL Holder\""
                                  },
                                  "value": "Temporary veBAL Liquidity Mining BAL Holder"
                                },
                                {
                                  "id": 2442,
                                  "name": "veBALGaugeRecipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2000,
                                  "src": "11534:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_31e6e856bc5de865216f077303bc5d50a8c83a17a001ccd2851ca36203a81d51",
                                    "typeString": "literal_string \"Temporary veBAL Liquidity Mining BAL Holder\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2437,
                                "name": "_createSingleRecipientGauge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2933,
                                "src": "11381:27:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_GaugeType_$328_$_t_string_memory_ptr_$_t_address_$returns$__$",
                                  "typeString": "function (enum IGaugeAdder.GaugeType,string memory,address)"
                                }
                              },
                              "id": 2443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11381:186:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2444,
                            "nodeType": "ExpressionStatement",
                            "src": "11381:186:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2446,
                                      "name": "IGaugeAdder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 403,
                                      "src": "11652:11:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                        "typeString": "type(contract IGaugeAdder)"
                                      }
                                    },
                                    "id": 2447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "GaugeType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 328,
                                    "src": "11652:21:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                      "typeString": "type(enum IGaugeAdder.GaugeType)"
                                    }
                                  },
                                  "id": 2448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Polygon",
                                  "nodeType": "MemberAccess",
                                  "src": "11652:29:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  }
                                },
                                {
                                  "hexValue": "54656d706f7261727920506f6c79676f6e204c6971756964697479204d696e696e672042414c20486f6c646572",
                                  "id": 2449,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11699:47:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f0f4d2ddd228882630cf254945dfcf483b7f79b61c413006c82b1e2525a309a2",
                                    "typeString": "literal_string \"Temporary Polygon Liquidity Mining BAL Holder\""
                                  },
                                  "value": "Temporary Polygon Liquidity Mining BAL Holder"
                                },
                                {
                                  "id": 2450,
                                  "name": "polygonGaugeRecipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2003,
                                  "src": "11764:21:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_f0f4d2ddd228882630cf254945dfcf483b7f79b61c413006c82b1e2525a309a2",
                                    "typeString": "literal_string \"Temporary Polygon Liquidity Mining BAL Holder\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2445,
                                "name": "_createSingleRecipientGauge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2933,
                                "src": "11607:27:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_GaugeType_$328_$_t_string_memory_ptr_$_t_address_$returns$__$",
                                  "typeString": "function (enum IGaugeAdder.GaugeType,string memory,address)"
                                }
                              },
                              "id": 2451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11607:192:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2452,
                            "nodeType": "ExpressionStatement",
                            "src": "11607:192:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2454,
                                      "name": "IGaugeAdder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 403,
                                      "src": "11883:11:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                        "typeString": "type(contract IGaugeAdder)"
                                      }
                                    },
                                    "id": 2455,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "GaugeType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 328,
                                    "src": "11883:21:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                      "typeString": "type(enum IGaugeAdder.GaugeType)"
                                    }
                                  },
                                  "id": 2456,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Arbitrum",
                                  "nodeType": "MemberAccess",
                                  "src": "11883:30:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  }
                                },
                                {
                                  "hexValue": "54656d706f7261727920417262697472756d204c6971756964697479204d696e696e672042414c20486f6c646572",
                                  "id": 2457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11931:48:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f7064da8be6492c31b2e4529119ea41573c85cc1e7cb114b15cfcfb325a77843",
                                    "typeString": "literal_string \"Temporary Arbitrum Liquidity Mining BAL Holder\""
                                  },
                                  "value": "Temporary Arbitrum Liquidity Mining BAL Holder"
                                },
                                {
                                  "id": 2458,
                                  "name": "arbitrumGaugeRecipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2006,
                                  "src": "11997:22:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_f7064da8be6492c31b2e4529119ea41573c85cc1e7cb114b15cfcfb325a77843",
                                    "typeString": "literal_string \"Temporary Arbitrum Liquidity Mining BAL Holder\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2453,
                                "name": "_createSingleRecipientGauge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2933,
                                "src": "11838:27:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_GaugeType_$328_$_t_string_memory_ptr_$_t_address_$returns$__$",
                                  "typeString": "function (enum IGaugeAdder.GaugeType,string memory,address)"
                                }
                              },
                              "id": 2459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11838:195:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2460,
                            "nodeType": "ExpressionStatement",
                            "src": "11838:195:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2466,
                                          "name": "IGaugeController",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 471,
                                          "src": "12100:16:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                            "typeString": "type(contract IGaugeController)"
                                          }
                                        },
                                        "id": 2467,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "add_gauge",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 453,
                                        "src": "12100:26:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_int128_$returns$__$",
                                          "typeString": "function IGaugeController.add_gauge(address,int128)"
                                        }
                                      },
                                      "id": 2468,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12100:35:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2464,
                                      "name": "authorizerAdaptor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2268,
                                      "src": "12070:17:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                        "typeString": "contract IAuthorizerAdaptor"
                                      }
                                    },
                                    "id": 2465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getActionId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1130,
                                    "src": "12070:29:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes4) view external returns (bytes32)"
                                    }
                                  },
                                  "id": 2469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12070:66:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2472,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "12146:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    ],
                                    "id": 2471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "12138:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2470,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "12138:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12138:13:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2461,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2230,
                                  "src": "12048:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 2463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "revokeRole",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1971,
                                "src": "12048:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                  "typeString": "function (bytes32,address) external"
                                }
                              },
                              "id": 2474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12048:104:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2475,
                            "nodeType": "ExpressionStatement",
                            "src": "12048:104:26"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2482,
                                      "name": "IStakingLiquidityGauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 603,
                                      "src": "12374:22:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IStakingLiquidityGauge_$603_$",
                                        "typeString": "type(contract IStakingLiquidityGauge)"
                                      }
                                    },
                                    "id": 2483,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "add_reward",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 595,
                                    "src": "12374:33:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$returns$__$",
                                      "typeString": "function IStakingLiquidityGauge.add_reward(address,address)"
                                    }
                                  },
                                  "id": 2484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "12374:42:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 2480,
                                  "name": "authorizerAdaptor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2268,
                                  "src": "12344:17:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                    "typeString": "contract IAuthorizerAdaptor"
                                  }
                                },
                                "id": 2481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getActionId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1130,
                                "src": "12344:29:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes4) view external returns (bytes32)"
                                }
                              },
                              "id": 2485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12344:73:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2486,
                              "name": "lmCommitteeMultisig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1997,
                              "src": "12431:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2477,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "12310:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 2479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1964,
                            "src": "12310:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12310:150:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2488,
                        "nodeType": "ExpressionStatement",
                        "src": "12310:150:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2494,
                                      "name": "IStakingLiquidityGauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 603,
                                      "src": "12535:22:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IStakingLiquidityGauge_$603_$",
                                        "typeString": "type(contract IStakingLiquidityGauge)"
                                      }
                                    },
                                    "id": 2495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "set_reward_distributor",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 602,
                                    "src": "12535:45:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$returns$__$",
                                      "typeString": "function IStakingLiquidityGauge.set_reward_distributor(address,address)"
                                    }
                                  },
                                  "id": 2496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "12535:54:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 2492,
                                  "name": "authorizerAdaptor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2268,
                                  "src": "12505:17:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                    "typeString": "contract IAuthorizerAdaptor"
                                  }
                                },
                                "id": 2493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getActionId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1130,
                                "src": "12505:29:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes4) view external returns (bytes32)"
                                }
                              },
                              "id": 2497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12505:85:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2498,
                              "name": "lmCommitteeMultisig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1997,
                              "src": "12604:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2489,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "12471:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 2491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1964,
                            "src": "12471:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12471:162:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2500,
                        "nodeType": "ExpressionStatement",
                        "src": "12471:162:26"
                      },
                      {
                        "expression": {
                          "id": 2504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2501,
                            "name": "firstStageActivationTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2013,
                            "src": "12644:24:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2502,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12671:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12671:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12644:42:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2505,
                        "nodeType": "ExpressionStatement",
                        "src": "12644:42:26"
                      },
                      {
                        "expression": {
                          "id": 2509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2506,
                            "name": "_currentDeploymentStage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2019,
                            "src": "12696:23:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                              "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2507,
                              "name": "DeploymentStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2011,
                              "src": "12722:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2011_$",
                                "typeString": "type(enum veBALDeploymentCoordinator.DeploymentStage)"
                              }
                            },
                            "id": 2508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FIRST_STAGE_DONE",
                            "nodeType": "MemberAccess",
                            "src": "12722:32:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                              "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                            }
                          },
                          "src": "12696:58:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                            "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                          }
                        },
                        "id": 2510,
                        "nodeType": "ExpressionStatement",
                        "src": "12696:58:26"
                      }
                    ]
                  },
                  "functionSelector": "2bd46566",
                  "id": 2512,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2211,
                      "modifierName": {
                        "id": 2210,
                        "name": "nonReentrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1292,
                        "src": "6584:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6584:12:26"
                    }
                  ],
                  "name": "performFirstStage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2209,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6572:2:26"
                  },
                  "returnParameters": {
                    "id": 2212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6597:0:26"
                  },
                  "scope": 2934,
                  "src": "6546:6215:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2688,
                    "nodeType": "Block",
                    "src": "12819:3456:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                                "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                              },
                              "id": 2521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2518,
                                "name": "_currentDeploymentStage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2019,
                                "src": "12837:23:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                                  "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2519,
                                  "name": "DeploymentStage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2011,
                                  "src": "12864:15:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2011_$",
                                    "typeString": "type(enum veBALDeploymentCoordinator.DeploymentStage)"
                                  }
                                },
                                "id": 2520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "FIRST_STAGE_DONE",
                                "nodeType": "MemberAccess",
                                "src": "12864:32:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                                  "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                                }
                              },
                              "src": "12837:59:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420726561647920666f72207365636f6e64207374616765",
                              "id": 2522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12898:28:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd19ce48bb4a5589afc86b7a3bdad344a9799f64790652cd676ef20866caf67b",
                                "typeString": "literal_string \"Not ready for second stage\""
                              },
                              "value": "Not ready for second stage"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd19ce48bb4a5589afc86b7a3bdad344a9799f64790652cd676ef20866caf67b",
                                "typeString": "literal_string \"Not ready for second stage\""
                              }
                            ],
                            "id": 2517,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12829:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12829:98:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2524,
                        "nodeType": "ExpressionStatement",
                        "src": "12829:98:26"
                      },
                      {
                        "assignments": [
                          2526
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2526,
                            "mutability": "mutable",
                            "name": "authorizer",
                            "nodeType": "VariableDeclaration",
                            "scope": 2688,
                            "src": "12938:29:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                              "typeString": "contract ICurrentAuthorizer"
                            },
                            "typeName": {
                              "id": 2525,
                              "name": "ICurrentAuthorizer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1972,
                              "src": "12938:18:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2529,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2527,
                            "name": "getAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2151,
                            "src": "12970:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$1972_$",
                              "typeString": "function () view returns (contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 2528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12970:15:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12938:47:26"
                      },
                      {
                        "assignments": [
                          2533
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2533,
                            "mutability": "mutable",
                            "name": "initialPools",
                            "nodeType": "VariableDeclaration",
                            "scope": 2688,
                            "src": "13180:39:26",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$32_memory_ptr",
                              "typeString": "address payable[32]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2530,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13180:15:26",
                                "stateMutability": "payable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 2532,
                              "length": {
                                "hexValue": "3332",
                                "id": 2531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13196:2:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "nodeType": "ArrayTypeName",
                              "src": "13180:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$32_storage_ptr",
                                "typeString": "address payable[32]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2567,
                        "initialValue": {
                          "components": [
                            {
                              "hexValue": "307830364466336232626242363861646338423065333032343433363932303337454439663931623432",
                              "id": 2534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13236:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x06Df3b2bbB68adc8B0e302443692037ED9f91b42"
                            },
                            {
                              "hexValue": "307830373266313442383541446436333438384444614438386638353546646134413939643661433942",
                              "id": 2535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13292:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x072f14B85ADd63488DDaD88f855Fda4A99d6aC9B"
                            },
                            {
                              "hexValue": "307830623039646541313637363866303739393036354334373562453032393139353033634232613335",
                              "id": 2536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13348:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x0b09deA16768f0799065C475bE02919503cB2a35"
                            },
                            {
                              "hexValue": "307831383630383466463739304336353038384241363934446631313735386661453439343345453945",
                              "id": 2537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13404:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x186084fF790C65088BA694Df11758faE4943EE9E"
                            },
                            {
                              "hexValue": "307831453139434632443733613732456631333332433838324632303533344236353139426530323736",
                              "id": 2538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13460:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x1E19CF2D73a72Ef1332C882F20534B6519Be0276"
                            },
                            {
                              "hexValue": "307832374339663731634333313436344239303645303030366434466342433839303046343866313566",
                              "id": 2539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13516:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x27C9f71cC31464B906E0006d4FcBC8900F48f15f"
                            },
                            {
                              "hexValue": "307833323239363936394566313445423063366432393636394335353044346130343439313330323330",
                              "id": 2540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13572:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x32296969Ef14EB0c6d29669C550D4a0449130230"
                            },
                            {
                              "hexValue": "307833353031393633323641454141396239386631393033666235653866633236383666383533313843",
                              "id": 2541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13628:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x350196326AEAA9b98f1903fb5e8fc2686f85318C"
                            },
                            {
                              "hexValue": "307833653546413935313865413935633345353333454233373743303031373032413941614341413332",
                              "id": 2542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13684:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x3e5FA9518eA95c3E533EB377C001702A9AaCAA32"
                            },
                            {
                              "hexValue": "307834626436443836644542644239463534313365363331416433383663343432374443394430314232",
                              "id": 2543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13740:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x4bd6D86dEBdB9F5413e631Ad386c4427DC9D01B2"
                            },
                            {
                              "hexValue": "307835313733356264464246453366433133644561384443363530324532453935383938393432393631",
                              "id": 2544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13796:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x51735bdFBFE3fC13dEa8DC6502E2E95898942961"
                            },
                            {
                              "hexValue": "307835643636466646363263313744383431393335623630646635463037663643463739426430463437",
                              "id": 2545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13852:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x5d66FfF62c17D841935b60df5F07f6CF79Bd0F47"
                            },
                            {
                              "hexValue": "307835663746413438643736353035334638644438354530353238343365313244323365334437424335",
                              "id": 2546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13908:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x5f7FA48d765053F8dD85E052843e12D23e3D7BC5"
                            },
                            {
                              "hexValue": "307837303236303546343334373131383331353839333843316133653566354133353964376233316261",
                              "id": 2547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13964:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x702605F43471183158938C1a3e5f5A359d7b31ba"
                            },
                            {
                              "hexValue": "307837423530373735333833643344366630323135413846323930663243396532654542424563656232",
                              "id": 2548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14020:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2"
                            },
                            {
                              "hexValue": "307837456464653043423035454431396530334139613437434435453533664335374644653163383063",
                              "id": 2549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14076:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x7Edde0CB05ED19e03A9a47CD5E53fC57FDe1c80c"
                            },
                            {
                              "hexValue": "307838663432303565313630343133336431383735613345373731414537653446326230383635363339",
                              "id": 2550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14132:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x8f4205e1604133d1875a3E771AE7e4F2b0865639"
                            },
                            {
                              "hexValue": "307839303239313331394631443465413361643464423044643866653945313242414637343945383435",
                              "id": 2551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14188:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x90291319F1D4eA3ad4dB0Dd8fe9E12BAF749E845"
                            },
                            {
                              "hexValue": "307839363634363933366239316436423944374430633437433439364166424633443665633742366638",
                              "id": 2552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14244:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x96646936b91d6B9D7D0c47C496AfBF3D6ec7B6f8"
                            },
                            {
                              "hexValue": "307839366241393032353331316532663437423834304131663638454435374133444631454138373437",
                              "id": 2553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14300:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x96bA9025311e2f47B840A1f68ED57A3DF1EA8747"
                            },
                            {
                              "hexValue": "307861303245346233643138443445364238643138416334323166426333646646463839333363343061",
                              "id": 2554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14356:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xa02E4b3d18D4E6B8d18Ac421fBc3dfFF8933c40a"
                            },
                            {
                              "hexValue": "307841364635343844463933646539323464373362653744323564433032353534633662443636644235",
                              "id": 2555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14412:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xA6F548DF93de924d73be7D25dC02554c6bD66dB5"
                            },
                            {
                              "hexValue": "307842616545433939633930453334323045633663316537413736396432413835366432383938653444",
                              "id": 2556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14468:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xBaeEC99c90E3420Ec6c1e7A769d2A856d2898e4D"
                            },
                            {
                              "hexValue": "307842463936313839456565393335376139354337373139663446353034374637366264453830344535",
                              "id": 2557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14524:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xBF96189Eee9357a95C7719f4F5047F76bdE804E5"
                            },
                            {
                              "hexValue": "307865323436396634376142353863663943463539463938323265334335446534393530613431433439",
                              "id": 2558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14580:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xe2469f47aB58cf9CF59F9822e3C5De4950a41C49"
                            },
                            {
                              "hexValue": "307845393934383144433737363931643845323435364535663346363143313831306164464331353033",
                              "id": 2559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14636:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xE99481DC77691d8E2456E5f3F61C1810adFC1503"
                            },
                            {
                              "hexValue": "307865433630613546654637396139326337343143623734466444366266433334304330323739423031",
                              "id": 2560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14692:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xeC60a5FeF79a92c741Cb74FdD6bfC340C0279B01"
                            },
                            {
                              "hexValue": "307845646630383566363562344636633135356531333135353530324566393235633961373536303033",
                              "id": 2561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14748:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xEdf085f65b4F6c155e13155502Ef925c9a756003"
                            },
                            {
                              "hexValue": "307845464161313630346538326531423341463834333062393031393263314239653831393765333737",
                              "id": 2562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14804:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xEFAa1604e82e1B3AF8430b90192c1B9e8197e377"
                            },
                            {
                              "hexValue": "307846344330444439423832444133364330373630356466383363386134313646313137323464383862",
                              "id": 2563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14860:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xF4C0DD9B82DA36C07605df83c8a416F11724d88b"
                            },
                            {
                              "hexValue": "307866356141663745653843333942363531434542463566314635304331303633314537386530656639",
                              "id": 2564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14916:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xf5aAf7Ee8C39B651CEBF5f1F50C10631E78e0ef9"
                            },
                            {
                              "hexValue": "307846656164643338396135633432373935324438666462383035374436433862613131353663433536",
                              "id": 2565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14972:42:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xFeadd389a5c427952D8fdb8057D6C8ba1156cC56"
                            }
                          ],
                          "id": 2566,
                          "isConstant": false,
                          "isInlineArray": true,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13222:1802:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$32_memory_ptr",
                            "typeString": "address payable[32] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13180:1844:26"
                      },
                      {
                        "id": 2607,
                        "nodeType": "Block",
                        "src": "15177:334:26",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2573,
                                          "name": "IGaugeAdder",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "15236:11:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                            "typeString": "type(contract IGaugeAdder)"
                                          }
                                        },
                                        "id": 2574,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "addGaugeFactory",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 402,
                                        "src": "15236:27:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILiquidityGaugeFactory_$519_$_t_enum$_GaugeType_$328_$returns$__$",
                                          "typeString": "function IGaugeAdder.addGaugeFactory(contract ILiquidityGaugeFactory,enum IGaugeAdder.GaugeType)"
                                        }
                                      },
                                      "id": 2575,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "15236:36:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2571,
                                      "name": "_gaugeAdder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1988,
                                      "src": "15212:11:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                        "typeString": "contract IGaugeAdder"
                                      }
                                    },
                                    "id": 2572,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getActionId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1130,
                                    "src": "15212:23:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes4) view external returns (bytes32)"
                                    }
                                  },
                                  "id": 2576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15212:61:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2579,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "15283:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    ],
                                    "id": 2578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15275:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2577,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15275:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2580,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15275:13:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2568,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2526,
                                  "src": "15191:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 2570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "grantRole",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1964,
                                "src": "15191:20:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                  "typeString": "function (bytes32,address) external"
                                }
                              },
                              "id": 2581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15191:98:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2582,
                            "nodeType": "ExpressionStatement",
                            "src": "15191:98:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2586,
                                  "name": "_ethereumGaugeFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1990,
                                  "src": "15332:21:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                                    "typeString": "contract ILiquidityGaugeFactory"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2587,
                                      "name": "IGaugeAdder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 403,
                                      "src": "15355:11:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                        "typeString": "type(contract IGaugeAdder)"
                                      }
                                    },
                                    "id": 2588,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "GaugeType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 328,
                                    "src": "15355:21:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                      "typeString": "type(enum IGaugeAdder.GaugeType)"
                                    }
                                  },
                                  "id": 2589,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Ethereum",
                                  "nodeType": "MemberAccess",
                                  "src": "15355:30:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                                    "typeString": "contract ILiquidityGaugeFactory"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  }
                                ],
                                "expression": {
                                  "id": 2583,
                                  "name": "_gaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1988,
                                  "src": "15304:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                    "typeString": "contract IGaugeAdder"
                                  }
                                },
                                "id": 2585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addGaugeFactory",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 402,
                                "src": "15304:27:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILiquidityGaugeFactory_$519_$_t_enum$_GaugeType_$328_$returns$__$",
                                  "typeString": "function (contract ILiquidityGaugeFactory,enum IGaugeAdder.GaugeType) external"
                                }
                              },
                              "id": 2590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15304:82:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2591,
                            "nodeType": "ExpressionStatement",
                            "src": "15304:82:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2597,
                                          "name": "IGaugeAdder",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "15447:11:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                            "typeString": "type(contract IGaugeAdder)"
                                          }
                                        },
                                        "id": 2598,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "addGaugeFactory",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 402,
                                        "src": "15447:27:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILiquidityGaugeFactory_$519_$_t_enum$_GaugeType_$328_$returns$__$",
                                          "typeString": "function IGaugeAdder.addGaugeFactory(contract ILiquidityGaugeFactory,enum IGaugeAdder.GaugeType)"
                                        }
                                      },
                                      "id": 2599,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "15447:36:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2595,
                                      "name": "_gaugeAdder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1988,
                                      "src": "15423:11:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                        "typeString": "contract IGaugeAdder"
                                      }
                                    },
                                    "id": 2596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getActionId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1130,
                                    "src": "15423:23:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes4) view external returns (bytes32)"
                                    }
                                  },
                                  "id": 2600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15423:61:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2603,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "15494:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    ],
                                    "id": 2602,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15486:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2601,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15486:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15486:13:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2592,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2526,
                                  "src": "15401:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 2594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "revokeRole",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1971,
                                "src": "15401:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                  "typeString": "function (bytes32,address) external"
                                }
                              },
                              "id": 2605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15401:99:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2606,
                            "nodeType": "ExpressionStatement",
                            "src": "15401:99:26"
                          }
                        ]
                      },
                      {
                        "id": 2677,
                        "nodeType": "Block",
                        "src": "15591:555:26",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2613,
                                          "name": "IGaugeAdder",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "15650:11:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                            "typeString": "type(contract IGaugeAdder)"
                                          }
                                        },
                                        "id": 2614,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "addEthereumGauge",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 382,
                                        "src": "15650:28:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_IStakingLiquidityGauge_$603_$returns$__$",
                                          "typeString": "function IGaugeAdder.addEthereumGauge(contract IStakingLiquidityGauge)"
                                        }
                                      },
                                      "id": 2615,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "15650:37:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2611,
                                      "name": "_gaugeAdder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1988,
                                      "src": "15626:11:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                        "typeString": "contract IGaugeAdder"
                                      }
                                    },
                                    "id": 2612,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getActionId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1130,
                                    "src": "15626:23:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes4) view external returns (bytes32)"
                                    }
                                  },
                                  "id": 2616,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15626:62:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2619,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "15698:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    ],
                                    "id": 2618,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15690:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2617,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15690:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2620,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15690:13:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2608,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2526,
                                  "src": "15605:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 2610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "grantRole",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1964,
                                "src": "15605:20:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                  "typeString": "function (bytes32,address) external"
                                }
                              },
                              "id": 2621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15605:99:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2622,
                            "nodeType": "ExpressionStatement",
                            "src": "15605:99:26"
                          },
                          {
                            "assignments": [
                              2624
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2624,
                                "mutability": "mutable",
                                "name": "poolsLength",
                                "nodeType": "VariableDeclaration",
                                "scope": 2677,
                                "src": "15719:19:26",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2623,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15719:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2627,
                            "initialValue": {
                              "expression": {
                                "id": 2625,
                                "name": "initialPools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2533,
                                "src": "15741:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$32_memory_ptr",
                                  "typeString": "address payable[32] memory"
                                }
                              },
                              "id": 2626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "15741:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "15719:41:26"
                          },
                          {
                            "body": {
                              "id": 2660,
                              "nodeType": "Block",
                              "src": "15816:205:26",
                              "statements": [
                                {
                                  "assignments": [
                                    2639
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 2639,
                                      "mutability": "mutable",
                                      "name": "gauge",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 2660,
                                      "src": "15834:21:26",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                        "typeString": "contract ILiquidityGauge"
                                      },
                                      "typeName": {
                                        "id": 2638,
                                        "name": "ILiquidityGauge",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 499,
                                        "src": "15834:15:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                          "typeString": "contract ILiquidityGauge"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 2648,
                                  "initialValue": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 2643,
                                              "name": "initialPools",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2533,
                                              "src": "15903:12:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_payable_$32_memory_ptr",
                                                "typeString": "address payable[32] memory"
                                              }
                                            },
                                            "id": 2645,
                                            "indexExpression": {
                                              "id": 2644,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2629,
                                              "src": "15916:1:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "15903:15:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2641,
                                            "name": "_ethereumGaugeFactory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1990,
                                            "src": "15874:21:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                                              "typeString": "contract ILiquidityGaugeFactory"
                                            }
                                          },
                                          "id": 2642,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "create",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 518,
                                          "src": "15874:28:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
                                            "typeString": "function (address) external returns (address)"
                                          }
                                        },
                                        "id": 2646,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "15874:45:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2640,
                                      "name": "ILiquidityGauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 499,
                                      "src": "15858:15:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ILiquidityGauge_$499_$",
                                        "typeString": "type(contract ILiquidityGauge)"
                                      }
                                    },
                                    "id": 2647,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15858:62:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                      "typeString": "contract ILiquidityGauge"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "15834:86:26"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 2655,
                                                "name": "gauge",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2639,
                                                "src": "15998:5:26",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                                  "typeString": "contract ILiquidityGauge"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                                  "typeString": "contract ILiquidityGauge"
                                                }
                                              ],
                                              "id": 2654,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "15990:7:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2653,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "15990:7:26",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2656,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "15990:14:26",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 2652,
                                          "name": "IStakingLiquidityGauge",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 603,
                                          "src": "15967:22:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IStakingLiquidityGauge_$603_$",
                                            "typeString": "type(contract IStakingLiquidityGauge)"
                                          }
                                        },
                                        "id": 2657,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "15967:38:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStakingLiquidityGauge_$603",
                                          "typeString": "contract IStakingLiquidityGauge"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IStakingLiquidityGauge_$603",
                                          "typeString": "contract IStakingLiquidityGauge"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2649,
                                        "name": "_gaugeAdder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1988,
                                        "src": "15938:11:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                          "typeString": "contract IGaugeAdder"
                                        }
                                      },
                                      "id": 2651,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addEthereumGauge",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 382,
                                      "src": "15938:28:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IStakingLiquidityGauge_$603_$returns$__$",
                                        "typeString": "function (contract IStakingLiquidityGauge) external"
                                      }
                                    },
                                    "id": 2658,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15938:68:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2659,
                                  "nodeType": "ExpressionStatement",
                                  "src": "15938:68:26"
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2632,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2629,
                                "src": "15794:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2633,
                                "name": "poolsLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2624,
                                "src": "15798:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15794:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2661,
                            "initializationExpression": {
                              "assignments": [
                                2629
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2629,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2661,
                                  "src": "15779:9:26",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2628,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15779:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2631,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 2630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15791:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15779:13:26"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 2636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "15811:3:26",
                                "subExpression": {
                                  "id": 2635,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2629,
                                  "src": "15811:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2637,
                              "nodeType": "ExpressionStatement",
                              "src": "15811:3:26"
                            },
                            "nodeType": "ForStatement",
                            "src": "15774:247:26"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 2667,
                                          "name": "IGaugeAdder",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "16081:11:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                            "typeString": "type(contract IGaugeAdder)"
                                          }
                                        },
                                        "id": 2668,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "addEthereumGauge",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 382,
                                        "src": "16081:28:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_IStakingLiquidityGauge_$603_$returns$__$",
                                          "typeString": "function IGaugeAdder.addEthereumGauge(contract IStakingLiquidityGauge)"
                                        }
                                      },
                                      "id": 2669,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "16081:37:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2665,
                                      "name": "_gaugeAdder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1988,
                                      "src": "16057:11:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                        "typeString": "contract IGaugeAdder"
                                      }
                                    },
                                    "id": 2666,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getActionId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1130,
                                    "src": "16057:23:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes4) view external returns (bytes32)"
                                    }
                                  },
                                  "id": 2670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16057:62:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2673,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "16129:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                        "typeString": "contract veBALDeploymentCoordinator"
                                      }
                                    ],
                                    "id": 2672,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16121:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2671,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16121:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2674,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16121:13:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2662,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2526,
                                  "src": "16035:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 2664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "revokeRole",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1971,
                                "src": "16035:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                  "typeString": "function (bytes32,address) external"
                                }
                              },
                              "id": 2675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16035:100:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2676,
                            "nodeType": "ExpressionStatement",
                            "src": "16035:100:26"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 2681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2678,
                            "name": "secondStageActivationTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2015,
                            "src": "16156:25:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2679,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "16184:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16184:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16156:43:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2682,
                        "nodeType": "ExpressionStatement",
                        "src": "16156:43:26"
                      },
                      {
                        "expression": {
                          "id": 2686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2683,
                            "name": "_currentDeploymentStage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2019,
                            "src": "16209:23:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                              "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2684,
                              "name": "DeploymentStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2011,
                              "src": "16235:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2011_$",
                                "typeString": "type(enum veBALDeploymentCoordinator.DeploymentStage)"
                              }
                            },
                            "id": 2685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "SECOND_STAGE_DONE",
                            "nodeType": "MemberAccess",
                            "src": "16235:33:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                              "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                            }
                          },
                          "src": "16209:59:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                            "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                          }
                        },
                        "id": 2687,
                        "nodeType": "ExpressionStatement",
                        "src": "16209:59:26"
                      }
                    ]
                  },
                  "functionSelector": "b1e70e80",
                  "id": 2689,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2515,
                      "modifierName": {
                        "id": 2514,
                        "name": "nonReentrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1292,
                        "src": "12806:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12806:12:26"
                    }
                  ],
                  "name": "performSecondStage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2513,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12794:2:26"
                  },
                  "returnParameters": {
                    "id": 2516,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12819:0:26"
                  },
                  "scope": 2934,
                  "src": "12767:3508:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2810,
                    "nodeType": "Block",
                    "src": "16332:1952:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                                "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                              },
                              "id": 2698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2695,
                                "name": "_currentDeploymentStage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2019,
                                "src": "16391:23:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                                  "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2696,
                                  "name": "DeploymentStage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2011,
                                  "src": "16418:15:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2011_$",
                                    "typeString": "type(enum veBALDeploymentCoordinator.DeploymentStage)"
                                  }
                                },
                                "id": 2697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "SECOND_STAGE_DONE",
                                "nodeType": "MemberAccess",
                                "src": "16418:33:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                                  "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                                }
                              },
                              "src": "16391:60:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420726561647920666f72207468697264207374616765",
                              "id": 2699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16453:27:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2c04b552f382b0b69303d16509b0855adffd0a68bf891fe2aa69a10cc431f5de",
                                "typeString": "literal_string \"Not ready for third stage\""
                              },
                              "value": "Not ready for third stage"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2c04b552f382b0b69303d16509b0855adffd0a68bf891fe2aa69a10cc431f5de",
                                "typeString": "literal_string \"Not ready for third stage\""
                              }
                            ],
                            "id": 2694,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16383:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16383:98:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2701,
                        "nodeType": "ExpressionStatement",
                        "src": "16383:98:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2703,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "16512:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "16512:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2707,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2705,
                                      "name": "secondStageActivationTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2015,
                                      "src": "16532:25:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 2706,
                                      "name": "_thirdStageDelay",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2023,
                                      "src": "16560:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "16532:44:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2708,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "16531:46:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16512:65:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44656c61792066726f6d207365636f6e64207374616765206e6f742079657420656c6170736564",
                              "id": 2710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16591:41:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_595ebe7565e1eb2da6fa3b1aecabad409a972c89959bcde44aac740e8ec426c6",
                                "typeString": "literal_string \"Delay from second stage not yet elapsed\""
                              },
                              "value": "Delay from second stage not yet elapsed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_595ebe7565e1eb2da6fa3b1aecabad409a972c89959bcde44aac740e8ec426c6",
                                "typeString": "literal_string \"Delay from second stage not yet elapsed\""
                              }
                            ],
                            "id": 2702,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16491:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16491:151:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2712,
                        "nodeType": "ExpressionStatement",
                        "src": "16491:151:26"
                      },
                      {
                        "assignments": [
                          2714
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2714,
                            "mutability": "mutable",
                            "name": "authorizerAdaptor",
                            "nodeType": "VariableDeclaration",
                            "scope": 2810,
                            "src": "16940:36:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                              "typeString": "contract IAuthorizerAdaptor"
                            },
                            "typeName": {
                              "id": 2713,
                              "name": "IAuthorizerAdaptor",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 28,
                              "src": "16940:18:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2717,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2715,
                            "name": "getAuthorizerAdaptor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2159,
                            "src": "16979:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAuthorizerAdaptor_$28_$",
                              "typeString": "function () view returns (contract IAuthorizerAdaptor)"
                            }
                          },
                          "id": 2716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16979:22:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16940:61:26"
                      },
                      {
                        "assignments": [
                          2719
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2719,
                            "mutability": "mutable",
                            "name": "authorizer",
                            "nodeType": "VariableDeclaration",
                            "scope": 2810,
                            "src": "17211:29:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                              "typeString": "contract ICurrentAuthorizer"
                            },
                            "typeName": {
                              "id": 2718,
                              "name": "ICurrentAuthorizer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1972,
                              "src": "17211:18:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2722,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2720,
                            "name": "getAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2151,
                            "src": "17243:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$1972_$",
                              "typeString": "function () view returns (contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 2721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17243:15:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17211:47:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2728,
                                      "name": "IGaugeController",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 471,
                                      "src": "17332:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                        "typeString": "type(contract IGaugeController)"
                                      }
                                    },
                                    "id": 2729,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "change_type_weight",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 446,
                                    "src": "17332:35:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_int128_$_t_uint256_$returns$__$",
                                      "typeString": "function IGaugeController.change_type_weight(int128,uint256)"
                                    }
                                  },
                                  "id": 2730,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "17332:44:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 2726,
                                  "name": "authorizerAdaptor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2714,
                                  "src": "17302:17:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                    "typeString": "contract IAuthorizerAdaptor"
                                  }
                                },
                                "id": 2727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getActionId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1130,
                                "src": "17302:29:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes4) view external returns (bytes32)"
                                }
                              },
                              "id": 2731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17302:75:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2734,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17399:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                    "typeString": "contract veBALDeploymentCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                    "typeString": "contract veBALDeploymentCoordinator"
                                  }
                                ],
                                "id": 2733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17391:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2732,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17391:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17391:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2723,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2719,
                              "src": "17268:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 2725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1964,
                            "src": "17268:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17268:146:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2737,
                        "nodeType": "ExpressionStatement",
                        "src": "17268:146:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 2739,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "17445:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 2740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "GaugeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 328,
                                "src": "17445:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                  "typeString": "type(enum IGaugeAdder.GaugeType)"
                                }
                              },
                              "id": 2741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "LiquidityMiningCommittee",
                              "nodeType": "MemberAccess",
                              "src": "17445:46:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            },
                            {
                              "id": 2742,
                              "name": "LM_COMMITTEE_WEIGHT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "17493:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2738,
                            "name": "_setGaugeTypeWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2887,
                            "src": "17425:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_GaugeType_$328_$_t_uint256_$returns$__$",
                              "typeString": "function (enum IGaugeAdder.GaugeType,uint256)"
                            }
                          },
                          "id": 2743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17425:88:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2744,
                        "nodeType": "ExpressionStatement",
                        "src": "17425:88:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 2746,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "17543:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 2747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "GaugeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 328,
                                "src": "17543:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                  "typeString": "type(enum IGaugeAdder.GaugeType)"
                                }
                              },
                              "id": 2748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "veBAL",
                              "nodeType": "MemberAccess",
                              "src": "17543:27:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            },
                            {
                              "id": 2749,
                              "name": "VEBAL_WEIGHT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2029,
                              "src": "17572:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2745,
                            "name": "_setGaugeTypeWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2887,
                            "src": "17523:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_GaugeType_$328_$_t_uint256_$returns$__$",
                              "typeString": "function (enum IGaugeAdder.GaugeType,uint256)"
                            }
                          },
                          "id": 2750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17523:62:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2751,
                        "nodeType": "ExpressionStatement",
                        "src": "17523:62:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 2753,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "17615:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 2754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "GaugeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 328,
                                "src": "17615:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                  "typeString": "type(enum IGaugeAdder.GaugeType)"
                                }
                              },
                              "id": 2755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Ethereum",
                              "nodeType": "MemberAccess",
                              "src": "17615:30:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            },
                            {
                              "id": 2756,
                              "name": "ETHEREUM_WEIGHT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2032,
                              "src": "17647:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2752,
                            "name": "_setGaugeTypeWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2887,
                            "src": "17595:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_GaugeType_$328_$_t_uint256_$returns$__$",
                              "typeString": "function (enum IGaugeAdder.GaugeType,uint256)"
                            }
                          },
                          "id": 2757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17595:68:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2758,
                        "nodeType": "ExpressionStatement",
                        "src": "17595:68:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 2760,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "17693:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 2761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "GaugeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 328,
                                "src": "17693:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                  "typeString": "type(enum IGaugeAdder.GaugeType)"
                                }
                              },
                              "id": 2762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Polygon",
                              "nodeType": "MemberAccess",
                              "src": "17693:29:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            },
                            {
                              "id": 2763,
                              "name": "POLYGON_WEIGHT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2035,
                              "src": "17724:14:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2759,
                            "name": "_setGaugeTypeWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2887,
                            "src": "17673:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_GaugeType_$328_$_t_uint256_$returns$__$",
                              "typeString": "function (enum IGaugeAdder.GaugeType,uint256)"
                            }
                          },
                          "id": 2764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17673:66:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2765,
                        "nodeType": "ExpressionStatement",
                        "src": "17673:66:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 2767,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "17769:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 2768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "GaugeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 328,
                                "src": "17769:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                  "typeString": "type(enum IGaugeAdder.GaugeType)"
                                }
                              },
                              "id": 2769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Arbitrum",
                              "nodeType": "MemberAccess",
                              "src": "17769:30:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            },
                            {
                              "id": 2770,
                              "name": "ARBITRUM_WEIGHT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2038,
                              "src": "17801:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2766,
                            "name": "_setGaugeTypeWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2887,
                            "src": "17749:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_GaugeType_$328_$_t_uint256_$returns$__$",
                              "typeString": "function (enum IGaugeAdder.GaugeType,uint256)"
                            }
                          },
                          "id": 2771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17749:68:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2772,
                        "nodeType": "ExpressionStatement",
                        "src": "17749:68:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2778,
                                      "name": "IGaugeController",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 471,
                                      "src": "17893:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                        "typeString": "type(contract IGaugeController)"
                                      }
                                    },
                                    "id": 2779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "change_type_weight",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 446,
                                    "src": "17893:35:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_int128_$_t_uint256_$returns$__$",
                                      "typeString": "function IGaugeController.change_type_weight(int128,uint256)"
                                    }
                                  },
                                  "id": 2780,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "17893:44:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 2776,
                                  "name": "authorizerAdaptor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2714,
                                  "src": "17863:17:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                    "typeString": "contract IAuthorizerAdaptor"
                                  }
                                },
                                "id": 2777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getActionId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1130,
                                "src": "17863:29:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes4) view external returns (bytes32)"
                                }
                              },
                              "id": 2781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17863:75:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2784,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17960:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                    "typeString": "contract veBALDeploymentCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                    "typeString": "contract veBALDeploymentCoordinator"
                                  }
                                ],
                                "id": 2783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17952:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2782,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17952:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17952:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2773,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2719,
                              "src": "17828:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 2775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revokeRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1971,
                            "src": "17828:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17828:147:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2787,
                        "nodeType": "ExpressionStatement",
                        "src": "17828:147:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2791,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2719,
                                  "src": "18109:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 2792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "DEFAULT_ADMIN_ROLE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1957,
                                "src": "18109:29:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                  "typeString": "function () view external returns (bytes32)"
                                }
                              },
                              "id": 2793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18109:31:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2796,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "18150:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                    "typeString": "contract veBALDeploymentCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALDeploymentCoordinator_$2934",
                                    "typeString": "contract veBALDeploymentCoordinator"
                                  }
                                ],
                                "id": 2795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18142:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2794,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18142:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18142:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2788,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2719,
                              "src": "18087:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 2790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revokeRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1971,
                            "src": "18087:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18087:69:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2799,
                        "nodeType": "ExpressionStatement",
                        "src": "18087:69:26"
                      },
                      {
                        "expression": {
                          "id": 2803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2800,
                            "name": "thirdStageActivationTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "18167:24:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2801,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "18194:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "18194:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18167:42:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2804,
                        "nodeType": "ExpressionStatement",
                        "src": "18167:42:26"
                      },
                      {
                        "expression": {
                          "id": 2808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2805,
                            "name": "_currentDeploymentStage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2019,
                            "src": "18219:23:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                              "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2806,
                              "name": "DeploymentStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2011,
                              "src": "18245:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2011_$",
                                "typeString": "type(enum veBALDeploymentCoordinator.DeploymentStage)"
                              }
                            },
                            "id": 2807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "THIRD_STAGE_DONE",
                            "nodeType": "MemberAccess",
                            "src": "18245:32:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                              "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                            }
                          },
                          "src": "18219:58:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2011",
                            "typeString": "enum veBALDeploymentCoordinator.DeploymentStage"
                          }
                        },
                        "id": 2809,
                        "nodeType": "ExpressionStatement",
                        "src": "18219:58:26"
                      }
                    ]
                  },
                  "functionSelector": "1cdd07a4",
                  "id": 2811,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2692,
                      "modifierName": {
                        "id": 2691,
                        "name": "nonReentrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1292,
                        "src": "16319:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16319:12:26"
                    }
                  ],
                  "name": "performThirdStage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2690,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16307:2:26"
                  },
                  "returnParameters": {
                    "id": 2693,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16332:0:26"
                  },
                  "scope": 2934,
                  "src": "16281:2003:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2835,
                    "nodeType": "Block",
                    "src": "18373:193:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2823,
                                  "name": "_gaugeController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1986,
                                  "src": "18441:16:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IGaugeController_$471",
                                    "typeString": "contract IGaugeController"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IGaugeController_$471",
                                    "typeString": "contract IGaugeController"
                                  }
                                ],
                                "id": 2822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18433:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2821,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18433:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18433:25:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2827,
                                      "name": "IGaugeController",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 471,
                                      "src": "18495:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                        "typeString": "type(contract IGaugeController)"
                                      }
                                    },
                                    "id": 2828,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "add_gauge",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 453,
                                    "src": "18495:26:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_int128_$returns$__$",
                                      "typeString": "function IGaugeController.add_gauge(address,int128)"
                                    }
                                  },
                                  "id": 2829,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "18495:35:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 2830,
                                  "name": "gauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2813,
                                  "src": "18532:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                    "typeString": "contract ILiquidityGauge"
                                  }
                                },
                                {
                                  "id": 2831,
                                  "name": "gaugeType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2815,
                                  "src": "18539:9:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                    "typeString": "contract ILiquidityGauge"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_GaugeType_$328",
                                    "typeString": "enum IGaugeAdder.GaugeType"
                                  }
                                ],
                                "expression": {
                                  "id": 2825,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "18472:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "18472:22:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 2832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18472:77:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2818,
                                "name": "getAuthorizerAdaptor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2159,
                                "src": "18383:20:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAuthorizerAdaptor_$28_$",
                                  "typeString": "function () view returns (contract IAuthorizerAdaptor)"
                                }
                              },
                              "id": 2819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18383:22:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              }
                            },
                            "id": 2820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "performAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "18383:36:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) payable external returns (bytes memory)"
                            }
                          },
                          "id": 2833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18383:176:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2834,
                        "nodeType": "ExpressionStatement",
                        "src": "18383:176:26"
                      }
                    ]
                  },
                  "id": 2836,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2816,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2813,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 2836,
                        "src": "18309:21:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                          "typeString": "contract ILiquidityGauge"
                        },
                        "typeName": {
                          "id": 2812,
                          "name": "ILiquidityGauge",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 499,
                          "src": "18309:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                            "typeString": "contract ILiquidityGauge"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2815,
                        "mutability": "mutable",
                        "name": "gaugeType",
                        "nodeType": "VariableDeclaration",
                        "scope": 2836,
                        "src": "18332:31:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GaugeType_$328",
                          "typeString": "enum IGaugeAdder.GaugeType"
                        },
                        "typeName": {
                          "id": 2814,
                          "name": "IGaugeAdder.GaugeType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 328,
                          "src": "18332:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GaugeType_$328",
                            "typeString": "enum IGaugeAdder.GaugeType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18308:56:26"
                  },
                  "returnParameters": {
                    "id": 2817,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18373:0:26"
                  },
                  "scope": 2934,
                  "src": "18290:276:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2858,
                    "nodeType": "Block",
                    "src": "18623:183:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2846,
                                  "name": "_gaugeController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1986,
                                  "src": "18691:16:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IGaugeController_$471",
                                    "typeString": "contract IGaugeController"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IGaugeController_$471",
                                    "typeString": "contract IGaugeController"
                                  }
                                ],
                                "id": 2845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18683:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2844,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18683:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18683:25:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2850,
                                      "name": "IGaugeController",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 471,
                                      "src": "18745:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                        "typeString": "type(contract IGaugeController)"
                                      }
                                    },
                                    "id": 2851,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "add_type",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 439,
                                    "src": "18745:25:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_string_calldata_ptr_$_t_uint256_$returns$__$",
                                      "typeString": "function IGaugeController.add_type(string calldata,uint256)"
                                    }
                                  },
                                  "id": 2852,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "18745:34:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 2853,
                                  "name": "name",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2838,
                                  "src": "18781:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 2854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18787:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 2848,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "18722:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "18722:22:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 2855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18722:67:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2841,
                                "name": "getAuthorizerAdaptor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2159,
                                "src": "18633:20:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAuthorizerAdaptor_$28_$",
                                  "typeString": "function () view returns (contract IAuthorizerAdaptor)"
                                }
                              },
                              "id": 2842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18633:22:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              }
                            },
                            "id": 2843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "performAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "18633:36:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) payable external returns (bytes memory)"
                            }
                          },
                          "id": 2856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18633:166:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2857,
                        "nodeType": "ExpressionStatement",
                        "src": "18633:166:26"
                      }
                    ]
                  },
                  "id": 2859,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addGaugeType",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2839,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2838,
                        "mutability": "mutable",
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 2859,
                        "src": "18595:18:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2837,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "18595:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18594:20:26"
                  },
                  "returnParameters": {
                    "id": 2840,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18623:0:26"
                  },
                  "scope": 2934,
                  "src": "18572:234:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2886,
                    "nodeType": "Block",
                    "src": "18895:208:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2871,
                                  "name": "_gaugeController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1986,
                                  "src": "18963:16:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IGaugeController_$471",
                                    "typeString": "contract IGaugeController"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IGaugeController_$471",
                                    "typeString": "contract IGaugeController"
                                  }
                                ],
                                "id": 2870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18955:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2869,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18955:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18955:25:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2875,
                                      "name": "IGaugeController",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 471,
                                      "src": "19017:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                        "typeString": "type(contract IGaugeController)"
                                      }
                                    },
                                    "id": 2876,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "change_type_weight",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 446,
                                    "src": "19017:35:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_int128_$_t_uint256_$returns$__$",
                                      "typeString": "function IGaugeController.change_type_weight(int128,uint256)"
                                    }
                                  },
                                  "id": 2877,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "19017:44:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 2880,
                                      "name": "typeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2861,
                                      "src": "19070:6:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_GaugeType_$328",
                                        "typeString": "enum IGaugeAdder.GaugeType"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_GaugeType_$328",
                                        "typeString": "enum IGaugeAdder.GaugeType"
                                      }
                                    ],
                                    "id": 2879,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "19063:6:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int128_$",
                                      "typeString": "type(int128)"
                                    },
                                    "typeName": {
                                      "id": 2878,
                                      "name": "int128",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "19063:6:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2881,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19063:14:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int128",
                                    "typeString": "int128"
                                  }
                                },
                                {
                                  "id": 2882,
                                  "name": "weight",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2863,
                                  "src": "19079:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_int128",
                                    "typeString": "int128"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2873,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "18994:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "18994:22:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 2883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18994:92:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2866,
                                "name": "getAuthorizerAdaptor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2159,
                                "src": "18905:20:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAuthorizerAdaptor_$28_$",
                                  "typeString": "function () view returns (contract IAuthorizerAdaptor)"
                                }
                              },
                              "id": 2867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18905:22:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              }
                            },
                            "id": 2868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "performAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "18905:36:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) payable external returns (bytes memory)"
                            }
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18905:191:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2885,
                        "nodeType": "ExpressionStatement",
                        "src": "18905:191:26"
                      }
                    ]
                  },
                  "id": 2887,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setGaugeTypeWeight",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2864,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2861,
                        "mutability": "mutable",
                        "name": "typeId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2887,
                        "src": "18841:28:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GaugeType_$328",
                          "typeString": "enum IGaugeAdder.GaugeType"
                        },
                        "typeName": {
                          "id": 2860,
                          "name": "IGaugeAdder.GaugeType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 328,
                          "src": "18841:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GaugeType_$328",
                            "typeString": "enum IGaugeAdder.GaugeType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2863,
                        "mutability": "mutable",
                        "name": "weight",
                        "nodeType": "VariableDeclaration",
                        "scope": 2887,
                        "src": "18871:14:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2862,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18871:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18840:46:26"
                  },
                  "returnParameters": {
                    "id": 2865,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18895:0:26"
                  },
                  "scope": 2934,
                  "src": "18812:291:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2932,
                    "nodeType": "Block",
                    "src": "19256:323:26",
                    "statements": [
                      {
                        "assignments": [
                          2897
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2897,
                            "mutability": "mutable",
                            "name": "holder",
                            "nodeType": "VariableDeclaration",
                            "scope": 2932,
                            "src": "19266:22:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBALTokenHolder_$1340",
                              "typeString": "contract IBALTokenHolder"
                            },
                            "typeName": {
                              "id": 2896,
                              "name": "IBALTokenHolder",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1340,
                              "src": "19266:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBALTokenHolder_$1340",
                                "typeString": "contract IBALTokenHolder"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2902,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2900,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2891,
                              "src": "19321:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 2898,
                              "name": "_balTokenHolderFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1994,
                              "src": "19291:22:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBALTokenHolderFactory_$1370",
                                "typeString": "contract IBALTokenHolderFactory"
                              }
                            },
                            "id": 2899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "create",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1369,
                            "src": "19291:29:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_contract$_IBALTokenHolder_$1340_$",
                              "typeString": "function (string memory) external returns (contract IBALTokenHolder)"
                            }
                          },
                          "id": 2901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19291:35:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBALTokenHolder_$1340",
                            "typeString": "contract IBALTokenHolder"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19266:60:26"
                      },
                      {
                        "assignments": [
                          2904
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2904,
                            "mutability": "mutable",
                            "name": "gauge",
                            "nodeType": "VariableDeclaration",
                            "scope": 2932,
                            "src": "19336:21:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                              "typeString": "contract ILiquidityGauge"
                            },
                            "typeName": {
                              "id": 2903,
                              "name": "ILiquidityGauge",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 499,
                              "src": "19336:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                "typeString": "contract ILiquidityGauge"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2914,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2910,
                                      "name": "holder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2897,
                                      "src": "19420:6:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBALTokenHolder_$1340",
                                        "typeString": "contract IBALTokenHolder"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IBALTokenHolder_$1340",
                                        "typeString": "contract IBALTokenHolder"
                                      }
                                    ],
                                    "id": 2909,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "19412:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2908,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "19412:7:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2911,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19412:15:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2906,
                                  "name": "_singleRecipientGaugeFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1992,
                                  "src": "19376:28:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                                    "typeString": "contract ILiquidityGaugeFactory"
                                  }
                                },
                                "id": 2907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "create",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 518,
                                "src": "19376:35:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
                                  "typeString": "function (address) external returns (address)"
                                }
                              },
                              "id": 2912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19376:52:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2905,
                            "name": "ILiquidityGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "19360:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ILiquidityGauge_$499_$",
                              "typeString": "type(contract ILiquidityGauge)"
                            }
                          },
                          "id": 2913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19360:69:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                            "typeString": "contract ILiquidityGauge"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19336:93:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2916,
                              "name": "gauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2904,
                              "src": "19449:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                "typeString": "contract ILiquidityGauge"
                              }
                            },
                            {
                              "id": 2917,
                              "name": "gaugeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2889,
                              "src": "19456:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                "typeString": "contract ILiquidityGauge"
                              },
                              {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            ],
                            "id": 2915,
                            "name": "_addGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2836,
                            "src": "19439:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ILiquidityGauge_$499_$_t_enum$_GaugeType_$328_$returns$__$",
                              "typeString": "function (contract ILiquidityGauge,enum IGaugeAdder.GaugeType)"
                            }
                          },
                          "id": 2918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19439:27:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2919,
                        "nodeType": "ExpressionStatement",
                        "src": "19439:27:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2925,
                                      "name": "IBALTokenHolder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1340,
                                      "src": "19521:15:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IBALTokenHolder_$1340_$",
                                        "typeString": "type(contract IBALTokenHolder)"
                                      }
                                    },
                                    "id": 2926,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "withdrawFunds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1330,
                                    "src": "19521:29:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function IBALTokenHolder.withdrawFunds(address,uint256)"
                                    }
                                  },
                                  "id": 2927,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "19521:38:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 2923,
                                  "name": "holder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2897,
                                  "src": "19502:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBALTokenHolder_$1340",
                                    "typeString": "contract IBALTokenHolder"
                                  }
                                },
                                "id": 2924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getActionId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1130,
                                "src": "19502:18:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes4) view external returns (bytes32)"
                                }
                              },
                              "id": 2928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19502:58:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2929,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2893,
                              "src": "19562:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2920,
                                "name": "getAuthorizer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2151,
                                "src": "19476:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$1972_$",
                                  "typeString": "function () view returns (contract ICurrentAuthorizer)"
                                }
                              },
                              "id": 2921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19476:15:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$1972",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 2922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1964,
                            "src": "19476:25:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 2930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19476:96:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2931,
                        "nodeType": "ExpressionStatement",
                        "src": "19476:96:26"
                      }
                    ]
                  },
                  "id": 2933,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_createSingleRecipientGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2894,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2889,
                        "mutability": "mutable",
                        "name": "gaugeType",
                        "nodeType": "VariableDeclaration",
                        "scope": 2933,
                        "src": "19155:31:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GaugeType_$328",
                          "typeString": "enum IGaugeAdder.GaugeType"
                        },
                        "typeName": {
                          "id": 2888,
                          "name": "IGaugeAdder.GaugeType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 328,
                          "src": "19155:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GaugeType_$328",
                            "typeString": "enum IGaugeAdder.GaugeType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2891,
                        "mutability": "mutable",
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 2933,
                        "src": "19196:18:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2890,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19196:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2893,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 2933,
                        "src": "19224:17:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2892,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19224:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19145:102:26"
                  },
                  "returnParameters": {
                    "id": 2895,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19256:0:26"
                  },
                  "scope": 2934,
                  "src": "19109:470:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 2935,
              "src": "2221:17360:26"
            }
          ],
          "src": "688:18894:26"
        },
        "id": 26
      },
      "contracts/20220415-veBAL-L2/veBALL2GaugeSetupCoordinator.sol": {
        "ast": {
          "absolutePath": "contracts/20220415-veBAL-L2/veBALL2GaugeSetupCoordinator.sol",
          "exportedSymbols": {
            "ICurrentAuthorizer": [
              2970
            ],
            "veBALL2GaugeSetupCoordinator": [
              3739
            ]
          },
          "id": 3740,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2936,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:27"
            },
            {
              "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol",
              "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol",
              "id": 2937,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 1318,
              "src": "713:85:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "file": "@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
              "id": 2938,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 1939,
              "src": "799:65:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IAuthorizerAdaptor.sol",
              "id": 2939,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 29,
              "src": "866:88:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeAdder.sol",
              "id": 2940,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 404,
              "src": "955:81:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IGaugeController.sol",
              "id": 2941,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 472,
              "src": "1037:86:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerMinter.sol",
              "id": 2942,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 176,
              "src": "1124:85:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IBalancerTokenAdmin.sol",
              "id": 2943,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 313,
              "src": "1210:89:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ILiquidityGaugeFactory.sol",
              "id": 2944,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 520,
              "src": "1300:92:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/ISingleRecipientGaugeFactory.sol",
              "id": 2945,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 543,
              "src": "1393:98:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol",
              "file": "@balancer-labs/v2-liquidity-mining/contracts/interfaces/IStakelessGauge.sol",
              "id": 2946,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 554,
              "src": "1492:85:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol",
              "file": "@balancer-labs/v2-standalone-utils/contracts/interfaces/IBALTokenHolderFactory.sol",
              "id": 2947,
              "nodeType": "ImportDirective",
              "scope": 3740,
              "sourceUnit": 1371,
              "src": "1578:92:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2949,
                    "name": "IAuthorizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1389,
                    "src": "1979:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                      "typeString": "contract IAuthorizer"
                    }
                  },
                  "id": 2950,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1979:11:27"
                }
              ],
              "contractDependencies": [
                1389
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 2948,
                "nodeType": "StructuredDocumentation",
                "src": "1709:237:27",
                "text": " @dev The currently deployed Authorizer has a different interface relative to the Authorizer in the monorepo\n for granting/revoking roles(referred to as permissions in the new Authorizer) and so we require a one-off interface"
              },
              "fullyImplemented": false,
              "id": 2970,
              "linearizedBaseContracts": [
                2970,
                1389
              ],
              "name": "ICurrentAuthorizer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "a217fddf",
                  "id": 2955,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2951,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2077:2:27"
                  },
                  "returnParameters": {
                    "id": 2954,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2953,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2955,
                        "src": "2103:7:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2952,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2103:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2102:9:27"
                  },
                  "scope": 2970,
                  "src": "2050:62:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2f2ff15d",
                  "id": 2962,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2960,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2957,
                        "mutability": "mutable",
                        "name": "role",
                        "nodeType": "VariableDeclaration",
                        "scope": 2962,
                        "src": "2137:12:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2956,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2137:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2959,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2962,
                        "src": "2151:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2958,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2151:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2136:31:27"
                  },
                  "returnParameters": {
                    "id": 2961,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2176:0:27"
                  },
                  "scope": 2970,
                  "src": "2118:59:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d547741f",
                  "id": 2969,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2967,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2964,
                        "mutability": "mutable",
                        "name": "role",
                        "nodeType": "VariableDeclaration",
                        "scope": 2969,
                        "src": "2203:12:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2963,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2203:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2966,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2969,
                        "src": "2217:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2965,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2217:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2202:31:27"
                  },
                  "returnParameters": {
                    "id": 2968,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2242:0:27"
                  },
                  "scope": 2970,
                  "src": "2183:60:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3740,
              "src": "1947:298:27"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2971,
                    "name": "ReentrancyGuard",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1317,
                    "src": "2447:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReentrancyGuard_$1317",
                      "typeString": "contract ReentrancyGuard"
                    }
                  },
                  "id": 2972,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2447:15:27"
                }
              ],
              "contractDependencies": [
                1317
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3739,
              "linearizedBaseContracts": [
                3739,
                1317
              ],
              "name": "veBALL2GaugeSetupCoordinator",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 2974,
                  "mutability": "immutable",
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2469:31:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVault_$1938",
                    "typeString": "contract IVault"
                  },
                  "typeName": {
                    "id": 2973,
                    "name": "IVault",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1938,
                    "src": "2469:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVault_$1938",
                      "typeString": "contract IVault"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 2976,
                  "mutability": "immutable",
                  "name": "_authorizerAdaptor",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2506:55:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                    "typeString": "contract IAuthorizerAdaptor"
                  },
                  "typeName": {
                    "id": 2975,
                    "name": "IAuthorizerAdaptor",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 28,
                    "src": "2506:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                      "typeString": "contract IAuthorizerAdaptor"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 2978,
                  "mutability": "immutable",
                  "name": "_votingEscrow",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2567:45:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotingEscrow_$673",
                    "typeString": "contract IVotingEscrow"
                  },
                  "typeName": {
                    "id": 2977,
                    "name": "IVotingEscrow",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 673,
                    "src": "2567:13:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotingEscrow_$673",
                      "typeString": "contract IVotingEscrow"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 2980,
                  "mutability": "immutable",
                  "name": "_gaugeController",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2618:51:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGaugeController_$471",
                    "typeString": "contract IGaugeController"
                  },
                  "typeName": {
                    "id": 2979,
                    "name": "IGaugeController",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 471,
                    "src": "2618:16:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGaugeController_$471",
                      "typeString": "contract IGaugeController"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 2982,
                  "mutability": "immutable",
                  "name": "_gaugeAdder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2675:41:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                    "typeString": "contract IGaugeAdder"
                  },
                  "typeName": {
                    "id": 2981,
                    "name": "IGaugeAdder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 403,
                    "src": "2675:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                      "typeString": "contract IGaugeAdder"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 2984,
                  "mutability": "immutable",
                  "name": "_ethereumGaugeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2722:62:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                    "typeString": "contract ILiquidityGaugeFactory"
                  },
                  "typeName": {
                    "id": 2983,
                    "name": "ILiquidityGaugeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 519,
                    "src": "2722:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                      "typeString": "contract ILiquidityGaugeFactory"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 2986,
                  "mutability": "immutable",
                  "name": "_polygonGaugeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2790:67:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                    "typeString": "contract ISingleRecipientGaugeFactory"
                  },
                  "typeName": {
                    "id": 2985,
                    "name": "ISingleRecipientGaugeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 542,
                    "src": "2790:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                      "typeString": "contract ISingleRecipientGaugeFactory"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 2988,
                  "mutability": "immutable",
                  "name": "_arbitrumGaugeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2863:68:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                    "typeString": "contract ISingleRecipientGaugeFactory"
                  },
                  "typeName": {
                    "id": 2987,
                    "name": "ISingleRecipientGaugeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 542,
                    "src": "2863:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                      "typeString": "contract ISingleRecipientGaugeFactory"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "7e55ac37",
                  "id": 2991,
                  "mutability": "immutable",
                  "name": "GAUGE_CHECKPOINTER_MULTISIG",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2938:97:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2938:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307830326633356441364130323031373135343336374263346434376262366337443036433735333342",
                    "id": 2990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2993:42:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "value": "0x02f35dA6A02017154367Bc4d47bb6c7D06C7533B"
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "veBALL2GaugeSetupCoordinator.DeploymentStage",
                  "id": 2995,
                  "members": [
                    {
                      "id": 2992,
                      "name": "PENDING",
                      "nodeType": "EnumValue",
                      "src": "3065:7:27"
                    },
                    {
                      "id": 2993,
                      "name": "FIRST_STAGE_DONE",
                      "nodeType": "EnumValue",
                      "src": "3074:16:27"
                    },
                    {
                      "id": 2994,
                      "name": "SECOND_STAGE_DONE",
                      "nodeType": "EnumValue",
                      "src": "3092:17:27"
                    }
                  ],
                  "name": "DeploymentStage",
                  "nodeType": "EnumDefinition",
                  "src": "3042:69:27"
                },
                {
                  "constant": false,
                  "functionSelector": "1e390389",
                  "id": 2997,
                  "mutability": "mutable",
                  "name": "firstStageActivationTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "3117:39:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3117:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0249e6fa",
                  "id": 2999,
                  "mutability": "mutable",
                  "name": "secondStageActivationTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "3162:40:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3162:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 3001,
                  "mutability": "mutable",
                  "name": "_currentDeploymentStage",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "3209:47:27",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                    "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                  },
                  "typeName": {
                    "id": 3000,
                    "name": "DeploymentStage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2995,
                    "src": "3209:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                      "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3061,
                    "nodeType": "Block",
                    "src": "3565:484:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 3019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3016,
                            "name": "_currentDeploymentStage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "3575:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                              "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3017,
                              "name": "DeploymentStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "3601:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2995_$",
                                "typeString": "type(enum veBALL2GaugeSetupCoordinator.DeploymentStage)"
                              }
                            },
                            "id": 3018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PENDING",
                            "nodeType": "MemberAccess",
                            "src": "3601:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                              "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                            }
                          },
                          "src": "3575:49:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                            "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                          }
                        },
                        "id": 3020,
                        "nodeType": "ExpressionStatement",
                        "src": "3575:49:27"
                      },
                      {
                        "assignments": [
                          3022
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3022,
                            "mutability": "mutable",
                            "name": "vault",
                            "nodeType": "VariableDeclaration",
                            "scope": 3061,
                            "src": "3635:12:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$1938",
                              "typeString": "contract IVault"
                            },
                            "typeName": {
                              "id": 3021,
                              "name": "IVault",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1938,
                              "src": "3635:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$1938",
                                "typeString": "contract IVault"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3026,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3023,
                              "name": "authorizerAdaptor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3003,
                              "src": "3650:17:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              }
                            },
                            "id": 3024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "3650:26:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IVault_$1938_$",
                              "typeString": "function () view external returns (contract IVault)"
                            }
                          },
                          "id": 3025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3650:28:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3635:43:27"
                      },
                      {
                        "expression": {
                          "id": 3029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3027,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2974,
                            "src": "3688:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$1938",
                              "typeString": "contract IVault"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3028,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3022,
                            "src": "3697:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$1938",
                              "typeString": "contract IVault"
                            }
                          },
                          "src": "3688:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 3030,
                        "nodeType": "ExpressionStatement",
                        "src": "3688:14:27"
                      },
                      {
                        "expression": {
                          "id": 3033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3031,
                            "name": "_authorizerAdaptor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2976,
                            "src": "3712:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                              "typeString": "contract IAuthorizerAdaptor"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3032,
                            "name": "authorizerAdaptor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3003,
                            "src": "3733:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                              "typeString": "contract IAuthorizerAdaptor"
                            }
                          },
                          "src": "3712:38:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "id": 3034,
                        "nodeType": "ExpressionStatement",
                        "src": "3712:38:27"
                      },
                      {
                        "expression": {
                          "id": 3037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3035,
                            "name": "_votingEscrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2978,
                            "src": "3760:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVotingEscrow_$673",
                              "typeString": "contract IVotingEscrow"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3036,
                            "name": "votingEscrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3005,
                            "src": "3776:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVotingEscrow_$673",
                              "typeString": "contract IVotingEscrow"
                            }
                          },
                          "src": "3760:28:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVotingEscrow_$673",
                            "typeString": "contract IVotingEscrow"
                          }
                        },
                        "id": 3038,
                        "nodeType": "ExpressionStatement",
                        "src": "3760:28:27"
                      },
                      {
                        "expression": {
                          "id": 3043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3039,
                            "name": "_gaugeController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2980,
                            "src": "3798:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGaugeController_$471",
                              "typeString": "contract IGaugeController"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3040,
                                "name": "gaugeAdder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3007,
                                "src": "3817:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                  "typeString": "contract IGaugeAdder"
                                }
                              },
                              "id": 3041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getGaugeController",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 340,
                              "src": "3817:29:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IGaugeController_$471_$",
                                "typeString": "function () view external returns (contract IGaugeController)"
                              }
                            },
                            "id": 3042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3817:31:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGaugeController_$471",
                              "typeString": "contract IGaugeController"
                            }
                          },
                          "src": "3798:50:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGaugeController_$471",
                            "typeString": "contract IGaugeController"
                          }
                        },
                        "id": 3044,
                        "nodeType": "ExpressionStatement",
                        "src": "3798:50:27"
                      },
                      {
                        "expression": {
                          "id": 3047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3045,
                            "name": "_gaugeAdder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2982,
                            "src": "3858:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                              "typeString": "contract IGaugeAdder"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3046,
                            "name": "gaugeAdder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3007,
                            "src": "3872:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                              "typeString": "contract IGaugeAdder"
                            }
                          },
                          "src": "3858:24:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                            "typeString": "contract IGaugeAdder"
                          }
                        },
                        "id": 3048,
                        "nodeType": "ExpressionStatement",
                        "src": "3858:24:27"
                      },
                      {
                        "expression": {
                          "id": 3051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3049,
                            "name": "_ethereumGaugeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2984,
                            "src": "3892:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                              "typeString": "contract ILiquidityGaugeFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3050,
                            "name": "ethereumGaugeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3009,
                            "src": "3916:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                              "typeString": "contract ILiquidityGaugeFactory"
                            }
                          },
                          "src": "3892:44:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                            "typeString": "contract ILiquidityGaugeFactory"
                          }
                        },
                        "id": 3052,
                        "nodeType": "ExpressionStatement",
                        "src": "3892:44:27"
                      },
                      {
                        "expression": {
                          "id": 3055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3053,
                            "name": "_polygonGaugeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2986,
                            "src": "3946:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                              "typeString": "contract ISingleRecipientGaugeFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3054,
                            "name": "polygonGaugeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3011,
                            "src": "3969:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                              "typeString": "contract ISingleRecipientGaugeFactory"
                            }
                          },
                          "src": "3946:42:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                            "typeString": "contract ISingleRecipientGaugeFactory"
                          }
                        },
                        "id": 3056,
                        "nodeType": "ExpressionStatement",
                        "src": "3946:42:27"
                      },
                      {
                        "expression": {
                          "id": 3059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3057,
                            "name": "_arbitrumGaugeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2988,
                            "src": "3998:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                              "typeString": "contract ISingleRecipientGaugeFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3058,
                            "name": "arbitrumGaugeFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3013,
                            "src": "4022:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                              "typeString": "contract ISingleRecipientGaugeFactory"
                            }
                          },
                          "src": "3998:44:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                            "typeString": "contract ISingleRecipientGaugeFactory"
                          }
                        },
                        "id": 3060,
                        "nodeType": "ExpressionStatement",
                        "src": "3998:44:27"
                      }
                    ]
                  },
                  "id": 3062,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3014,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3003,
                        "mutability": "mutable",
                        "name": "authorizerAdaptor",
                        "nodeType": "VariableDeclaration",
                        "scope": 3062,
                        "src": "3284:36:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                          "typeString": "contract IAuthorizerAdaptor"
                        },
                        "typeName": {
                          "id": 3002,
                          "name": "IAuthorizerAdaptor",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 28,
                          "src": "3284:18:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3005,
                        "mutability": "mutable",
                        "name": "votingEscrow",
                        "nodeType": "VariableDeclaration",
                        "scope": 3062,
                        "src": "3330:26:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotingEscrow_$673",
                          "typeString": "contract IVotingEscrow"
                        },
                        "typeName": {
                          "id": 3004,
                          "name": "IVotingEscrow",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 673,
                          "src": "3330:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVotingEscrow_$673",
                            "typeString": "contract IVotingEscrow"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3007,
                        "mutability": "mutable",
                        "name": "gaugeAdder",
                        "nodeType": "VariableDeclaration",
                        "scope": 3062,
                        "src": "3366:22:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                          "typeString": "contract IGaugeAdder"
                        },
                        "typeName": {
                          "id": 3006,
                          "name": "IGaugeAdder",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 403,
                          "src": "3366:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                            "typeString": "contract IGaugeAdder"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3009,
                        "mutability": "mutable",
                        "name": "ethereumGaugeFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 3062,
                        "src": "3398:43:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                          "typeString": "contract ILiquidityGaugeFactory"
                        },
                        "typeName": {
                          "id": 3008,
                          "name": "ILiquidityGaugeFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 519,
                          "src": "3398:22:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityGaugeFactory_$519",
                            "typeString": "contract ILiquidityGaugeFactory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3011,
                        "mutability": "mutable",
                        "name": "polygonGaugeFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 3062,
                        "src": "3451:48:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                          "typeString": "contract ISingleRecipientGaugeFactory"
                        },
                        "typeName": {
                          "id": 3010,
                          "name": "ISingleRecipientGaugeFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 542,
                          "src": "3451:28:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                            "typeString": "contract ISingleRecipientGaugeFactory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3013,
                        "mutability": "mutable",
                        "name": "arbitrumGaugeFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 3062,
                        "src": "3509:49:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                          "typeString": "contract ISingleRecipientGaugeFactory"
                        },
                        "typeName": {
                          "id": 3012,
                          "name": "ISingleRecipientGaugeFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 542,
                          "src": "3509:28:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                            "typeString": "contract ISingleRecipientGaugeFactory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3274:290:27"
                  },
                  "returnParameters": {
                    "id": 3015,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3565:0:27"
                  },
                  "scope": 3739,
                  "src": "3263:786:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3070,
                    "nodeType": "Block",
                    "src": "4163:30:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 3068,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2974,
                          "src": "4180:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "functionReturnParameters": 3067,
                        "id": 3069,
                        "nodeType": "Return",
                        "src": "4173:13:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3063,
                    "nodeType": "StructuredDocumentation",
                    "src": "4055:54:27",
                    "text": " @notice Returns the Balancer Vault."
                  },
                  "functionSelector": "8d928af8",
                  "id": 3071,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVault",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3064,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4131:2:27"
                  },
                  "returnParameters": {
                    "id": 3067,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3066,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3071,
                        "src": "4155:6:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$1938",
                          "typeString": "contract IVault"
                        },
                        "typeName": {
                          "id": 3065,
                          "name": "IVault",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1938,
                          "src": "4155:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1938",
                            "typeString": "contract IVault"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4154:8:27"
                  },
                  "scope": 3739,
                  "src": "4114:79:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3087,
                    "nodeType": "Block",
                    "src": "4345:79:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 3080,
                                        "name": "getVault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3071,
                                        "src": "4389:8:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IVault_$1938_$",
                                          "typeString": "function () view returns (contract IVault)"
                                        }
                                      },
                                      "id": 3081,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4389:10:27",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$1938",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 3082,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getAuthorizer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1498,
                                    "src": "4389:24:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IAuthorizer_$1389_$",
                                      "typeString": "function () view external returns (contract IAuthorizer)"
                                    }
                                  },
                                  "id": 3083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4389:26:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                                    "typeString": "contract IAuthorizer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAuthorizer_$1389",
                                    "typeString": "contract IAuthorizer"
                                  }
                                ],
                                "id": 3079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4381:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3078,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4381:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4381:35:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3077,
                            "name": "ICurrentAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2970,
                            "src": "4362:18:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICurrentAuthorizer_$2970_$",
                              "typeString": "type(contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 3085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4362:55:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "functionReturnParameters": 3076,
                        "id": 3086,
                        "nodeType": "Return",
                        "src": "4355:62:27"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3072,
                    "nodeType": "StructuredDocumentation",
                    "src": "4199:75:27",
                    "text": " @notice Returns the Balancer Vault's current authorizer."
                  },
                  "functionSelector": "aaabadc5",
                  "id": 3088,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAuthorizer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3073,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4301:2:27"
                  },
                  "returnParameters": {
                    "id": 3076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3075,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3088,
                        "src": "4325:18:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                          "typeString": "contract ICurrentAuthorizer"
                        },
                        "typeName": {
                          "id": 3074,
                          "name": "ICurrentAuthorizer",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2970,
                          "src": "4325:18:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4324:20:27"
                  },
                  "scope": 3739,
                  "src": "4279:145:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3095,
                    "nodeType": "Block",
                    "src": "4503:42:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 3093,
                          "name": "_authorizerAdaptor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2976,
                          "src": "4520:18:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "functionReturnParameters": 3092,
                        "id": 3094,
                        "nodeType": "Return",
                        "src": "4513:25:27"
                      }
                    ]
                  },
                  "functionSelector": "e758d36b",
                  "id": 3096,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAuthorizerAdaptor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3089,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4459:2:27"
                  },
                  "returnParameters": {
                    "id": 3092,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3091,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3096,
                        "src": "4483:18:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                          "typeString": "contract IAuthorizerAdaptor"
                        },
                        "typeName": {
                          "id": 3090,
                          "name": "IAuthorizerAdaptor",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 28,
                          "src": "4483:18:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                            "typeString": "contract IAuthorizerAdaptor"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4482:20:27"
                  },
                  "scope": 3739,
                  "src": "4430:115:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3103,
                    "nodeType": "Block",
                    "src": "4628:47:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 3101,
                          "name": "_currentDeploymentStage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "4645:23:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                            "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                          }
                        },
                        "functionReturnParameters": 3100,
                        "id": 3102,
                        "nodeType": "Return",
                        "src": "4638:30:27"
                      }
                    ]
                  },
                  "functionSelector": "b77984e9",
                  "id": 3104,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentDeploymentStage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3097,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4585:2:27"
                  },
                  "returnParameters": {
                    "id": 3100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3099,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3104,
                        "src": "4611:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                          "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                        },
                        "typeName": {
                          "id": 3098,
                          "name": "DeploymentStage",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2995,
                          "src": "4611:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                            "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4610:17:27"
                  },
                  "scope": 3739,
                  "src": "4551:124:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3160,
                    "nodeType": "Block",
                    "src": "4732:943:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                                "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                              },
                              "id": 3113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3110,
                                "name": "_currentDeploymentStage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3001,
                                "src": "4782:23:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                                  "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3111,
                                  "name": "DeploymentStage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2995,
                                  "src": "4809:15:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2995_$",
                                    "typeString": "type(enum veBALL2GaugeSetupCoordinator.DeploymentStage)"
                                  }
                                },
                                "id": 3112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "PENDING",
                                "nodeType": "MemberAccess",
                                "src": "4809:23:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                                  "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                                }
                              },
                              "src": "4782:50:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669727374207374657020616c726561647920706572666f726d6564",
                              "id": 3114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4834:30:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f440e0ce46e8b6e41295fe26a5b30d1dd170901a8fb721b91ec77a4dfacb77c2",
                                "typeString": "literal_string \"First step already performed\""
                              },
                              "value": "First step already performed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f440e0ce46e8b6e41295fe26a5b30d1dd170901a8fb721b91ec77a4dfacb77c2",
                                "typeString": "literal_string \"First step already performed\""
                              }
                            ],
                            "id": 3109,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4774:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4774:91:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3116,
                        "nodeType": "ExpressionStatement",
                        "src": "4774:91:27"
                      },
                      {
                        "assignments": [
                          3118
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3118,
                            "mutability": "mutable",
                            "name": "authorizer",
                            "nodeType": "VariableDeclaration",
                            "scope": 3160,
                            "src": "4952:29:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                              "typeString": "contract ICurrentAuthorizer"
                            },
                            "typeName": {
                              "id": 3117,
                              "name": "ICurrentAuthorizer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2970,
                              "src": "4952:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3121,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3119,
                            "name": "getAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3088,
                            "src": "4984:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$2970_$",
                              "typeString": "function () view returns (contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 3120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4984:15:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4952:47:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 3127,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5047:1:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5039:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 3125,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5039:7:27",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5039:10:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 3131,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5059:4:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                        "typeString": "contract veBALL2GaugeSetupCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                        "typeString": "contract veBALL2GaugeSetupCoordinator"
                                      }
                                    ],
                                    "id": 3130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5051:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3129,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5051:7:27",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5051:13:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 3135,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5074:1:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3134,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5066:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3133,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5066:7:27",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3136,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5066:10:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "id": 3123,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3118,
                                  "src": "5017:10:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 3124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "canPerform",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1388,
                                "src": "5017:21:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address,address) view external returns (bool)"
                                }
                              },
                              "id": 3137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5017:60:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420417574686f72697a65722061646d696e",
                              "id": 3138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5079:22:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_42cf385e9e323383944c71fafe0678e983cc8e5106fba89b9a0637b64cba6457",
                                "typeString": "literal_string \"Not Authorizer admin\""
                              },
                              "value": "Not Authorizer admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_42cf385e9e323383944c71fafe0678e983cc8e5106fba89b9a0637b64cba6457",
                                "typeString": "literal_string \"Not Authorizer admin\""
                              }
                            ],
                            "id": 3122,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5009:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5009:93:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3140,
                        "nodeType": "ExpressionStatement",
                        "src": "5009:93:27"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3141,
                            "name": "_addGaugeCheckpointerMultisig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3253,
                            "src": "5190:29:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5190:31:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3143,
                        "nodeType": "ExpressionStatement",
                        "src": "5190:31:27"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3144,
                            "name": "_addNewEthereumGauges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3327,
                            "src": "5290:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5290:23:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3146,
                        "nodeType": "ExpressionStatement",
                        "src": "5290:23:27"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3147,
                            "name": "_addNewArbitrumGauges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3588,
                            "src": "5404:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5404:23:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3149,
                        "nodeType": "ExpressionStatement",
                        "src": "5404:23:27"
                      },
                      {
                        "expression": {
                          "id": 3153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3150,
                            "name": "firstStageActivationTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2997,
                            "src": "5558:24:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3151,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5585:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5585:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5558:42:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3154,
                        "nodeType": "ExpressionStatement",
                        "src": "5558:42:27"
                      },
                      {
                        "expression": {
                          "id": 3158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3155,
                            "name": "_currentDeploymentStage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "5610:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                              "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3156,
                              "name": "DeploymentStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "5636:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2995_$",
                                "typeString": "type(enum veBALL2GaugeSetupCoordinator.DeploymentStage)"
                              }
                            },
                            "id": 3157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FIRST_STAGE_DONE",
                            "nodeType": "MemberAccess",
                            "src": "5636:32:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                              "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                            }
                          },
                          "src": "5610:58:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                            "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                          }
                        },
                        "id": 3159,
                        "nodeType": "ExpressionStatement",
                        "src": "5610:58:27"
                      }
                    ]
                  },
                  "functionSelector": "2bd46566",
                  "id": 3161,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3107,
                      "modifierName": {
                        "id": 3106,
                        "name": "nonReentrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1292,
                        "src": "4719:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4719:12:27"
                    }
                  ],
                  "name": "performFirstStage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4707:2:27"
                  },
                  "returnParameters": {
                    "id": 3108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4732:0:27"
                  },
                  "scope": 3739,
                  "src": "4681:994:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3227,
                    "nodeType": "Block",
                    "src": "5733:834:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                                "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                              },
                              "id": 3170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3167,
                                "name": "_currentDeploymentStage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3001,
                                "src": "5783:23:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                                  "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3168,
                                  "name": "DeploymentStage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2995,
                                  "src": "5810:15:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2995_$",
                                    "typeString": "type(enum veBALL2GaugeSetupCoordinator.DeploymentStage)"
                                  }
                                },
                                "id": 3169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "FIRST_STAGE_DONE",
                                "nodeType": "MemberAccess",
                                "src": "5810:32:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                                  "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                                }
                              },
                              "src": "5783:59:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420726561647920666f72207365636f6e64207374616765",
                              "id": 3171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5844:28:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd19ce48bb4a5589afc86b7a3bdad344a9799f64790652cd676ef20866caf67b",
                                "typeString": "literal_string \"Not ready for second stage\""
                              },
                              "value": "Not ready for second stage"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd19ce48bb4a5589afc86b7a3bdad344a9799f64790652cd676ef20866caf67b",
                                "typeString": "literal_string \"Not ready for second stage\""
                              }
                            ],
                            "id": 3166,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5775:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5775:98:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3173,
                        "nodeType": "ExpressionStatement",
                        "src": "5775:98:27"
                      },
                      {
                        "assignments": [
                          3175
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3175,
                            "mutability": "mutable",
                            "name": "authorizer",
                            "nodeType": "VariableDeclaration",
                            "scope": 3227,
                            "src": "5960:29:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                              "typeString": "contract ICurrentAuthorizer"
                            },
                            "typeName": {
                              "id": 3174,
                              "name": "ICurrentAuthorizer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2970,
                              "src": "5960:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3178,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3176,
                            "name": "getAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3088,
                            "src": "5992:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$2970_$",
                              "typeString": "function () view returns (contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 3177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5992:15:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5960:47:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 3184,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6055:1:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3183,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6047:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 3182,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6047:7:27",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3185,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6047:10:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 3188,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "6067:4:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                        "typeString": "contract veBALL2GaugeSetupCoordinator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                        "typeString": "contract veBALL2GaugeSetupCoordinator"
                                      }
                                    ],
                                    "id": 3187,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6059:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3186,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6059:7:27",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6059:13:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 3192,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6082:1:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3191,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6074:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3190,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6074:7:27",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6074:10:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "id": 3180,
                                  "name": "authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3175,
                                  "src": "6025:10:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                    "typeString": "contract ICurrentAuthorizer"
                                  }
                                },
                                "id": 3181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "canPerform",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1388,
                                "src": "6025:21:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address,address) view external returns (bool)"
                                }
                              },
                              "id": 3194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6025:60:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420417574686f72697a65722061646d696e",
                              "id": 3195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6087:22:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_42cf385e9e323383944c71fafe0678e983cc8e5106fba89b9a0637b64cba6457",
                                "typeString": "literal_string \"Not Authorizer admin\""
                              },
                              "value": "Not Authorizer admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_42cf385e9e323383944c71fafe0678e983cc8e5106fba89b9a0637b64cba6457",
                                "typeString": "literal_string \"Not Authorizer admin\""
                              }
                            ],
                            "id": 3179,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6017:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6017:93:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3197,
                        "nodeType": "ExpressionStatement",
                        "src": "6017:93:27"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3198,
                            "name": "_addNewPolygonGauges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3460,
                            "src": "6200:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6200:22:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3200,
                        "nodeType": "ExpressionStatement",
                        "src": "6200:22:27"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3201,
                            "name": "_deprecateOldGauges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3657,
                            "src": "6297:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6297:21:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3203,
                        "nodeType": "ExpressionStatement",
                        "src": "6297:21:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6419:1:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6411:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 3207,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6411:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6411:10:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3213,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6431:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6423:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3211,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6423:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6423:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3204,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3175,
                              "src": "6389:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revokeRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2969,
                            "src": "6389:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6389:48:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3216,
                        "nodeType": "ExpressionStatement",
                        "src": "6389:48:27"
                      },
                      {
                        "expression": {
                          "id": 3220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3217,
                            "name": "secondStageActivationTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2999,
                            "src": "6448:25:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3218,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6476:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6476:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6448:43:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3221,
                        "nodeType": "ExpressionStatement",
                        "src": "6448:43:27"
                      },
                      {
                        "expression": {
                          "id": 3225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3222,
                            "name": "_currentDeploymentStage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3001,
                            "src": "6501:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                              "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3223,
                              "name": "DeploymentStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2995,
                              "src": "6527:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DeploymentStage_$2995_$",
                                "typeString": "type(enum veBALL2GaugeSetupCoordinator.DeploymentStage)"
                              }
                            },
                            "id": 3224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "SECOND_STAGE_DONE",
                            "nodeType": "MemberAccess",
                            "src": "6527:33:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                              "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                            }
                          },
                          "src": "6501:59:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DeploymentStage_$2995",
                            "typeString": "enum veBALL2GaugeSetupCoordinator.DeploymentStage"
                          }
                        },
                        "id": 3226,
                        "nodeType": "ExpressionStatement",
                        "src": "6501:59:27"
                      }
                    ]
                  },
                  "functionSelector": "b1e70e80",
                  "id": 3228,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3164,
                      "modifierName": {
                        "id": 3163,
                        "name": "nonReentrant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1292,
                        "src": "5720:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5720:12:27"
                    }
                  ],
                  "name": "performSecondStage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3162,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5708:2:27"
                  },
                  "returnParameters": {
                    "id": 3165,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5733:0:27"
                  },
                  "scope": 3739,
                  "src": "5681:886:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3252,
                    "nodeType": "Block",
                    "src": "6622:251:27",
                    "statements": [
                      {
                        "assignments": [
                          3232
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3232,
                            "mutability": "mutable",
                            "name": "authorizer",
                            "nodeType": "VariableDeclaration",
                            "scope": 3252,
                            "src": "6632:29:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                              "typeString": "contract ICurrentAuthorizer"
                            },
                            "typeName": {
                              "id": 3231,
                              "name": "ICurrentAuthorizer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2970,
                              "src": "6632:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3235,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3233,
                            "name": "getAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3088,
                            "src": "6664:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$2970_$",
                              "typeString": "function () view returns (contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 3234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6664:15:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6632:47:27"
                      },
                      {
                        "assignments": [
                          3237
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3237,
                            "mutability": "mutable",
                            "name": "checkpointGaugeRole",
                            "nodeType": "VariableDeclaration",
                            "scope": 3252,
                            "src": "6689:27:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3236,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6689:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3244,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 3240,
                                  "name": "IStakelessGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 553,
                                  "src": "6750:15:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IStakelessGauge_$553_$",
                                    "typeString": "type(contract IStakelessGauge)"
                                  }
                                },
                                "id": 3241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "checkpoint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 552,
                                "src": "6750:26:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_payable$__$returns$_t_bool_$",
                                  "typeString": "function IStakelessGauge.checkpoint() payable returns (bool)"
                                }
                              },
                              "id": 3242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "6750:35:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 3238,
                              "name": "_authorizerAdaptor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2976,
                              "src": "6719:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              }
                            },
                            "id": 3239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getActionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "6719:30:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                              "typeString": "function (bytes4) view external returns (bytes32)"
                            }
                          },
                          "id": 3243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6719:67:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6689:97:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3248,
                              "name": "checkpointGaugeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3237,
                              "src": "6817:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 3249,
                              "name": "GAUGE_CHECKPOINTER_MULTISIG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2991,
                              "src": "6838:27:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3245,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3232,
                              "src": "6796:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2962,
                            "src": "6796:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6796:70:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3251,
                        "nodeType": "ExpressionStatement",
                        "src": "6796:70:27"
                      }
                    ]
                  },
                  "id": 3253,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addGaugeCheckpointerMultisig",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3229,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6611:2:27"
                  },
                  "returnParameters": {
                    "id": 3230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6622:0:27"
                  },
                  "scope": 3739,
                  "src": "6573:300:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3326,
                    "nodeType": "Block",
                    "src": "6920:945:27",
                    "statements": [
                      {
                        "assignments": [
                          3259
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3259,
                            "mutability": "mutable",
                            "name": "newGauges",
                            "nodeType": "VariableDeclaration",
                            "scope": 3326,
                            "src": "7028:35:27",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$3_memory_ptr",
                              "typeString": "address payable[3]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3256,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7028:15:27",
                                "stateMutability": "payable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 3258,
                              "length": {
                                "hexValue": "33",
                                "id": 3257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7044:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "nodeType": "ArrayTypeName",
                              "src": "7028:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$3_storage_ptr",
                                "typeString": "address payable[3]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3264,
                        "initialValue": {
                          "components": [
                            {
                              "hexValue": "307861353734353337333738343941343032393332356466416233463630333436353636343445313034",
                              "id": 3260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7080:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xa57453737849A4029325dfAb3F6034656644E104"
                            },
                            {
                              "hexValue": "307841363436386563613736333332343644636232344535353939363831373637443237643146393738",
                              "id": 3261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7153:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xA6468eca7633246Dcb24E5599681767D27d1F978"
                            },
                            {
                              "hexValue": "307831353837373246353946653064336237353830356643313131333962343643426338394637306535",
                              "id": 3262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7224:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x158772F59Fe0d3b75805fC11139b46CBc89F70e5"
                            }
                          ],
                          "id": 3263,
                          "isConstant": false,
                          "isInlineArray": true,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7066:301:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$3_memory_ptr",
                            "typeString": "address payable[3] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7028:339:27"
                      },
                      {
                        "assignments": [
                          3266
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3266,
                            "mutability": "mutable",
                            "name": "authorizer",
                            "nodeType": "VariableDeclaration",
                            "scope": 3326,
                            "src": "7378:29:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                              "typeString": "contract ICurrentAuthorizer"
                            },
                            "typeName": {
                              "id": 3265,
                              "name": "ICurrentAuthorizer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2970,
                              "src": "7378:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3269,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3267,
                            "name": "getAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3088,
                            "src": "7410:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$2970_$",
                              "typeString": "function () view returns (contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 3268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7410:15:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7378:47:27"
                      },
                      {
                        "assignments": [
                          3271
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3271,
                            "mutability": "mutable",
                            "name": "addEthereumGaugeRole",
                            "nodeType": "VariableDeclaration",
                            "scope": 3326,
                            "src": "7435:28:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3270,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7435:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3278,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 3274,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "7490:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 3275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "addEthereumGauge",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 382,
                                "src": "7490:28:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_IStakingLiquidityGauge_$603_$returns$__$",
                                  "typeString": "function IGaugeAdder.addEthereumGauge(contract IStakingLiquidityGauge)"
                                }
                              },
                              "id": 3276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "7490:37:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 3272,
                              "name": "_gaugeAdder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2982,
                              "src": "7466:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                "typeString": "contract IGaugeAdder"
                              }
                            },
                            "id": 3273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getActionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "7466:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                              "typeString": "function (bytes4) view external returns (bytes32)"
                            }
                          },
                          "id": 3277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7466:62:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7435:93:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3282,
                              "name": "addEthereumGaugeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3271,
                              "src": "7560:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3285,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7590:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7582:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3283,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7582:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7582:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3279,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3266,
                              "src": "7539:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2962,
                            "src": "7539:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7539:57:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3288,
                        "nodeType": "ExpressionStatement",
                        "src": "7539:57:27"
                      },
                      {
                        "assignments": [
                          3290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3290,
                            "mutability": "mutable",
                            "name": "gaugesLength",
                            "nodeType": "VariableDeclaration",
                            "scope": 3326,
                            "src": "7607:20:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3289,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7607:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3293,
                        "initialValue": {
                          "expression": {
                            "id": 3291,
                            "name": "newGauges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3259,
                            "src": "7630:9:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$3_memory_ptr",
                              "typeString": "address payable[3] memory"
                            }
                          },
                          "id": 3292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7630:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7607:39:27"
                      },
                      {
                        "body": {
                          "id": 3314,
                          "nodeType": "Block",
                          "src": "7699:91:27",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 3308,
                                          "name": "newGauges",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3259,
                                          "src": "7765:9:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_payable_$3_memory_ptr",
                                            "typeString": "address payable[3] memory"
                                          }
                                        },
                                        "id": 3310,
                                        "indexExpression": {
                                          "id": 3309,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3295,
                                          "src": "7775:1:27",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7765:12:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 3307,
                                      "name": "IStakingLiquidityGauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 603,
                                      "src": "7742:22:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IStakingLiquidityGauge_$603_$",
                                        "typeString": "type(contract IStakingLiquidityGauge)"
                                      }
                                    },
                                    "id": 3311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7742:36:27",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStakingLiquidityGauge_$603",
                                      "typeString": "contract IStakingLiquidityGauge"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStakingLiquidityGauge_$603",
                                      "typeString": "contract IStakingLiquidityGauge"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3304,
                                    "name": "_gaugeAdder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2982,
                                    "src": "7713:11:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                      "typeString": "contract IGaugeAdder"
                                    }
                                  },
                                  "id": 3306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addEthereumGauge",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 382,
                                  "src": "7713:28:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IStakingLiquidityGauge_$603_$returns$__$",
                                    "typeString": "function (contract IStakingLiquidityGauge) external"
                                  }
                                },
                                "id": 3312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7713:66:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3313,
                              "nodeType": "ExpressionStatement",
                              "src": "7713:66:27"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3298,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3295,
                            "src": "7676:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3299,
                            "name": "gaugesLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3290,
                            "src": "7680:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7676:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3315,
                        "initializationExpression": {
                          "assignments": [
                            3295
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3295,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 3315,
                              "src": "7661:9:27",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3294,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7661:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3297,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7673:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7661:13:27"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 3302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7694:3:27",
                            "subExpression": {
                              "id": 3301,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3295,
                              "src": "7694:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3303,
                          "nodeType": "ExpressionStatement",
                          "src": "7694:3:27"
                        },
                        "nodeType": "ForStatement",
                        "src": "7656:134:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3319,
                              "name": "addEthereumGaugeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3271,
                              "src": "7822:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3322,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7852:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7844:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3320,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7844:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7844:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3316,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3266,
                              "src": "7800:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revokeRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2969,
                            "src": "7800:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7800:58:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3325,
                        "nodeType": "ExpressionStatement",
                        "src": "7800:58:27"
                      }
                    ]
                  },
                  "id": 3327,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addNewEthereumGauges",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6909:2:27"
                  },
                  "returnParameters": {
                    "id": 3255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6920:0:27"
                  },
                  "scope": 3739,
                  "src": "6879:986:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3459,
                    "nodeType": "Block",
                    "src": "7911:3195:27",
                    "statements": [
                      {
                        "assignments": [
                          3333
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3333,
                            "mutability": "mutable",
                            "name": "initialRecipients",
                            "nodeType": "VariableDeclaration",
                            "scope": 3459,
                            "src": "8039:44:27",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$19_memory_ptr",
                              "typeString": "address payable[19]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3330,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8039:15:27",
                                "stateMutability": "payable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 3332,
                              "length": {
                                "hexValue": "3139",
                                "id": 3331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8055:2:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_19_by_1",
                                  "typeString": "int_const 19"
                                },
                                "value": "19"
                              },
                              "nodeType": "ArrayTypeName",
                              "src": "8039:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$19_storage_ptr",
                                "typeString": "address payable[19]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3354,
                        "initialValue": {
                          "components": [
                            {
                              "hexValue": "307830464338353566373763453735426236613564363530443063346343393245343630633033453235",
                              "id": 3334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8164:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x0FC855f77cE75Bb6a5d650D0c4cC92E460c03E25"
                            },
                            {
                              "hexValue": "307834623837386539373237423945393166446145333743644438353934396634333637323230313837",
                              "id": 3335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8266:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x4b878e9727B9E91fDaE37CdD85949f4367220187"
                            },
                            {
                              "hexValue": "307836363735303437336345316445434261346566323537366134376664354646374246303743346532",
                              "id": 3336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8368:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x66750473cE1dECBa4ef2576a47fd5FF7BF07C4e2"
                            },
                            {
                              "hexValue": "307832416335393530303735363364663437333434393030353838334631463242413330333665426546",
                              "id": 3337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8470:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x2Ac595007563df473449005883F1F2BA3036eBeF"
                            },
                            {
                              "hexValue": "307833623444313733363031463862333630323463443439463743353835394432363333383541463334",
                              "id": 3338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8572:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x3b4D173601F8b36024cD49F7C5859D263385AF34"
                            },
                            {
                              "hexValue": "307844653246353863343343423232323732354139363233363237326337373439453441626631613235",
                              "id": 3339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8674:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xDe2F58c43CB222725A96236272c7749E4Abf1a25"
                            },
                            {
                              "hexValue": "307837334346394330363562464239414266373664393437383733323443664334463735316163303937",
                              "id": 3340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8776:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x73CF9C065bFB9ABf76d94787324CfC4F751ac097"
                            },
                            {
                              "hexValue": "307832383435453935443261346546636431344366354437374239426137333237383862393632363766",
                              "id": 3341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8878:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x2845E95D2a4eFcd14Cf5D77B9Ba732788b96267f"
                            },
                            {
                              "hexValue": "307862303631463530326438346630306431423236353638383838413866373431634245333532433233",
                              "id": 3342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8980:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xb061F502d84f00d1B26568888A8f741cBE352C23"
                            },
                            {
                              "hexValue": "307844363546333565373530643546464236336133423643374234653544346166653443413535353044",
                              "id": 3343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9082:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xD65F35e750d5FFB63a3B6C7B4e5D4afe4CA5550D"
                            },
                            {
                              "hexValue": "307832356135323641446236393235613966343031343135363743303634333044333638323332464545",
                              "id": 3344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9184:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x25a526ADb6925a9f40141567C06430D368232FEE"
                            },
                            {
                              "hexValue": "307830664437653931373162346443394438394531353763326363394134323443643943343061303334",
                              "id": 3345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9286:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x0fD7e9171b4dC9D89E157c2cc9A424Cd9C40a034"
                            },
                            {
                              "hexValue": "307862633946323434636635613737343738354537323641393135376146653337323564393332343942",
                              "id": 3346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9388:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xbc9F244cf5a774785E726A9157aFe3725d93249B"
                            },
                            {
                              "hexValue": "307832434363353138423742363137374332643434373731643662323439463835613541306343314434",
                              "id": 3347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9490:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x2CCc518B7B6177C2d44771d6b249F85a5A0cC1D4"
                            },
                            {
                              "hexValue": "307836344146446236394332323937314232656432383930323066373861343745303730634661646261",
                              "id": 3348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9592:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x64AFDb69C22971B2ed289020f78a47E070cFadba"
                            },
                            {
                              "hexValue": "307836463464323737333064353235333134386438323238334533614439336561653932363444614133",
                              "id": 3349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9694:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x6F4d27730d5253148d82283E3aD93eae9264DaA3"
                            },
                            {
                              "hexValue": "307836383132313632383630664143343938664236663033333339443339643233623561323634313532",
                              "id": 3350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9796:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x6812162860fAC498fB6f03339D39d23b5a264152"
                            },
                            {
                              "hexValue": "307835454139433337413365436630633832393030466262466430363446453239413432376334314142",
                              "id": 3351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9898:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x5EA9C37A3eCf0c82900FbbFd064FE29A427c41AB"
                            },
                            {
                              "hexValue": "307841393545304239314133463532326444453432443562366134653433306530424641443046324635",
                              "id": 3352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10000:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xA95E0B91A3F522dDE42D5b6a4e430e0BFAD0F2F5"
                            }
                          ],
                          "id": 3353,
                          "isConstant": false,
                          "isInlineArray": true,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8086:2012:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$19_memory_ptr",
                            "typeString": "address payable[19] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8039:2059:27"
                      },
                      {
                        "assignments": [
                          3356
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3356,
                            "mutability": "mutable",
                            "name": "authorizer",
                            "nodeType": "VariableDeclaration",
                            "scope": 3459,
                            "src": "10109:29:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                              "typeString": "contract ICurrentAuthorizer"
                            },
                            "typeName": {
                              "id": 3355,
                              "name": "ICurrentAuthorizer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2970,
                              "src": "10109:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3359,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3357,
                            "name": "getAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3088,
                            "src": "10141:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$2970_$",
                              "typeString": "function () view returns (contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 3358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10141:15:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10109:47:27"
                      },
                      {
                        "assignments": [
                          3361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3361,
                            "mutability": "mutable",
                            "name": "addGaugeFactoryRole",
                            "nodeType": "VariableDeclaration",
                            "scope": 3459,
                            "src": "10167:27:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3360,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10167:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3368,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 3364,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "10221:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 3365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "addGaugeFactory",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 402,
                                "src": "10221:27:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILiquidityGaugeFactory_$519_$_t_enum$_GaugeType_$328_$returns$__$",
                                  "typeString": "function IGaugeAdder.addGaugeFactory(contract ILiquidityGaugeFactory,enum IGaugeAdder.GaugeType)"
                                }
                              },
                              "id": 3366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "10221:36:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 3362,
                              "name": "_gaugeAdder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2982,
                              "src": "10197:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                "typeString": "contract IGaugeAdder"
                              }
                            },
                            "id": 3363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getActionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "10197:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                              "typeString": "function (bytes4) view external returns (bytes32)"
                            }
                          },
                          "id": 3367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10197:61:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10167:91:27"
                      },
                      {
                        "assignments": [
                          3370
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3370,
                            "mutability": "mutable",
                            "name": "addPolygonGaugeRole",
                            "nodeType": "VariableDeclaration",
                            "scope": 3459,
                            "src": "10268:27:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3369,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10268:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3377,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 3373,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "10322:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 3374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "addPolygonGauge",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 388,
                                "src": "10322:27:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function IGaugeAdder.addPolygonGauge(address)"
                                }
                              },
                              "id": 3375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "10322:36:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 3371,
                              "name": "_gaugeAdder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2982,
                              "src": "10298:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                "typeString": "contract IGaugeAdder"
                              }
                            },
                            "id": 3372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getActionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "10298:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                              "typeString": "function (bytes4) view external returns (bytes32)"
                            }
                          },
                          "id": 3376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10298:61:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10268:91:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3381,
                              "name": "addGaugeFactoryRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3361,
                              "src": "10495:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3384,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10524:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10516:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3382,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10516:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10516:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3378,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3356,
                              "src": "10474:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2962,
                            "src": "10474:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10474:56:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3387,
                        "nodeType": "ExpressionStatement",
                        "src": "10474:56:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3391,
                              "name": "_polygonGaugeFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2986,
                              "src": "10568:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                                "typeString": "contract ISingleRecipientGaugeFactory"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 3392,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "10590:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 3393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "GaugeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 328,
                                "src": "10590:21:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                  "typeString": "type(enum IGaugeAdder.GaugeType)"
                                }
                              },
                              "id": 3394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Polygon",
                              "nodeType": "MemberAccess",
                              "src": "10590:29:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                                "typeString": "contract ISingleRecipientGaugeFactory"
                              },
                              {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            ],
                            "expression": {
                              "id": 3388,
                              "name": "_gaugeAdder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2982,
                              "src": "10540:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                "typeString": "contract IGaugeAdder"
                              }
                            },
                            "id": 3390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addGaugeFactory",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 402,
                            "src": "10540:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILiquidityGaugeFactory_$519_$_t_enum$_GaugeType_$328_$returns$__$",
                              "typeString": "function (contract ILiquidityGaugeFactory,enum IGaugeAdder.GaugeType) external"
                            }
                          },
                          "id": 3395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10540:80:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3396,
                        "nodeType": "ExpressionStatement",
                        "src": "10540:80:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3400,
                              "name": "addGaugeFactoryRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3361,
                              "src": "10652:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3403,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10681:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10673:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3401,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10673:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10673:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3397,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3356,
                              "src": "10630:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revokeRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2969,
                            "src": "10630:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10630:57:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3406,
                        "nodeType": "ExpressionStatement",
                        "src": "10630:57:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3410,
                              "name": "addPolygonGaugeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3370,
                              "src": "10719:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3413,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10748:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10740:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3411,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10740:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10740:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3407,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3356,
                              "src": "10698:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2962,
                            "src": "10698:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10698:56:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3416,
                        "nodeType": "ExpressionStatement",
                        "src": "10698:56:27"
                      },
                      {
                        "assignments": [
                          3418
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3418,
                            "mutability": "mutable",
                            "name": "initialRecipientsLength",
                            "nodeType": "VariableDeclaration",
                            "scope": 3459,
                            "src": "10765:31:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3417,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10765:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3421,
                        "initialValue": {
                          "expression": {
                            "id": 3419,
                            "name": "initialRecipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3333,
                            "src": "10799:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$19_memory_ptr",
                              "typeString": "address payable[19] memory"
                            }
                          },
                          "id": 3420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10799:24:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10765:58:27"
                      },
                      {
                        "body": {
                          "id": 3447,
                          "nodeType": "Block",
                          "src": "10887:145:27",
                          "statements": [
                            {
                              "assignments": [
                                3433
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3433,
                                  "mutability": "mutable",
                                  "name": "gauge",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3447,
                                  "src": "10901:13:27",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3432,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10901:7:27",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3440,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3435,
                                    "name": "_polygonGaugeFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2986,
                                    "src": "10930:20:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                                      "typeString": "contract ISingleRecipientGaugeFactory"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 3436,
                                      "name": "initialRecipients",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3333,
                                      "src": "10952:17:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_payable_$19_memory_ptr",
                                        "typeString": "address payable[19] memory"
                                      }
                                    },
                                    "id": 3438,
                                    "indexExpression": {
                                      "id": 3437,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3423,
                                      "src": "10970:1:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10952:20:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                                      "typeString": "contract ISingleRecipientGaugeFactory"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 3434,
                                  "name": "_deployGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3692,
                                  "src": "10917:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISingleRecipientGaugeFactory_$542_$_t_address_$returns$_t_address_$",
                                    "typeString": "function (contract ISingleRecipientGaugeFactory,address) returns (address)"
                                  }
                                },
                                "id": 3439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10917:56:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10901:72:27"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3444,
                                    "name": "gauge",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3433,
                                    "src": "11015:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3441,
                                    "name": "_gaugeAdder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2982,
                                    "src": "10987:11:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                      "typeString": "contract IGaugeAdder"
                                    }
                                  },
                                  "id": 3443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addPolygonGauge",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 388,
                                  "src": "10987:27:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 3445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10987:34:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3446,
                              "nodeType": "ExpressionStatement",
                              "src": "10987:34:27"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3426,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3423,
                            "src": "10853:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3427,
                            "name": "initialRecipientsLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3418,
                            "src": "10857:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10853:27:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3448,
                        "initializationExpression": {
                          "assignments": [
                            3423
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3423,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 3448,
                              "src": "10838:9:27",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3422,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10838:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3425,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10850:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10838:13:27"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 3430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10882:3:27",
                            "subExpression": {
                              "id": 3429,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3423,
                              "src": "10882:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3431,
                          "nodeType": "ExpressionStatement",
                          "src": "10882:3:27"
                        },
                        "nodeType": "ForStatement",
                        "src": "10833:199:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3452,
                              "name": "addPolygonGaugeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3370,
                              "src": "11064:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3455,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11093:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11085:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3453,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11085:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11085:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3449,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3356,
                              "src": "11042:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revokeRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2969,
                            "src": "11042:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11042:57:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3458,
                        "nodeType": "ExpressionStatement",
                        "src": "11042:57:27"
                      }
                    ]
                  },
                  "id": 3460,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addNewPolygonGauges",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3328,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7900:2:27"
                  },
                  "returnParameters": {
                    "id": 3329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7911:0:27"
                  },
                  "scope": 3739,
                  "src": "7871:3235:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3587,
                    "nodeType": "Block",
                    "src": "11153:2691:27",
                    "statements": [
                      {
                        "assignments": [
                          3466
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3466,
                            "mutability": "mutable",
                            "name": "initialRecipients",
                            "nodeType": "VariableDeclaration",
                            "scope": 3587,
                            "src": "11278:44:27",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$14_memory_ptr",
                              "typeString": "address payable[14]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3463,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11278:15:27",
                                "stateMutability": "payable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 3465,
                              "length": {
                                "hexValue": "3134",
                                "id": 3464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11294:2:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_14_by_1",
                                  "typeString": "int_const 14"
                                },
                                "value": "14"
                              },
                              "nodeType": "ArrayTypeName",
                              "src": "11278:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$14_storage_ptr",
                                "typeString": "address payable[14]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3482,
                        "initialValue": {
                          "components": [
                            {
                              "hexValue": "307844383464383332463437433232436635343133614534464532626439443232304645364533446336",
                              "id": 3467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11403:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xD84d832F47C22Cf5413aE4FE2bd9D220FE6E3Dc6"
                            },
                            {
                              "hexValue": "307837423530373735333833643344366630323135413846323930663243396532654542424563656232",
                              "id": 3468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11505:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2"
                            },
                            {
                              "hexValue": "307837433130323842636465374361303345634636446141413963426641303645393331393133456144",
                              "id": 3469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11607:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x7C1028Bcde7Ca03EcF6DaAA9cBfA06E931913EaD"
                            },
                            {
                              "hexValue": "307861353765614263333641343764616535463131303531633833333933383563463935453737323335",
                              "id": 3470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11709:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xa57eaBc36A47dae5F11051c8339385cF95E77235"
                            },
                            {
                              "hexValue": "307833374136464330373963616437393045353536426165646441383739333538653037364546314233",
                              "id": 3471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11811:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x37A6FC079cad790E556BaeddA879358e076EF1B3"
                            },
                            {
                              "hexValue": "307842353536413032363432413066376265386337393933324546424339313546366530343835313437",
                              "id": 3472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11913:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xB556A02642A0f7be8c79932EFBC915F6e0485147"
                            },
                            {
                              "hexValue": "307834423131333737383946463036343036613732624163653637436431354366363738363834346343",
                              "id": 3473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12015:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x4B1137789FF06406a72bAce67Cd15Cf6786844cC"
                            },
                            {
                              "hexValue": "307842643635343439426162463039426535343464363866633743434630434562653239386662323134",
                              "id": 3474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12117:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xBd65449BabF09Be544d68fc7CCF0CEbe298fb214"
                            },
                            {
                              "hexValue": "307832323436323131453731356236353637613846373133383138304546363161373936373865663436",
                              "id": 3475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12219:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x2246211E715b6567a8F7138180EF61a79678ef46"
                            },
                            {
                              "hexValue": "307866324262666131323244343166466346373035363434313537384431303845336334306137453939",
                              "id": 3476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12321:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xf2Bbfa122D41fFcF7056441578D108E3c40a7E99"
                            },
                            {
                              "hexValue": "307866303831383632424636324332344533433730384264426564613234414245364235354534326637",
                              "id": 3477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12423:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xf081862BF62C24E3C708BdBeda24ABE6B55E42f7"
                            },
                            {
                              "hexValue": "307832384363303444634438354334623430633644616434363363363238653938373238616539343936",
                              "id": 3478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12525:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x28Cc04DcD85C4b40c6Dad463c628e98728ae9496"
                            },
                            {
                              "hexValue": "307844433436374442364162644137354536324634383039663361343933346165336163613143333830",
                              "id": 3479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12627:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xDC467DB6AbdA75E62F4809f3a4934ae3aca1C380"
                            },
                            {
                              "hexValue": "307864354364383332384439336266346245663938323446643238384633324338663064613163353531",
                              "id": 3480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12729:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0xd5Cd8328D93bf4bEf9824Fd288F32C8f0da1c551"
                            }
                          ],
                          "id": 3481,
                          "isConstant": false,
                          "isInlineArray": true,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11325:1502:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$14_memory_ptr",
                            "typeString": "address payable[14] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11278:1549:27"
                      },
                      {
                        "assignments": [
                          3484
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3484,
                            "mutability": "mutable",
                            "name": "authorizer",
                            "nodeType": "VariableDeclaration",
                            "scope": 3587,
                            "src": "12838:29:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                              "typeString": "contract ICurrentAuthorizer"
                            },
                            "typeName": {
                              "id": 3483,
                              "name": "ICurrentAuthorizer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2970,
                              "src": "12838:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3487,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3485,
                            "name": "getAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3088,
                            "src": "12870:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$2970_$",
                              "typeString": "function () view returns (contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 3486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12870:15:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12838:47:27"
                      },
                      {
                        "assignments": [
                          3489
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3489,
                            "mutability": "mutable",
                            "name": "addGaugeFactoryRole",
                            "nodeType": "VariableDeclaration",
                            "scope": 3587,
                            "src": "12896:27:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3488,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12896:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3496,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 3492,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "12950:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 3493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "addGaugeFactory",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 402,
                                "src": "12950:27:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILiquidityGaugeFactory_$519_$_t_enum$_GaugeType_$328_$returns$__$",
                                  "typeString": "function IGaugeAdder.addGaugeFactory(contract ILiquidityGaugeFactory,enum IGaugeAdder.GaugeType)"
                                }
                              },
                              "id": 3494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "12950:36:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 3490,
                              "name": "_gaugeAdder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2982,
                              "src": "12926:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                "typeString": "contract IGaugeAdder"
                              }
                            },
                            "id": 3491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getActionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "12926:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                              "typeString": "function (bytes4) view external returns (bytes32)"
                            }
                          },
                          "id": 3495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12926:61:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12896:91:27"
                      },
                      {
                        "assignments": [
                          3498
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3498,
                            "mutability": "mutable",
                            "name": "addArbitrumGaugeRole",
                            "nodeType": "VariableDeclaration",
                            "scope": 3587,
                            "src": "12997:28:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3497,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12997:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3505,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 3501,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "13052:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 3502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "addArbitrumGauge",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 394,
                                "src": "13052:28:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function IGaugeAdder.addArbitrumGauge(address)"
                                }
                              },
                              "id": 3503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "13052:37:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 3499,
                              "name": "_gaugeAdder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2982,
                              "src": "13028:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                "typeString": "contract IGaugeAdder"
                              }
                            },
                            "id": 3500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getActionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "13028:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                              "typeString": "function (bytes4) view external returns (bytes32)"
                            }
                          },
                          "id": 3504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13028:62:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12997:93:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3509,
                              "name": "addGaugeFactoryRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3489,
                              "src": "13227:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3512,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "13256:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13248:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3510,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13248:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13248:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3506,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3484,
                              "src": "13206:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2962,
                            "src": "13206:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13206:56:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3515,
                        "nodeType": "ExpressionStatement",
                        "src": "13206:56:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3519,
                              "name": "_arbitrumGaugeFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2988,
                              "src": "13300:21:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                                "typeString": "contract ISingleRecipientGaugeFactory"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 3520,
                                  "name": "IGaugeAdder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "13323:11:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IGaugeAdder_$403_$",
                                    "typeString": "type(contract IGaugeAdder)"
                                  }
                                },
                                "id": 3521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "GaugeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 328,
                                "src": "13323:21:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_GaugeType_$328_$",
                                  "typeString": "type(enum IGaugeAdder.GaugeType)"
                                }
                              },
                              "id": 3522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Arbitrum",
                              "nodeType": "MemberAccess",
                              "src": "13323:30:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                                "typeString": "contract ISingleRecipientGaugeFactory"
                              },
                              {
                                "typeIdentifier": "t_enum$_GaugeType_$328",
                                "typeString": "enum IGaugeAdder.GaugeType"
                              }
                            ],
                            "expression": {
                              "id": 3516,
                              "name": "_gaugeAdder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2982,
                              "src": "13272:11:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                "typeString": "contract IGaugeAdder"
                              }
                            },
                            "id": 3518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addGaugeFactory",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 402,
                            "src": "13272:27:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILiquidityGaugeFactory_$519_$_t_enum$_GaugeType_$328_$returns$__$",
                              "typeString": "function (contract ILiquidityGaugeFactory,enum IGaugeAdder.GaugeType) external"
                            }
                          },
                          "id": 3523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13272:82:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3524,
                        "nodeType": "ExpressionStatement",
                        "src": "13272:82:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3528,
                              "name": "addGaugeFactoryRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3489,
                              "src": "13386:19:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3531,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "13415:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13407:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3529,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13407:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13407:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3525,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3484,
                              "src": "13364:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revokeRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2969,
                            "src": "13364:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13364:57:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3534,
                        "nodeType": "ExpressionStatement",
                        "src": "13364:57:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3538,
                              "name": "addArbitrumGaugeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3498,
                              "src": "13453:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3541,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "13483:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13475:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3539,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13475:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13475:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3535,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3484,
                              "src": "13432:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2962,
                            "src": "13432:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13432:57:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3544,
                        "nodeType": "ExpressionStatement",
                        "src": "13432:57:27"
                      },
                      {
                        "assignments": [
                          3546
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3546,
                            "mutability": "mutable",
                            "name": "initialRecipientsLength",
                            "nodeType": "VariableDeclaration",
                            "scope": 3587,
                            "src": "13500:31:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3545,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13500:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3549,
                        "initialValue": {
                          "expression": {
                            "id": 3547,
                            "name": "initialRecipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3466,
                            "src": "13534:17:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$14_memory_ptr",
                              "typeString": "address payable[14] memory"
                            }
                          },
                          "id": 3548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13534:24:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13500:58:27"
                      },
                      {
                        "body": {
                          "id": 3575,
                          "nodeType": "Block",
                          "src": "13622:147:27",
                          "statements": [
                            {
                              "assignments": [
                                3561
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3561,
                                  "mutability": "mutable",
                                  "name": "gauge",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3575,
                                  "src": "13636:13:27",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3560,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13636:7:27",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3568,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3563,
                                    "name": "_arbitrumGaugeFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2988,
                                    "src": "13665:21:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                                      "typeString": "contract ISingleRecipientGaugeFactory"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 3564,
                                      "name": "initialRecipients",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3466,
                                      "src": "13688:17:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_payable_$14_memory_ptr",
                                        "typeString": "address payable[14] memory"
                                      }
                                    },
                                    "id": 3566,
                                    "indexExpression": {
                                      "id": 3565,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3551,
                                      "src": "13706:1:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13688:20:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                                      "typeString": "contract ISingleRecipientGaugeFactory"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 3562,
                                  "name": "_deployGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3692,
                                  "src": "13652:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISingleRecipientGaugeFactory_$542_$_t_address_$returns$_t_address_$",
                                    "typeString": "function (contract ISingleRecipientGaugeFactory,address) returns (address)"
                                  }
                                },
                                "id": 3567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13652:57:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "13636:73:27"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3572,
                                    "name": "gauge",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3561,
                                    "src": "13752:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3569,
                                    "name": "_gaugeAdder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2982,
                                    "src": "13723:11:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IGaugeAdder_$403",
                                      "typeString": "contract IGaugeAdder"
                                    }
                                  },
                                  "id": 3571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addArbitrumGauge",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 394,
                                  "src": "13723:28:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 3573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13723:35:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3574,
                              "nodeType": "ExpressionStatement",
                              "src": "13723:35:27"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3554,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3551,
                            "src": "13588:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3555,
                            "name": "initialRecipientsLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3546,
                            "src": "13592:23:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13588:27:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3576,
                        "initializationExpression": {
                          "assignments": [
                            3551
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3551,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 3576,
                              "src": "13573:9:27",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3550,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13573:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3553,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13585:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13573:13:27"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 3558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "13617:3:27",
                            "subExpression": {
                              "id": 3557,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3551,
                              "src": "13617:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3559,
                          "nodeType": "ExpressionStatement",
                          "src": "13617:3:27"
                        },
                        "nodeType": "ForStatement",
                        "src": "13568:201:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3580,
                              "name": "addArbitrumGaugeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3498,
                              "src": "13801:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3583,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "13831:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13823:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3581,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13823:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13823:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3577,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3484,
                              "src": "13779:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revokeRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2969,
                            "src": "13779:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13779:58:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3586,
                        "nodeType": "ExpressionStatement",
                        "src": "13779:58:27"
                      }
                    ]
                  },
                  "id": 3588,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addNewArbitrumGauges",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3461,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11142:2:27"
                  },
                  "returnParameters": {
                    "id": 3462,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11153:0:27"
                  },
                  "scope": 3739,
                  "src": "11112:2732:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3656,
                    "nodeType": "Block",
                    "src": "13889:706:27",
                    "statements": [
                      {
                        "assignments": [
                          3594
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3594,
                            "mutability": "mutable",
                            "name": "deprecatedGauges",
                            "nodeType": "VariableDeclaration",
                            "scope": 3656,
                            "src": "13899:42:27",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$2_memory_ptr",
                              "typeString": "address payable[2]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3591,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13899:15:27",
                                "stateMutability": "payable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 3593,
                              "length": {
                                "hexValue": "32",
                                "id": 3592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13915:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "ArrayTypeName",
                              "src": "13899:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$2_storage_ptr",
                                "typeString": "address payable[2]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3598,
                        "initialValue": {
                          "components": [
                            {
                              "hexValue": "307839666238333132434564464239623335333634464630363331314234323961326634436466343232",
                              "id": 3595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13958:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x9fb8312CEdFB9b35364FF06311B429a2f4Cdf422"
                            },
                            {
                              "hexValue": "307833463832396138333033343535434233364237426366334431626463313844354636393436616541",
                              "id": 3596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14041:42:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x3F829a8303455CB36B7Bcf3D1bdc18D5F6946aeA"
                            }
                          ],
                          "id": 3597,
                          "isConstant": false,
                          "isInlineArray": true,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13944:177:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$2_memory_ptr",
                            "typeString": "address payable[2] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13899:222:27"
                      },
                      {
                        "assignments": [
                          3600
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3600,
                            "mutability": "mutable",
                            "name": "authorizer",
                            "nodeType": "VariableDeclaration",
                            "scope": 3656,
                            "src": "14132:29:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                              "typeString": "contract ICurrentAuthorizer"
                            },
                            "typeName": {
                              "id": 3599,
                              "name": "ICurrentAuthorizer",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 2970,
                              "src": "14132:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3603,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3601,
                            "name": "getAuthorizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3088,
                            "src": "14164:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ICurrentAuthorizer_$2970_$",
                              "typeString": "function () view returns (contract ICurrentAuthorizer)"
                            }
                          },
                          "id": 3602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14164:15:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                            "typeString": "contract ICurrentAuthorizer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14132:47:27"
                      },
                      {
                        "assignments": [
                          3605
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3605,
                            "mutability": "mutable",
                            "name": "killGaugeRole",
                            "nodeType": "VariableDeclaration",
                            "scope": 3656,
                            "src": "14190:21:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3604,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "14190:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3612,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 3608,
                                  "name": "ILiquidityGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 499,
                                  "src": "14245:15:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ILiquidityGauge_$499_$",
                                    "typeString": "type(contract ILiquidityGauge)"
                                  }
                                },
                                "id": 3609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "killGauge",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 495,
                                "src": "14245:25:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$__$returns$__$",
                                  "typeString": "function ILiquidityGauge.killGauge()"
                                }
                              },
                              "id": 3610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "14245:34:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 3606,
                              "name": "_authorizerAdaptor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2976,
                              "src": "14214:18:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              }
                            },
                            "id": 3607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getActionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "14214:30:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bytes32_$",
                              "typeString": "function (bytes4) view external returns (bytes32)"
                            }
                          },
                          "id": 3611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14214:66:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14190:90:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3616,
                              "name": "killGaugeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3605,
                              "src": "14312:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3619,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14335:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14327:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3617,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14327:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14327:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3613,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3600,
                              "src": "14291:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "grantRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2962,
                            "src": "14291:20:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14291:50:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3622,
                        "nodeType": "ExpressionStatement",
                        "src": "14291:50:27"
                      },
                      {
                        "assignments": [
                          3624
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3624,
                            "mutability": "mutable",
                            "name": "deprecatedGaugesLength",
                            "nodeType": "VariableDeclaration",
                            "scope": 3656,
                            "src": "14352:30:27",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3623,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14352:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3627,
                        "initialValue": {
                          "expression": {
                            "id": 3625,
                            "name": "deprecatedGauges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3594,
                            "src": "14385:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$2_memory_ptr",
                              "typeString": "address payable[2] memory"
                            }
                          },
                          "id": 3626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14385:23:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14352:56:27"
                      },
                      {
                        "body": {
                          "id": 3644,
                          "nodeType": "Block",
                          "src": "14471:56:27",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3639,
                                      "name": "deprecatedGauges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3594,
                                      "src": "14496:16:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_payable_$2_memory_ptr",
                                        "typeString": "address payable[2] memory"
                                      }
                                    },
                                    "id": 3641,
                                    "indexExpression": {
                                      "id": 3640,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3629,
                                      "src": "14513:1:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14496:19:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 3638,
                                  "name": "_killGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3710,
                                  "src": "14485:10:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 3642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14485:31:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3643,
                              "nodeType": "ExpressionStatement",
                              "src": "14485:31:27"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3632,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3629,
                            "src": "14438:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3633,
                            "name": "deprecatedGaugesLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3624,
                            "src": "14442:22:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14438:26:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3645,
                        "initializationExpression": {
                          "assignments": [
                            3629
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3629,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 3645,
                              "src": "14423:9:27",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3628,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14423:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3631,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14435:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14423:13:27"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 3636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "14466:3:27",
                            "subExpression": {
                              "id": 3635,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3629,
                              "src": "14466:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3637,
                          "nodeType": "ExpressionStatement",
                          "src": "14466:3:27"
                        },
                        "nodeType": "ForStatement",
                        "src": "14418:109:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3649,
                              "name": "killGaugeRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3605,
                              "src": "14559:13:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3652,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14582:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_veBALL2GaugeSetupCoordinator_$3739",
                                    "typeString": "contract veBALL2GaugeSetupCoordinator"
                                  }
                                ],
                                "id": 3651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14574:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3650,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14574:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14574:13:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3646,
                              "name": "authorizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3600,
                              "src": "14537:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurrentAuthorizer_$2970",
                                "typeString": "contract ICurrentAuthorizer"
                              }
                            },
                            "id": 3648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revokeRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2969,
                            "src": "14537:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) external"
                            }
                          },
                          "id": 3654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14537:51:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3655,
                        "nodeType": "ExpressionStatement",
                        "src": "14537:51:27"
                      }
                    ]
                  },
                  "id": 3657,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deprecateOldGauges",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3589,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13878:2:27"
                  },
                  "returnParameters": {
                    "id": 3590,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13889:0:27"
                  },
                  "scope": 3739,
                  "src": "13850:745:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3691,
                    "nodeType": "Block",
                    "src": "14712:285:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 3674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3666,
                            "name": "gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3664,
                            "src": "14786:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3671,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3661,
                                    "src": "14828:9:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3669,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3659,
                                    "src": "14802:7:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                                      "typeString": "contract ISingleRecipientGaugeFactory"
                                    }
                                  },
                                  "id": 3670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getRecipientGauge",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 533,
                                  "src": "14802:25:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_ILiquidityGauge_$499_$",
                                    "typeString": "function (address) view external returns (contract ILiquidityGauge)"
                                  }
                                },
                                "id": 3672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14802:36:27",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                  "typeString": "contract ILiquidityGauge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ILiquidityGauge_$499",
                                  "typeString": "contract ILiquidityGauge"
                                }
                              ],
                              "id": 3668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14794:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3667,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14794:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14794:45:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14786:53:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3675,
                        "nodeType": "ExpressionStatement",
                        "src": "14786:53:27"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3676,
                            "name": "gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3664,
                            "src": "14853:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14870:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14862:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3677,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14862:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14862:10:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "14853:19:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3690,
                        "nodeType": "IfStatement",
                        "src": "14849:142:27",
                        "trueBody": {
                          "id": 3689,
                          "nodeType": "Block",
                          "src": "14874:117:27",
                          "statements": [
                            {
                              "expression": {
                                "id": 3687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3682,
                                  "name": "gauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3664,
                                  "src": "14947:5:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 3685,
                                      "name": "recipient",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3661,
                                      "src": "14970:9:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3683,
                                      "name": "factory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3659,
                                      "src": "14955:7:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                                        "typeString": "contract ISingleRecipientGaugeFactory"
                                      }
                                    },
                                    "id": 3684,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "create",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 518,
                                    "src": "14955:14:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
                                      "typeString": "function (address) external returns (address)"
                                    }
                                  },
                                  "id": 3686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14955:25:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14947:33:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3688,
                              "nodeType": "ExpressionStatement",
                              "src": "14947:33:27"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 3692,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deployGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3659,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 3692,
                        "src": "14623:36:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                          "typeString": "contract ISingleRecipientGaugeFactory"
                        },
                        "typeName": {
                          "id": 3658,
                          "name": "ISingleRecipientGaugeFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 542,
                          "src": "14623:28:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISingleRecipientGaugeFactory_$542",
                            "typeString": "contract ISingleRecipientGaugeFactory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3661,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 3692,
                        "src": "14661:17:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14661:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14622:57:27"
                  },
                  "returnParameters": {
                    "id": 3665,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3664,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 3692,
                        "src": "14697:13:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3663,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14697:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14696:15:27"
                  },
                  "scope": 3739,
                  "src": "14601:396:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3709,
                    "nodeType": "Block",
                    "src": "15046:120:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3700,
                              "name": "gauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3694,
                              "src": "15093:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 3703,
                                      "name": "ILiquidityGauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 499,
                                      "src": "15123:15:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ILiquidityGauge_$499_$",
                                        "typeString": "type(contract ILiquidityGauge)"
                                      }
                                    },
                                    "id": 3704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "killGauge",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 495,
                                    "src": "15123:25:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$__$returns$__$",
                                      "typeString": "function ILiquidityGauge.killGauge()"
                                    }
                                  },
                                  "id": 3705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "15123:34:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 3701,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "15100:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "15100:22:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 3706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15100:58:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3697,
                                "name": "getAuthorizerAdaptor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3096,
                                "src": "15056:20:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAuthorizerAdaptor_$28_$",
                                  "typeString": "function () view returns (contract IAuthorizerAdaptor)"
                                }
                              },
                              "id": 3698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15056:22:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              }
                            },
                            "id": 3699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "performAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "15056:36:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) payable external returns (bytes memory)"
                            }
                          },
                          "id": 3707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15056:103:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 3708,
                        "nodeType": "ExpressionStatement",
                        "src": "15056:103:27"
                      }
                    ]
                  },
                  "id": 3710,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_killGauge",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3694,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nodeType": "VariableDeclaration",
                        "scope": 3710,
                        "src": "15023:13:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3693,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15023:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15022:15:27"
                  },
                  "returnParameters": {
                    "id": 3696,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15046:0:27"
                  },
                  "scope": 3739,
                  "src": "15003:163:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3737,
                    "nodeType": "Block",
                    "src": "15255:208:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3722,
                                  "name": "_gaugeController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2980,
                                  "src": "15323:16:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IGaugeController_$471",
                                    "typeString": "contract IGaugeController"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IGaugeController_$471",
                                    "typeString": "contract IGaugeController"
                                  }
                                ],
                                "id": 3721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15315:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3720,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15315:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15315:25:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 3726,
                                      "name": "IGaugeController",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 471,
                                      "src": "15377:16:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IGaugeController_$471_$",
                                        "typeString": "type(contract IGaugeController)"
                                      }
                                    },
                                    "id": 3727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "change_type_weight",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 446,
                                    "src": "15377:35:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_int128_$_t_uint256_$returns$__$",
                                      "typeString": "function IGaugeController.change_type_weight(int128,uint256)"
                                    }
                                  },
                                  "id": 3728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "15377:44:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 3731,
                                      "name": "typeId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3712,
                                      "src": "15430:6:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_GaugeType_$328",
                                        "typeString": "enum IGaugeAdder.GaugeType"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_GaugeType_$328",
                                        "typeString": "enum IGaugeAdder.GaugeType"
                                      }
                                    ],
                                    "id": 3730,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15423:6:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int128_$",
                                      "typeString": "type(int128)"
                                    },
                                    "typeName": {
                                      "id": 3729,
                                      "name": "int128",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15423:6:27",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15423:14:27",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int128",
                                    "typeString": "int128"
                                  }
                                },
                                {
                                  "id": 3733,
                                  "name": "weight",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3714,
                                  "src": "15439:6:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_int128",
                                    "typeString": "int128"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3724,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "15354:3:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "15354:22:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 3734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15354:92:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3717,
                                "name": "getAuthorizerAdaptor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3096,
                                "src": "15265:20:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAuthorizerAdaptor_$28_$",
                                  "typeString": "function () view returns (contract IAuthorizerAdaptor)"
                                }
                              },
                              "id": 3718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15265:22:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAuthorizerAdaptor_$28",
                                "typeString": "contract IAuthorizerAdaptor"
                              }
                            },
                            "id": 3719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "performAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "15265:36:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory) payable external returns (bytes memory)"
                            }
                          },
                          "id": 3735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15265:191:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 3736,
                        "nodeType": "ExpressionStatement",
                        "src": "15265:191:27"
                      }
                    ]
                  },
                  "id": 3738,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setGaugeTypeWeight",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3712,
                        "mutability": "mutable",
                        "name": "typeId",
                        "nodeType": "VariableDeclaration",
                        "scope": 3738,
                        "src": "15201:28:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GaugeType_$328",
                          "typeString": "enum IGaugeAdder.GaugeType"
                        },
                        "typeName": {
                          "id": 3711,
                          "name": "IGaugeAdder.GaugeType",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 328,
                          "src": "15201:21:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GaugeType_$328",
                            "typeString": "enum IGaugeAdder.GaugeType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3714,
                        "mutability": "mutable",
                        "name": "weight",
                        "nodeType": "VariableDeclaration",
                        "scope": 3738,
                        "src": "15231:14:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3713,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15231:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15200:46:27"
                  },
                  "returnParameters": {
                    "id": 3716,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15255:0:27"
                  },
                  "scope": 3739,
                  "src": "15172:291:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 3740,
              "src": "2406:13059:27"
            }
          ],
          "src": "688:14778:27"
        },
        "id": 27
      }
    }
  }
}
